- Output:
    clique_trees:
    - avg_size: [9.6145648312611, 15.034285714285714, 7.24380704041721, 10.209082308420056,
        6.971069182389937, 6.790669122160835, 9.475352112676056, 10.182765151515152,
        15.745864661654135, 11.12668743509865]
      avg_weight: [0.7342222222222222, 0.7496423462088698, 0.7253750815394651, 0.7490530303030303,
        0.6821900566393958, 0.6523341523341524, 0.6731277533039648, 0.7137440758293839,
        0.7093373493975904, 0.7432432432432432]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 245, 2: 259, 3: 193, 4: 104, 5: 75, 6: 42, 7: 37, 8: 19, 9: 26, 10: 23,
          11: 18, 12: 5, 13: 13, 14: 5, 15: 3, 16: 5, 17: 2, 18: 2, 19: 1, 20: 4,
          22: 3, 23: 1, 24: 3, 25: 2, 26: 3, 27: 2, 29: 1, 31: 2, 34: 1, 35: 1, 37: 1,
          38: 1, 39: 3, 41: 1, 42: 1, 43: 1, 45: 1, 48: 1, 52: 1, 56: 1, 60: 1, 61: 1,
          62: 1, 75: 1, 83: 1, 84: 1, 95: 1, 160: 1, 180: 1, 286: 1, 412: 1, 531: 1,
          691: 1, 2973: 1}
      - !!python/object/apply:collections.Counter
        - {1: 136, 2: 152, 3: 110, 4: 93, 5: 42, 6: 25, 7: 28, 8: 11, 9: 12, 10: 11,
          11: 7, 12: 8, 13: 5, 14: 5, 15: 8, 16: 2, 17: 2, 18: 3, 19: 1, 20: 3, 21: 2,
          22: 1, 23: 2, 24: 3, 26: 2, 27: 1, 32: 1, 35: 1, 36: 1, 37: 1, 41: 1, 45: 2,
          46: 1, 53: 2, 56: 1, 62: 1, 75: 1, 76: 1, 95: 1, 102: 1, 114: 1, 142: 1,
          167: 1, 199: 1, 270: 1, 900: 1, 932: 1, 1991: 1, 2028: 1}
      - !!python/object/apply:collections.Counter
        - {1: 338, 2: 353, 3: 277, 4: 158, 5: 106, 6: 61, 7: 38, 8: 41, 9: 17, 10: 15,
          11: 11, 12: 19, 13: 9, 14: 6, 15: 7, 16: 5, 17: 4, 18: 4, 19: 7, 20: 6,
          21: 6, 22: 1, 23: 3, 24: 2, 25: 2, 26: 3, 27: 1, 28: 3, 29: 2, 30: 1, 31: 2,
          32: 2, 33: 2, 37: 1, 38: 1, 39: 1, 42: 1, 44: 1, 45: 1, 48: 1, 57: 1, 58: 1,
          59: 1, 61: 1, 88: 1, 92: 1, 97: 1, 98: 1, 109: 1, 122: 1, 130: 1, 131: 1,
          188: 1, 193: 1, 3124: 1}
      - !!python/object/apply:collections.Counter
        - {1: 223, 2: 261, 3: 172, 4: 106, 5: 65, 6: 30, 7: 33, 8: 22, 9: 22, 10: 15,
          11: 7, 12: 10, 13: 5, 14: 9, 15: 3, 16: 4, 17: 2, 18: 3, 19: 3, 20: 1, 21: 2,
          22: 3, 23: 3, 24: 1, 25: 1, 27: 2, 28: 3, 29: 1, 31: 1, 32: 2, 34: 1, 35: 3,
          36: 1, 38: 1, 39: 2, 41: 1, 42: 1, 45: 1, 47: 2, 49: 1, 50: 1, 52: 2, 54: 1,
          57: 1, 58: 1, 59: 1, 65: 2, 66: 2, 71: 2, 79: 1, 81: 2, 83: 2, 119: 1, 131: 1,
          136: 1, 142: 1, 175: 1, 234: 1, 280: 1, 286: 1, 369: 1, 3069: 1}
      - !!python/object/apply:collections.Counter
        - {1: 383, 2: 381, 3: 273, 4: 165, 5: 107, 6: 57, 7: 44, 8: 23, 9: 23, 10: 16,
          11: 14, 12: 17, 13: 2, 14: 10, 15: 8, 16: 4, 17: 4, 18: 6, 19: 1, 21: 3,
          22: 1, 23: 4, 26: 2, 27: 1, 28: 1, 29: 2, 30: 2, 32: 1, 33: 2, 35: 1, 36: 1,
          37: 3, 43: 2, 45: 1, 48: 3, 50: 1, 51: 2, 53: 1, 54: 1, 58: 1, 63: 2, 64: 1,
          65: 1, 67: 1, 69: 1, 71: 2, 74: 1, 77: 1, 80: 1, 93: 1, 112: 1, 125: 1,
          334: 1, 3119: 1}
      - !!python/object/apply:collections.Counter
        - {1: 388, 2: 375, 3: 291, 4: 167, 5: 89, 6: 61, 7: 45, 8: 30, 9: 27, 10: 19,
          11: 14, 12: 15, 13: 11, 14: 5, 15: 7, 16: 8, 17: 8, 18: 9, 19: 6, 20: 5,
          21: 4, 22: 4, 23: 4, 24: 1, 27: 1, 28: 4, 29: 2, 30: 2, 31: 3, 34: 1, 35: 1,
          40: 3, 43: 1, 45: 2, 48: 1, 50: 1, 51: 1, 54: 1, 60: 1, 62: 2, 69: 1, 73: 1,
          81: 1, 85: 1, 93: 1, 105: 1, 119: 1, 185: 1, 3135: 1}
      - !!python/object/apply:collections.Counter
        - {1: 257, 2: 272, 3: 199, 4: 109, 5: 76, 6: 51, 7: 19, 8: 26, 9: 13, 10: 14,
          11: 10, 12: 8, 13: 1, 14: 9, 15: 5, 16: 5, 17: 2, 18: 3, 19: 3, 20: 2, 21: 2,
          22: 3, 23: 2, 24: 3, 25: 2, 26: 2, 27: 2, 28: 1, 29: 1, 30: 1, 31: 2, 33: 4,
          36: 1, 40: 1, 44: 2, 45: 1, 46: 1, 47: 1, 53: 1, 58: 1, 67: 1, 68: 1, 74: 1,
          75: 1, 80: 1, 82: 1, 83: 1, 90: 1, 113: 1, 119: 1, 130: 1, 139: 1, 154: 1,
          201: 1, 350: 1, 515: 1, 527: 1, 3018: 1}
      - !!python/object/apply:collections.Counter
        - {1: 219, 2: 248, 3: 187, 4: 105, 5: 66, 6: 36, 7: 24, 8: 21, 9: 14, 10: 15,
          11: 9, 12: 7, 13: 9, 14: 9, 15: 4, 16: 3, 17: 5, 18: 4, 19: 3, 20: 3, 21: 2,
          22: 6, 23: 3, 24: 2, 25: 1, 26: 5, 27: 2, 28: 1, 30: 2, 31: 2, 32: 1, 33: 2,
          35: 2, 36: 1, 37: 1, 38: 1, 39: 2, 41: 1, 43: 1, 44: 1, 45: 1, 50: 2, 51: 1,
          53: 1, 60: 1, 62: 3, 63: 1, 65: 1, 68: 1, 73: 1, 76: 2, 77: 1, 87: 1, 92: 1,
          94: 1, 101: 1, 155: 1, 157: 1, 283: 1, 384: 1, 568: 1, 3042: 1}
      - !!python/object/apply:collections.Counter
        - {1: 141, 2: 129, 3: 108, 4: 81, 5: 40, 6: 32, 7: 13, 8: 14, 9: 9, 10: 14,
          11: 6, 12: 8, 13: 3, 14: 4, 15: 5, 16: 2, 17: 4, 18: 4, 20: 2, 21: 3, 22: 1,
          23: 1, 24: 1, 25: 1, 30: 3, 31: 1, 32: 1, 35: 1, 36: 2, 37: 2, 38: 1, 42: 2,
          46: 1, 49: 1, 51: 2, 56: 3, 71: 1, 76: 1, 81: 1, 84: 1, 91: 1, 93: 1, 101: 2,
          179: 1, 206: 1, 215: 1, 222: 1, 224: 1, 241: 1, 391: 1, 442: 1, 469: 1,
          943: 1, 2856: 1}
      - !!python/object/apply:collections.Counter
        - {1: 186, 2: 217, 3: 168, 4: 122, 5: 54, 6: 44, 7: 25, 8: 19, 9: 16, 10: 13,
          11: 10, 12: 5, 13: 5, 14: 5, 15: 4, 16: 4, 17: 3, 18: 3, 19: 2, 20: 4, 21: 5,
          22: 3, 23: 4, 24: 2, 25: 2, 26: 2, 29: 4, 32: 1, 33: 2, 34: 2, 36: 1, 38: 2,
          39: 2, 46: 2, 51: 1, 54: 1, 66: 1, 71: 1, 76: 1, 80: 1, 81: 2, 85: 1, 87: 1,
          96: 1, 136: 1, 153: 1, 176: 1, 201: 1, 271: 1, 319: 1, 437: 1, 878: 1, 2940: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 584, 1: 338, 2: 146, 3: 37, 4: 15, 5: 5}
      - !!python/object/apply:collections.Counter
        - {0: 357, 1: 215, 2: 85, 3: 31, 4: 9, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 788, 1: 487, 2: 176, 3: 61, 4: 15, 5: 6}
      - !!python/object/apply:collections.Counter
        - {0: 543, 1: 331, 2: 116, 3: 45, 4: 13, 5: 7, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 857, 1: 468, 2: 192, 3: 59, 4: 11, 5: 1, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 926, 1: 428, 2: 206, 3: 52, 4: 14, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 624, 1: 325, 2: 134, 3: 41, 4: 8, 5: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 549, 1: 314, 2: 148, 3: 35, 4: 7, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 346, 1: 204, 2: 83, 3: 24, 4: 6, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 482, 1: 307, 2: 126, 3: 37, 4: 6, 5: 3, 6: 1}
      height: [6, 5, 7, 6, 6, 6, 7, 5, 7, 8]
      max_size: [2973, 2028, 3124, 3069, 3119, 3135, 3018, 3042, 2856, 2940]
      max_weight: [5, 5, 5, 6, 6, 5, 6, 5, 5, 6]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [1126, 700, 1534, 1057, 1590, 1629, 1136, 1056, 665, 963]
      num_edges: [1125, 699, 1533, 1056, 1589, 1628, 1135, 1055, 664, 962]
      sum_size: [10826, 10524, 11112, 10791, 11084, 11062, 10764, 10753, 10471, 10715]
      sum_weight: [826, 524, 1112, 791, 1084, 1062, 764, 753, 471, 715]
      width: [392, 168, 595, 380, 649, 630, 392, 356, 215, 341]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 4999500.0,
    n: 10000, seed: None}
  Stats:
    edges: [4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500,
      4999500, 4999500]
    randoms: [30100, 30797, 29622, 30524, 29330, 29251, 29790, 30227, 30762, 30377]
    total: [0.239802263368235, 0.221069103702495, 0.232065054682762, 0.2316407286119,
      0.267729951105212, 0.278302941504791, 0.215571640271172, 0.235598601874615,
      0.290905391672084, 0.245598086402074]
  Times:
    t_expand_cliques: [0.115098190691386, 0.101145612116815, 0.110907501354395, 0.102040690924373,
      0.143481610773172, 0.106168909086007, 0.099398126069563, 0.108644884139867,
      0.128903296327413, 0.107442228671129]
    t_merge_cliques: [0.124704072676849, 0.119923491585681, 0.121157553328366, 0.129600037687528,
      0.12424834033204, 0.172134032418784, 0.116173514201609, 0.126953717734748, 0.16200209534467,
      0.138155857730945]
- Output:
    clique_trees:
    - avg_size: [40.724, 33.42483660130719, 24.02576112412178, 16.564387917329093,
        15.44918998527246, 22.233905579399142, 26.45618556701031, 16.848142164781905,
        22.90222222222222, 31.732919254658384]
      avg_weight: [0.7269076305220884, 0.7475409836065574, 0.607981220657277, 0.6671974522292994,
        0.7227138643067846, 0.7763440860215054, 0.6847545219638242, 0.6941747572815534,
        0.6815144766146993, 0.6791277258566978]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 41, 2: 64, 3: 33, 4: 23, 5: 21, 6: 11, 7: 2, 8: 9, 9: 1, 10: 2, 11: 7,
          12: 3, 13: 2, 14: 2, 15: 1, 16: 1, 17: 2, 18: 1, 21: 2, 22: 1, 23: 1, 24: 1,
          26: 1, 27: 1, 29: 1, 34: 1, 35: 1, 38: 1, 39: 1, 41: 1, 47: 2, 49: 1, 51: 1,
          66: 1, 67: 1, 71: 1, 101: 1, 380: 1, 3464: 1, 4562: 1}
      - !!python/object/apply:collections.Counter
        - {1: 61, 2: 68, 3: 47, 4: 30, 5: 17, 6: 15, 7: 9, 8: 11, 9: 3, 10: 6, 11: 1,
          12: 1, 13: 4, 14: 1, 15: 2, 17: 2, 18: 2, 19: 1, 20: 2, 21: 1, 24: 1, 26: 2,
          28: 3, 31: 3, 32: 1, 33: 1, 37: 1, 57: 1, 62: 1, 63: 1, 66: 1, 71: 1, 78: 1,
          109: 1, 120: 1, 3862: 1, 4245: 1}
      - !!python/object/apply:collections.Counter
        - {1: 82, 2: 109, 3: 66, 4: 43, 5: 24, 6: 15, 7: 10, 8: 6, 9: 3, 10: 11, 11: 1,
          12: 5, 13: 4, 14: 4, 15: 3, 16: 3, 17: 1, 18: 1, 19: 1, 20: 1, 21: 2, 22: 1,
          23: 1, 24: 3, 25: 2, 26: 1, 28: 2, 29: 2, 30: 1, 31: 1, 32: 1, 35: 1, 38: 1,
          50: 1, 54: 2, 56: 1, 57: 1, 58: 1, 62: 2, 106: 1, 130: 1, 157: 1, 343: 1,
          411: 1, 1049: 1, 5614: 1}
      - !!python/object/apply:collections.Counter
        - {1: 144, 2: 141, 3: 95, 4: 65, 5: 38, 6: 40, 7: 21, 8: 15, 9: 8, 10: 5,
          11: 6, 12: 2, 13: 3, 14: 1, 15: 1, 16: 1, 17: 2, 18: 2, 19: 3, 20: 1, 21: 1,
          22: 4, 23: 2, 24: 1, 25: 1, 26: 2, 28: 1, 30: 2, 34: 1, 37: 1, 39: 1, 41: 2,
          42: 1, 44: 1, 50: 1, 52: 2, 58: 2, 59: 2, 63: 1, 79: 1, 87: 1, 101: 1, 104: 1,
          1269: 1, 5595: 1}
      - !!python/object/apply:collections.Counter
        - {1: 128, 2: 168, 3: 116, 4: 57, 5: 47, 6: 24, 7: 17, 8: 15, 9: 17, 10: 10,
          11: 12, 12: 6, 13: 3, 14: 5, 15: 3, 16: 4, 17: 2, 18: 2, 19: 2, 20: 5, 21: 1,
          22: 3, 23: 1, 25: 1, 26: 2, 27: 3, 28: 1, 29: 2, 30: 1, 31: 2, 41: 1, 43: 1,
          44: 2, 54: 1, 55: 2, 63: 1, 67: 1, 72: 1, 76: 1, 82: 1, 99: 1, 120: 1, 127: 1,
          148: 1, 297: 1, 298: 1, 5718: 1}
      - !!python/object/apply:collections.Counter
        - {1: 88, 2: 100, 3: 74, 4: 52, 5: 32, 6: 16, 7: 13, 8: 11, 9: 6, 10: 8, 11: 5,
          12: 2, 13: 3, 14: 5, 15: 3, 16: 2, 17: 5, 18: 1, 19: 6, 21: 1, 22: 3, 24: 1,
          25: 2, 27: 1, 28: 1, 30: 1, 33: 1, 40: 1, 42: 1, 44: 1, 45: 1, 48: 1, 50: 1,
          56: 1, 58: 1, 70: 1, 71: 1, 73: 1, 87: 1, 93: 1, 127: 1, 143: 1, 160: 1,
          161: 1, 187: 1, 191: 1, 248: 1, 280: 1, 336: 1, 5703: 1}
      - !!python/object/apply:collections.Counter
        - {1: 74, 2: 87, 3: 61, 4: 43, 5: 20, 6: 15, 7: 11, 8: 13, 9: 6, 10: 3, 11: 4,
          12: 3, 13: 3, 14: 1, 15: 6, 16: 1, 17: 4, 18: 1, 19: 3, 20: 2, 21: 3, 22: 1,
          23: 2, 24: 2, 25: 1, 26: 1, 28: 2, 30: 2, 31: 1, 43: 1, 44: 1, 48: 1, 60: 1,
          65: 1, 77: 1, 104: 1, 211: 1, 329: 1, 587: 1, 1291: 1, 5549: 1}
      - !!python/object/apply:collections.Counter
        - {1: 130, 2: 148, 3: 91, 4: 59, 5: 35, 6: 28, 7: 17, 8: 22, 9: 11, 10: 8,
          11: 4, 12: 6, 13: 7, 14: 3, 15: 6, 16: 4, 17: 2, 18: 3, 19: 2, 20: 1, 22: 2,
          23: 1, 24: 1, 26: 2, 29: 1, 31: 1, 32: 1, 33: 2, 35: 3, 39: 1, 40: 1, 56: 1,
          64: 1, 66: 1, 75: 2, 79: 1, 80: 1, 83: 1, 93: 1, 132: 1, 154: 1, 183: 1,
          206: 1, 223: 1, 362: 1, 5712: 1}
      - !!python/object/apply:collections.Counter
        - {1: 96, 2: 107, 3: 77, 4: 44, 5: 20, 6: 17, 7: 14, 8: 10, 9: 7, 10: 3, 11: 7,
          12: 3, 13: 1, 14: 3, 15: 4, 16: 2, 17: 1, 18: 1, 19: 2, 20: 2, 25: 2, 26: 2,
          27: 1, 28: 1, 30: 1, 31: 1, 34: 1, 38: 1, 40: 1, 48: 1, 51: 1, 52: 1, 53: 1,
          54: 1, 72: 1, 74: 1, 75: 1, 80: 1, 94: 1, 114: 1, 128: 1, 149: 1, 219: 1,
          224: 1, 232: 1, 1074: 1, 5620: 1}
      - !!python/object/apply:collections.Counter
        - {1: 69, 2: 63, 3: 51, 4: 39, 5: 19, 6: 9, 7: 8, 8: 3, 9: 5, 10: 4, 11: 5,
          12: 5, 13: 2, 14: 2, 15: 2, 16: 5, 17: 2, 19: 1, 20: 1, 22: 2, 23: 2, 24: 1,
          25: 1, 26: 2, 27: 2, 29: 1, 31: 1, 32: 1, 33: 1, 34: 2, 45: 1, 46: 1, 50: 1,
          56: 1, 57: 1, 62: 1, 86: 1, 347: 1, 492: 1, 2034: 1, 5335: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 122, 1: 87, 2: 30, 3: 6, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 160, 1: 83, 2: 45, 3: 13, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 240, 1: 133, 2: 35, 3: 16, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 348, 1: 181, 2: 68, 3: 23, 4: 7, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 341, 1: 217, 2: 91, 3: 25, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 230, 1: 141, 2: 66, 3: 25, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 206, 1: 113, 2: 52, 3: 16}
      - !!python/object/apply:collections.Counter
        - {0: 320, 1: 205, 2: 65, 3: 19, 4: 8, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 244, 1: 123, 2: 68, 3: 10, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 176, 1: 88, 2: 44, 3: 10, 4: 3}
      height: [3, 3, 4, 4, 5, 3, 5, 4, 3, 4]
      max_size: [4562, 4245, 5614, 5595, 5718, 5703, 5549, 5712, 5620, 5335]
      max_weight: [4, 4, 4, 5, 4, 5, 3, 5, 5, 4]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [250, 306, 427, 629, 679, 466, 388, 619, 450, 322]
      num_edges: [249, 305, 426, 628, 678, 465, 387, 618, 449, 321]
      sum_size: [10181, 10228, 10259, 10419, 10490, 10361, 10265, 10429, 10306, 10218]
      sum_weight: [181, 228, 259, 419, 490, 361, 265, 429, 306, 218]
      width: [126, 142, 241, 387, 423, 301, 227, 418, 271, 185]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 16498350.0,
    n: 10000, seed: None}
  Stats:
    edges: [16498348, 16498349, 16498350, 16498350, 16498350, 16498350, 16498349,
      16498350, 16498350, 16498349]
    randoms: [31233, 31169, 30335, 30718, 30348, 31065, 30816, 31006, 31076, 31005]
    total: [0.263409881574452, 0.264793805863484, 0.277997754451413, 0.282106173005557,
      0.26152106729443, 0.259104491063038, 0.269710253226739, 0.249204004573027, 0.232351466246278,
      0.250887995327293]
  Times:
    t_expand_cliques: [0.117846581034502, 0.113121302295287, 0.115989855773513, 0.134490199364979,
      0.113036641904641, 0.105293629885939, 0.102842916400254, 0.104238788728289,
      0.106687453978715, 0.104813318718037]
    t_merge_cliques: [0.145563300539949, 0.151672503568197, 0.162007898677899, 0.147615973640578,
      0.148484425389789, 0.153810861177099, 0.166867336826485, 0.144965215844739,
      0.125664012267563, 0.146074676609256]
- Output:
    clique_trees:
    - avg_size: [28.352777777777778, 32.040752351097176, 34.083333333333336, 42.09504132231405,
        23.94418604651163, 37.30769230769231, 101.77777777777777, 74.26470588235294,
        32.384126984126986, 22.62363238512035]
      avg_weight: [0.5766016713091922, 0.6949685534591195, 0.7525083612040134, 0.7759336099585062,
        0.6899766899766899, 0.6801470588235294, 0.7755102040816326, 0.7407407407407407,
        0.6401273885350318, 0.743421052631579]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 73, 2: 86, 3: 57, 4: 34, 5: 13, 6: 15, 7: 10, 8: 12, 9: 6, 10: 2, 11: 9,
          12: 5, 13: 1, 14: 1, 15: 7, 16: 1, 17: 2, 18: 1, 22: 3, 25: 2, 29: 2, 31: 1,
          32: 1, 34: 1, 37: 1, 43: 1, 46: 1, 62: 1, 74: 1, 76: 1, 82: 1, 91: 1, 94: 1,
          102: 1, 147: 1, 189: 1, 230: 1, 305: 1, 7052: 1}
      - !!python/object/apply:collections.Counter
        - {1: 70, 2: 66, 3: 45, 4: 35, 5: 15, 6: 19, 7: 10, 8: 8, 9: 8, 10: 1, 11: 3,
          12: 5, 13: 2, 14: 1, 15: 2, 16: 2, 17: 1, 18: 1, 19: 2, 20: 1, 22: 1, 26: 1,
          29: 2, 30: 1, 33: 1, 35: 1, 46: 1, 48: 2, 52: 1, 54: 1, 67: 1, 78: 1, 85: 1,
          99: 1, 104: 1, 107: 1, 190: 1, 396: 1, 434: 1, 7039: 1}
      - !!python/object/apply:collections.Counter
        - {1: 52, 2: 54, 3: 51, 4: 33, 5: 25, 6: 13, 7: 6, 8: 6, 9: 7, 10: 3, 11: 4,
          12: 4, 13: 7, 14: 2, 16: 4, 17: 3, 20: 1, 27: 1, 28: 2, 29: 2, 30: 1, 32: 1,
          35: 1, 36: 3, 53: 1, 60: 1, 62: 1, 66: 1, 69: 1, 72: 1, 73: 1, 88: 1, 119: 1,
          124: 1, 183: 1, 306: 1, 381: 1, 7046: 1}
      - !!python/object/apply:collections.Counter
        - {1: 54, 2: 52, 3: 41, 4: 29, 5: 11, 6: 8, 7: 6, 8: 5, 9: 4, 10: 3, 11: 2,
          12: 1, 13: 2, 14: 1, 15: 5, 16: 1, 19: 2, 22: 1, 24: 1, 26: 1, 29: 1, 30: 1,
          36: 1, 37: 1, 42: 2, 83: 1, 94: 1, 152: 1, 259: 1, 1575: 1, 6885: 1}
      - !!python/object/apply:collections.Counter
        - {1: 91, 2: 91, 3: 71, 4: 34, 5: 24, 6: 16, 7: 9, 8: 8, 9: 7, 10: 5, 11: 5,
          12: 9, 13: 3, 14: 2, 15: 5, 16: 3, 17: 3, 18: 3, 19: 1, 20: 2, 21: 3, 22: 1,
          23: 2, 24: 5, 26: 2, 27: 3, 29: 1, 30: 2, 32: 3, 33: 1, 34: 3, 35: 1, 36: 1,
          40: 1, 42: 1, 47: 1, 49: 1, 61: 1, 65: 1, 98: 1, 170: 1, 295: 1, 7059: 1}
      - !!python/object/apply:collections.Counter
        - {1: 54, 2: 50, 3: 51, 4: 37, 5: 11, 6: 8, 7: 8, 8: 6, 9: 6, 10: 6, 11: 2,
          12: 1, 13: 4, 14: 2, 15: 2, 17: 3, 20: 2, 21: 3, 22: 1, 28: 1, 29: 1, 31: 1,
          32: 2, 34: 1, 40: 1, 42: 1, 50: 1, 59: 1, 62: 1, 70: 1, 74: 1, 95: 1, 1505: 1,
          6906: 1}
      - !!python/object/apply:collections.Counter
        - {1: 24, 2: 18, 3: 11, 4: 11, 5: 5, 6: 4, 7: 1, 9: 5, 10: 1, 11: 1, 12: 1,
          13: 3, 14: 1, 18: 3, 19: 1, 21: 1, 22: 1, 23: 1, 25: 1, 27: 1, 156: 1, 264: 1,
          2555: 1, 6586: 1}
      - !!python/object/apply:collections.Counter
        - {1: 26, 2: 26, 3: 23, 4: 16, 5: 10, 6: 6, 7: 4, 8: 2, 9: 1, 10: 2, 11: 1,
          12: 1, 13: 1, 14: 4, 15: 1, 16: 2, 18: 1, 21: 1, 22: 1, 34: 1, 63: 1, 68: 1,
          414: 1, 1020: 1, 1022: 1, 6909: 1}
      - !!python/object/apply:collections.Counter
        - {1: 55, 2: 73, 3: 63, 4: 34, 5: 15, 6: 13, 7: 8, 8: 8, 9: 4, 10: 4, 11: 2,
          12: 2, 13: 1, 14: 2, 15: 4, 16: 4, 17: 1, 18: 2, 19: 1, 20: 1, 21: 1, 24: 1,
          25: 3, 27: 1, 40: 1, 45: 1, 54: 1, 61: 1, 90: 1, 110: 1, 171: 1, 198: 1,
          207: 1, 255: 1, 616: 1, 7029: 1}
      - !!python/object/apply:collections.Counter
        - {1: 90, 2: 97, 3: 72, 4: 46, 5: 30, 6: 28, 7: 19, 8: 8, 9: 9, 10: 3, 11: 4,
          12: 3, 13: 4, 14: 2, 15: 3, 16: 2, 17: 4, 18: 2, 21: 2, 22: 1, 23: 1, 25: 2,
          26: 1, 27: 2, 28: 1, 29: 2, 30: 2, 32: 1, 33: 1, 34: 1, 36: 1, 38: 1, 41: 1,
          58: 1, 61: 2, 65: 1, 76: 1, 117: 1, 126: 1, 134: 1, 137: 1, 216: 1, 7060: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 210, 1: 101, 2: 41, 3: 5, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 179, 1: 90, 2: 28, 3: 11, 4: 8, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 147, 1: 93, 2: 47, 3: 10, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 119, 1: 76, 2: 31, 3: 11, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 224, 1: 136, 2: 52, 3: 12, 4: 5}
      - !!python/object/apply:collections.Counter
        - {0: 154, 1: 71, 2: 33, 3: 9, 4: 4, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 47, 1: 32, 2: 14, 3: 4, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 66, 1: 45, 2: 18, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 172, 1: 94, 2: 39, 3: 7, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 239, 1: 128, 2: 61, 3: 23, 4: 5}
      height: [3, 4, 3, 2, 4, 3, 2, 3, 3, 3]
      max_size: [7052, 7039, 7046, 6885, 7059, 6906, 6586, 6909, 7029, 7060]
      max_weight: [5, 5, 4, 4, 4, 5, 4, 4, 4, 4]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [360, 319, 300, 242, 430, 273, 99, 136, 315, 457]
      num_edges: [359, 318, 299, 241, 429, 272, 98, 135, 314, 456]
      sum_size: [10207, 10221, 10225, 10187, 10296, 10185, 10076, 10100, 10201, 10339]
      sum_weight: [207, 221, 225, 187, 296, 185, 76, 100, 201, 339]
      width: [256, 255, 248, 176, 348, 222, 66, 99, 230, 370]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 24997500.0,
    n: 10000, seed: None}
  Stats:
    edges: [24997499, 24997500, 24997499, 24997493, 24997500, 24997488, 24996808,
      24997500, 24997498, 24997498]
    randoms: [30947, 30776, 30964, 31179, 30651, 30818, 30915, 31277, 30704, 31302]
    total: [0.277037473488155, 0.241802023724709, 0.286110131561568, 0.274028274522241,
      0.290419618543496, 0.317221801006436, 0.263433436279911, 0.242885881548503,
      0.288722314260049, 0.275672666061528]
  Times:
    t_expand_cliques: [0.12420635150926, 0.107000833973125, 0.110803382728804, 0.113120960922743,
      0.112803484457821, 0.135872416791297, 0.101536825051006, 0.112297570349199,
      0.147504003446496, 0.099853517041829]
    t_merge_cliques: [0.152831121978895, 0.134801189751585, 0.175306748832764, 0.160907313599498,
      0.177616134085675, 0.181349384215139, 0.161896611228904, 0.130588311199304,
      0.141218310813553, 0.175819149019699]
- Output:
    clique_trees:
    - avg_size: [99.6930693069307, 5000.5, 47.26046511627907, 5000.5, 5000.5, 48.42857142857143,
        58.75, 64.38853503184713, 909.5454545454545, 69.81379310344828]
      avg_weight: [0.69, 1.0, 0.7523364485981309, 1.0, 1.0, 0.8133971291866029, 0.6140350877192983,
        0.6987179487179487, 0.5, 0.8541666666666666]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 20, 2: 22, 3: 11, 4: 12, 5: 4, 6: 4, 7: 4, 8: 1, 9: 3, 10: 3, 11: 5,
          13: 2, 15: 2, 20: 1, 25: 1, 45: 1, 79: 1, 133: 1, 320: 1, 411: 1, 8643: 1}
      - !!python/object/apply:collections.Counter
        - {1822: 1, 8179: 1}
      - !!python/object/apply:collections.Counter
        - {1: 34, 2: 45, 3: 40, 4: 25, 5: 14, 6: 7, 7: 5, 8: 7, 9: 9, 10: 5, 11: 2,
          13: 1, 14: 4, 16: 1, 17: 2, 19: 1, 21: 1, 26: 1, 27: 1, 30: 1, 34: 1, 36: 1,
          55: 1, 62: 2, 72: 1, 103: 1, 138: 1, 8657: 1}
      - !!python/object/apply:collections.Counter
        - {4158: 1, 5843: 1}
      - !!python/object/apply:collections.Counter
        - {2365: 1, 7636: 1}
      - !!python/object/apply:collections.Counter
        - {1: 27, 2: 43, 3: 30, 4: 20, 5: 21, 6: 10, 7: 8, 8: 7, 9: 7, 10: 5, 11: 6,
          12: 3, 13: 2, 14: 3, 16: 2, 18: 2, 19: 3, 21: 1, 22: 1, 23: 1, 26: 1, 27: 1,
          30: 1, 38: 1, 39: 1, 43: 1, 278: 1, 8655: 1}
      - !!python/object/apply:collections.Counter
        - {1: 38, 2: 38, 3: 22, 4: 22, 5: 11, 6: 8, 7: 6, 8: 3, 9: 2, 10: 1, 14: 1,
          15: 4, 16: 2, 18: 1, 29: 1, 32: 1, 37: 1, 39: 1, 40: 1, 41: 1, 45: 1, 55: 1,
          71: 1, 76: 1, 153: 1, 244: 1, 8654: 1}
      - !!python/object/apply:collections.Counter
        - {1: 32, 2: 35, 3: 21, 4: 11, 5: 16, 6: 6, 7: 4, 8: 3, 9: 2, 10: 1, 11: 3,
          13: 3, 16: 1, 17: 1, 18: 1, 19: 3, 23: 2, 25: 3, 29: 1, 32: 1, 34: 1, 55: 1,
          73: 1, 78: 1, 224: 1, 225: 1, 8653: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 2, 3: 1, 4: 1, 5: 1, 36: 1, 1405: 1, 8545: 1}
      - !!python/object/apply:collections.Counter
        - {1: 28, 2: 24, 3: 20, 4: 13, 5: 13, 6: 9, 7: 5, 8: 6, 9: 1, 10: 3, 11: 2,
          13: 1, 14: 2, 17: 2, 18: 1, 19: 1, 25: 1, 31: 1, 33: 1, 34: 1, 51: 1, 55: 1,
          59: 1, 63: 1, 75: 1, 77: 1, 92: 1, 146: 1, 164: 1, 8655: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 52, 1: 34, 2: 10, 3: 1, 4: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 106, 1: 68, 2: 28, 3: 11, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 90, 1: 79, 2: 30, 3: 9, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 95, 1: 52, 2: 19, 3: 5}
      - !!python/object/apply:collections.Counter
        - {0: 83, 1: 45, 2: 21, 3: 6, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 6, 1: 3, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 69, 1: 41, 2: 24, 3: 6, 4: 4}
      height: [2, 1, 1, 1, 1, 2, 2, 2, 1, 1]
      max_size: [8643, 8179, 8657, 5843, 7636, 8655, 8654, 8653, 8545, 8655]
      max_weight: [4, 1, 4, 1, 1, 4, 3, 4, 2, 4]
      min_size: [1, 1822, 1, 4158, 2365, 1, 1, 1, 1, 1]
      min_weight: [0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
      num: [101, 2, 215, 2, 2, 210, 172, 157, 11, 145]
      num_edges: [100, 1, 214, 1, 1, 209, 171, 156, 10, 144]
      sum_size: [10069, 10001, 10161, 10001, 10001, 10170, 10105, 10109, 10005, 10123]
      sum_weight: [69, 1, 161, 1, 1, 170, 105, 109, 5, 123]
      width: [90, 1, 214, 1, 1, 200, 168, 154, 10, 144]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 37496250.0,
    n: 10000, seed: None}
  Stats:
    edges: [37496229, 35102862, 37494995, 25709806, 31945860, 37496247, 37496187,
      37495014, 37491200, 37494072]
    randoms: [31386, 31221, 31172, 31970, 31050, 31137, 30924, 31041, 30796, 31747]
    total: [0.238712260838664, 0.243900440746092, 0.237127268121846, 0.256626126401379,
      0.239923450620974, 0.261850150425811, 0.300611637185163, 0.266715733280172,
      0.249052776536505, 0.242430831948781]
  Times:
    t_expand_cliques: [0.098255552168382, 0.100387423698972, 0.091767766990024, 0.113898607575535,
      0.102825847773108, 0.108143066501761, 0.14154534570968, 0.132564516850319, 0.109848222353687,
      0.097462543751156]
    t_merge_cliques: [0.140456708670282, 0.14351301704712, 0.145359501131821, 0.142727518825843,
      0.137097602847867, 0.153707083924051, 0.159066291475483, 0.134151216429853,
      0.139204554182818, 0.144968288197624]
- Output:
    clique_trees:
    - avg_size: [8.511811023622048, 8.5703125, 6.426900584795321, 6.18232044198895,
        6.734104046242774, 5.386792452830188, 8.648, 6.733333333333333, 8.614173228346457,
        8.028571428571428]
      avg_weight: [0.6428571428571429, 0.7637795275590551, 0.5823529411764706, 0.6611111111111111,
        0.9593023255813954, 0.6729857819905213, 0.6532258064516129, 0.676829268292683,
        0.746031746031746, 0.8920863309352518]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 26, 2: 26, 3: 23, 4: 13, 5: 12, 6: 4, 7: 4, 8: 3, 9: 1, 11: 3, 14: 1,
          16: 1, 19: 1, 20: 1, 24: 1, 28: 1, 33: 1, 49: 1, 57: 1, 59: 1, 114: 1, 271: 1}
      - !!python/object/apply:collections.Counter
        - {1: 26, 2: 33, 3: 20, 4: 13, 5: 10, 6: 1, 7: 4, 8: 3, 9: 1, 10: 2, 11: 3,
          12: 2, 13: 1, 17: 1, 19: 1, 22: 1, 23: 1, 24: 1, 79: 1, 112: 1, 166: 1,
          224: 1}
      - !!python/object/apply:collections.Counter
        - {1: 34, 2: 53, 3: 29, 4: 18, 5: 4, 6: 9, 7: 5, 8: 2, 10: 2, 11: 2, 12: 1,
          13: 1, 14: 1, 17: 2, 22: 1, 23: 3, 24: 1, 27: 1, 149: 1, 269: 1}
      - !!python/object/apply:collections.Counter
        - {1: 32, 2: 46, 3: 32, 4: 19, 5: 15, 6: 9, 7: 4, 8: 7, 9: 2, 10: 1, 11: 1,
          12: 2, 13: 1, 15: 1, 16: 1, 17: 2, 18: 1, 20: 1, 28: 1, 41: 1, 62: 1, 300: 1}
      - !!python/object/apply:collections.Counter
        - {1: 31, 2: 47, 3: 26, 4: 14, 5: 12, 6: 8, 7: 8, 8: 3, 9: 1, 10: 3, 11: 3,
          12: 2, 13: 1, 14: 1, 15: 2, 16: 2, 17: 1, 20: 1, 23: 1, 24: 1, 26: 1, 28: 2,
          70: 1, 297: 1}
      - !!python/object/apply:collections.Counter
        - {1: 50, 2: 58, 3: 30, 4: 29, 5: 15, 6: 7, 7: 2, 8: 5, 9: 1, 10: 2, 11: 1,
          12: 1, 15: 3, 17: 1, 20: 1, 21: 2, 23: 1, 37: 1, 62: 1, 301: 1}
      - !!python/object/apply:collections.Counter
        - {1: 25, 2: 30, 3: 19, 4: 12, 5: 5, 6: 6, 7: 3, 8: 2, 9: 2, 10: 2, 11: 1,
          12: 3, 13: 1, 14: 1, 15: 2, 16: 1, 17: 2, 19: 1, 22: 2, 32: 1, 35: 1, 42: 1,
          213: 1, 216: 1}
      - !!python/object/apply:collections.Counter
        - {1: 30, 2: 49, 3: 28, 4: 16, 5: 8, 6: 4, 7: 5, 8: 5, 9: 3, 10: 3, 12: 3,
          13: 1, 16: 1, 17: 1, 23: 2, 26: 2, 34: 1, 60: 1, 73: 1, 292: 1}
      - !!python/object/apply:collections.Counter
        - {1: 21, 2: 37, 3: 19, 4: 15, 5: 8, 6: 6, 7: 5, 8: 2, 10: 2, 12: 2, 20: 1,
          22: 1, 24: 1, 28: 1, 33: 1, 50: 1, 64: 1, 95: 1, 117: 1, 258: 1}
      - !!python/object/apply:collections.Counter
        - {1: 24, 2: 32, 3: 28, 4: 13, 5: 6, 6: 5, 7: 8, 8: 4, 9: 1, 10: 2, 11: 1,
          12: 1, 13: 3, 14: 1, 15: 1, 16: 1, 20: 1, 24: 1, 25: 1, 28: 1, 30: 1, 39: 1,
          53: 1, 123: 1, 274: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 72, 1: 34, 2: 14, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 63, 1: 38, 2: 19, 3: 7}
      - !!python/object/apply:collections.Counter
        - {0: 97, 1: 51, 2: 18, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 89, 1: 67, 2: 20, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 83, 1: 51, 2: 19, 3: 7, 4: 9, 6: 2, 7: 1}
      - !!python/object/apply:collections.Counter
        - {0: 122, 1: 55, 2: 19, 3: 12, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 71, 1: 33, 2: 14, 3: 4, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 87, 1: 48, 2: 25, 3: 3, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 59, 1: 47, 2: 15, 3: 3, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 62, 1: 39, 2: 31, 3: 5, 4: 2}
      height: [4, 4, 5, 5, 4, 8, 5, 6, 5, 5]
      max_size: [271, 224, 269, 300, 297, 301, 216, 292, 258, 274]
      max_weight: [4, 3, 3, 3, 7, 5, 4, 4, 4, 4]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [127, 128, 171, 181, 173, 212, 125, 165, 127, 140]
      num_edges: [126, 127, 170, 180, 172, 211, 124, 164, 126, 139]
      sum_size: [1081, 1097, 1099, 1119, 1165, 1142, 1081, 1111, 1094, 1124]
      sum_weight: [81, 97, 99, 119, 165, 142, 81, 111, 94, 124]
      width: [38, 34, 58, 72, 61, 83, 43, 54, 45, 46]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 49950.0,
    n: 1000, seed: None}
  Stats:
    edges: [49950, 49950, 49950, 49950, 49950, 49950, 49949, 49950, 49949, 49950]
    randoms: [2989, 2929, 2941, 2918, 3118, 2941, 3102, 3005, 3077, 3030]
    total: [0.022126744114993, 0.026888891088845, 0.024688745049671, 0.016836152444688,
      0.02634269502016, 0.058122771904084, 0.023247128800885, 0.025417575428824, 0.048644904622218,
      0.025466733075005]
  Times:
    t_expand_cliques: [0.010638875300365, 0.016392026766338, 0.015326261687316, 0.009030327878086,
      0.01469028463984, 0.010888760001789, 0.010195773739644, 0.01575809795412, 0.007661423980943,
      0.011714540183133]
    t_merge_cliques: [0.011487868814628, 0.010496864322507, 0.009362483362356, 0.007805824566602,
      0.01165241038032, 0.047234011902295, 0.013051355061241, 0.009659477474703, 0.040983480641275,
      0.013752192891873]
- Output:
    clique_trees:
    - avg_size: [10.450980392156863, 22.77777777777778, 12.03448275862069, 9.907407407407407,
        167.5, 11.559139784946236, 56.111111111111114, 24.069767441860463, 16.06153846153846,
        26.102564102564102]
      avg_weight: [0.6534653465346535, 0.5681818181818182, 0.5465116279069767, 0.6542056074766355,
        1.0, 0.8152173913043478, 0.5882352941176471, 0.8333333333333334, 0.6875, 0.47368421052631576]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 16, 2: 26, 3: 18, 4: 6, 5: 5, 6: 8, 7: 3, 8: 2, 9: 2, 10: 3, 12: 3,
          13: 1, 14: 1, 15: 1, 16: 2, 17: 1, 18: 1, 22: 1, 24: 1, 571: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 6, 3: 5, 4: 7, 5: 3, 6: 2, 7: 1, 8: 1, 9: 1, 11: 3, 12: 1, 17: 1,
          25: 1, 39: 1, 42: 2, 153: 1, 548: 1}
      - !!python/object/apply:collections.Counter
        - {1: 24, 2: 16, 3: 11, 4: 7, 5: 5, 6: 4, 7: 4, 8: 1, 9: 1, 10: 1, 11: 2,
          12: 2, 16: 1, 18: 2, 20: 1, 23: 1, 28: 1, 43: 1, 46: 1, 568: 1}
      - !!python/object/apply:collections.Counter
        - {1: 24, 2: 25, 3: 27, 4: 7, 5: 2, 6: 6, 7: 3, 8: 3, 9: 2, 11: 1, 14: 3,
          17: 1, 30: 1, 55: 1, 56: 1, 567: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 24: 1, 68: 1, 201: 1, 219: 1, 486: 1}
      - !!python/object/apply:collections.Counter
        - {1: 16, 2: 21, 3: 18, 4: 11, 5: 3, 6: 6, 7: 3, 9: 3, 10: 1, 11: 1, 12: 1,
          14: 2, 18: 1, 20: 3, 31: 1, 85: 1, 565: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 2, 3: 1, 4: 2, 6: 2, 8: 1, 11: 1, 19: 1, 32: 1, 44: 1, 58: 1,
          75: 1, 211: 1, 523: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 6, 3: 11, 4: 6, 5: 3, 6: 1, 7: 1, 8: 1, 11: 1, 12: 1, 14: 1, 24: 1,
          34: 1, 63: 1, 259: 1, 507: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 14, 3: 10, 4: 7, 5: 8, 6: 2, 7: 3, 8: 2, 10: 2, 12: 3, 61: 1,
          88: 1, 99: 1, 555: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 6, 3: 8, 4: 2, 5: 1, 6: 2, 8: 2, 9: 2, 11: 3, 13: 1, 31: 1, 43: 1,
          46: 2, 62: 1, 86: 1, 558: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 53, 1: 34, 2: 10, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 28, 1: 11, 2: 2, 3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 51, 1: 26, 2: 6, 3: 3}
      - !!python/object/apply:collections.Counter
        - {0: 60, 1: 28, 2: 15, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 3, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 44, 1: 26, 2: 18, 3: 3, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 4, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 20, 1: 13, 2: 7, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 32, 1: 22, 2: 8, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 24, 1: 11, 2: 2, 3: 1}
      height: [3, 3, 4, 4, 2, 3, 2, 2, 3, 3]
      max_size: [571, 548, 568, 567, 486, 565, 523, 507, 555, 558]
      max_weight: [3, 4, 3, 3, 2, 4, 2, 4, 3, 3]
      min_size: [1, 1, 1, 1, 7, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [102, 45, 87, 108, 6, 93, 18, 43, 65, 39]
      num_edges: [101, 44, 86, 107, 5, 92, 17, 42, 64, 38]
      sum_size: [1066, 1025, 1047, 1070, 1005, 1075, 1010, 1035, 1044, 1018]
      sum_weight: [66, 25, 47, 70, 5, 75, 10, 35, 44, 18]
      width: [90, 27, 61, 71, 3, 64, 11, 25, 46, 24]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 164835.0,
    n: 1000, seed: None}
  Stats:
    edges: [164833, 164830, 164834, 164835, 164400, 164835, 164826, 164834, 164833,
      164835]
    randoms: [3049, 3001, 3092, 3092, 3196, 3207, 3058, 3088, 3089, 3013]
    total: [0.032762205689929, 0.019319637694493, 0.029170283793236, 0.027917787933232,
      0.033142836075295, 0.020852059039699, 0.020989632174499, 0.019573618866431,
      0.027387636374064, 0.019075556326299]
  Times:
    t_expand_cliques: [0.010744700788673, 0.00866471788461, 0.017841494583613, 0.012096877431213,
      0.01181217273041, 0.008650038865264, 0.011406622149411, 0.008617267101143, 0.008908799252804,
      0.009874883549291]
    t_merge_cliques: [0.022017504901256, 0.010654919809883, 0.011328789209624, 0.015820910502019,
      0.021330663344884, 0.012202020174435, 0.009583010025088, 0.010956351765289,
      0.01847883712126, 0.009200672777008]
- Output:
    clique_trees:
    - avg_size: [25.023809523809526, 333.3333333333333, 59.470588235294116, 29.285714285714285,
        17.566666666666666, 250.5, 20.836734693877553, 23.477272727272727, 59.35294117647059,
        250.25]
      avg_weight: [1.2439024390243902, 0.0, 0.6875, 0.7352941176470589, 0.9152542372881356,
        0.6666666666666666, 0.4375, 0.7674418604651163, 0.5625, 0.3333333333333333]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 7, 3: 4, 4: 4, 5: 4, 6: 2, 7: 3, 8: 3, 11: 1, 12: 1, 13: 1, 14: 1,
          16: 1, 20: 1, 25: 1, 51: 1, 64: 1, 701: 1}
      - !!python/object/apply:collections.Counter
        - {43: 1, 376: 1, 581: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 1, 5: 1, 7: 1, 8: 1, 9: 1, 11: 1, 13: 1, 18: 1, 23: 1, 30: 1,
          36: 1, 73: 2, 697: 1}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 8, 3: 3, 4: 2, 5: 2, 6: 3, 8: 1, 9: 1, 12: 1, 13: 1, 16: 1, 19: 1,
          24: 1, 70: 1, 89: 1, 697: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 7, 3: 15, 4: 10, 5: 5, 7: 3, 8: 1, 9: 1, 11: 2, 13: 1, 14: 1,
          16: 1, 17: 1, 18: 1, 26: 1, 55: 1, 703: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 5: 1, 448: 1, 547: 1}
      - !!python/object/apply:collections.Counter
        - {1: 13, 2: 12, 3: 7, 4: 2, 5: 1, 6: 2, 8: 1, 9: 1, 10: 1, 13: 2, 15: 1,
          23: 2, 27: 1, 34: 1, 61: 1, 702: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 11, 3: 8, 4: 1, 5: 4, 6: 2, 7: 1, 8: 1, 10: 1, 11: 2, 12: 1, 14: 1,
          17: 1, 24: 1, 25: 1, 29: 1, 37: 1, 39: 1, 703: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 5, 3: 2, 4: 1, 6: 2, 14: 1, 17: 2, 27: 1, 235: 1, 666: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 146: 1, 188: 1, 666: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 19, 1: 7, 2: 8, 3: 2, 4: 3, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      - !!python/object/apply:collections.Counter
        - {0: 8, 1: 5, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 11, 2: 2, 3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 27, 1: 15, 2: 13, 3: 3, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 33, 1: 10, 2: 4, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 17, 2: 8}
      - !!python/object/apply:collections.Counter
        - {0: 8, 1: 7, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 1}
      height: [2, 2, 2, 2, 1, 1, 3, 2, 2, 2]
      max_size: [701, 581, 697, 697, 703, 547, 702, 703, 666, 666]
      max_weight: [5, 0, 2, 4, 4, 2, 3, 2, 2, 1]
      min_size: [1, 43, 1, 1, 1, 2, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [42, 3, 17, 35, 60, 4, 49, 44, 17, 4]
      num_edges: [41, 2, 16, 34, 59, 3, 48, 43, 16, 3]
      sum_size: [1051, 1000, 1011, 1025, 1054, 1002, 1021, 1033, 1009, 1001]
      sum_weight: [51, 0, 11, 25, 54, 2, 21, 33, 9, 1]
      width: [38, 1, 15, 28, 59, 3, 44, 40, 13, 2]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 249750.0,
    n: 1000, seed: None}
  Stats:
    edges: [249749, 239893, 249513, 249742, 249512, 249469, 249747, 249742, 249700,
      249608]
    randoms: [3278, 3059, 3122, 3123, 3184, 3091, 3024, 3165, 3014, 3116]
    total: [0.021487353342088, 0.020413053949493, 0.019366064360331, 0.018578859276338,
      0.022641192537187, 0.022370825483187, 0.029071285755787, 0.032036447663663,
      0.027744029308881, 0.022630951360899]
  Times:
    t_expand_cliques: [0.010902756276049, 0.00907504768121, 0.009775885511842, 0.008700562001617,
      0.011451000579992, 0.008281015146358, 0.016807477151082, 0.014213045824826,
      0.015959507754448, 0.009700442179855]
    t_merge_cliques: [0.010584597066039, 0.011338006268283, 0.009590178848489, 0.00987829727472,
      0.011190191957195, 0.014089810336829, 0.012263808604704, 0.017823401838837,
      0.011784521554433, 0.012930509181044]
- Output:
    clique_trees:
    - avg_size: [111.22222222222223, 33.9, 21.0, 500.5, 30.0, 44.26086956521739, 53.63157894736842,
        39.30769230769231, 42.166666666666664, 500.5]
      avg_weight: [0.125, 0.5862068965517241, 0.6041666666666666, 1.0, 0.6060606060606061,
        0.8181818181818182, 1.0555555555555556, 0.88, 0.5217391304347826, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 1, 5: 2, 7: 2, 16: 1, 22: 1, 76: 1, 862: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 6, 3: 4, 4: 2, 5: 5, 6: 2, 7: 1, 10: 1, 15: 1, 19: 1, 27: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {1: 14, 2: 11, 3: 7, 4: 5, 5: 2, 6: 3, 7: 2, 8: 1, 10: 2, 17: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {153: 1, 848: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 9, 3: 5, 4: 4, 5: 3, 16: 1, 19: 1, 20: 1, 28: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 4, 3: 2, 5: 1, 6: 4, 7: 2, 8: 2, 9: 1, 12: 1, 14: 1, 19: 1, 24: 1,
          865: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 4, 3: 3, 4: 2, 5: 2, 7: 2, 12: 1, 17: 1, 37: 1, 39: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 2, 3: 5, 4: 1, 5: 3, 7: 1, 8: 1, 9: 1, 10: 1, 15: 1, 18: 1, 19: 1,
          28: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 8, 3: 2, 4: 1, 5: 4, 11: 1, 13: 1, 16: 1, 59: 1, 863: 1}
      - !!python/object/apply:collections.Counter
        - {262: 1, 739: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 7, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 19, 1: 6, 2: 2, 3: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 26, 1: 15, 2: 7}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 15, 1: 16, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 9, 2: 1, 3: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 6, 1: 7, 2: 3, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 10, 2: 6}
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 8, 2: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [2, 1, 1, 1, 2, 1, 1, 1, 1, 1]
      max_size: [862, 865, 865, 848, 865, 865, 864, 864, 863, 739]
      max_weight: [1, 4, 2, 1, 2, 4, 3, 2, 2, 1]
      min_size: [1, 1, 1, 153, 1, 1, 1, 1, 1, 262]
      min_weight: [0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
      num: [9, 30, 49, 2, 34, 23, 19, 26, 24, 2]
      num_edges: [8, 29, 48, 1, 33, 22, 18, 25, 23, 1]
      sum_size: [1001, 1017, 1029, 1001, 1020, 1018, 1019, 1022, 1012, 1001]
      sum_weight: [1, 17, 29, 1, 20, 18, 19, 22, 12, 1]
      width: [7, 29, 48, 1, 31, 22, 18, 25, 23, 1]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 374625.0,
    n: 1000, seed: None}
  Stats:
    edges: [374354, 374472, 374096, 370756, 374615, 374488, 374503, 373800, 373975,
      306882]
    randoms: [3085, 3014, 3050, 3259, 3086, 3200, 3189, 3187, 3055, 3085]
    total: [0.021284919424132, 0.0239367013376, 0.020082263955395, 0.024631394462459,
      0.020928185116772, 0.021144615308988, 0.020052223171617, 0.029266209477799,
      0.02956832417829, 0.025739831109348]
  Times:
    t_expand_cliques: [0.0081390041685, 0.010696225887577, 0.008963760232215, 0.01085632961021,
      0.008052295542596, 0.010585279811125, 0.009747551590779, 0.013196097019442,
      0.017299736357985, 0.013635443482191]
    t_merge_cliques: [0.013145915255632, 0.013240475450023, 0.01111850372318, 0.013775064852249,
      0.012875889574175, 0.010559335497863, 0.010304671580838, 0.016070112458357,
      0.012268587820305, 0.012104387627157]
- Output:
    clique_trees:
    - avg_size: [4.423076923076923, 5.095238095238095, 5.0, 5.0476190476190474, 4.5,
        4.133333333333334, 4.96, 4.818181818181818, 5.238095238095238, 3.7096774193548385]
      avg_weight: [0.6, 0.35, 0.6818181818181818, 0.3, 0.34782608695652173, 0.8275862068965517,
        1.0, 0.2857142857142857, 0.5, 0.5]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 7, 3: 1, 4: 2, 5: 3, 6: 2, 7: 1, 13: 1, 15: 1, 21: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 7, 3: 3, 4: 2, 5: 2, 6: 1, 11: 2, 14: 1, 22: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 9, 3: 2, 4: 2, 5: 1, 6: 2, 7: 1, 8: 1, 14: 1, 17: 1, 18: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 5, 3: 3, 4: 1, 5: 2, 8: 1, 13: 2, 16: 1, 18: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 6, 3: 5, 5: 1, 6: 2, 7: 1, 8: 2, 11: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 11, 3: 3, 4: 2, 5: 4, 6: 1, 7: 1, 8: 1, 17: 1, 22: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 6, 3: 4, 4: 4, 6: 2, 7: 4, 8: 1, 10: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 8, 3: 4, 5: 1, 7: 1, 8: 2, 10: 1, 14: 1, 23: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 4, 3: 3, 4: 2, 5: 2, 7: 2, 9: 1, 13: 1, 15: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 11, 3: 4, 4: 2, 5: 2, 8: 1, 10: 1, 12: 1, 25: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 11, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 7}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 10, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 16, 1: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 16, 1: 6, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 14, 2: 2, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 6, 2: 6, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 16, 1: 4, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 5, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 15, 1: 15}
      height: [3, 4, 4, 4, 4, 4, 4, 4, 3, 5]
      max_size: [21, 22, 18, 18, 25, 22, 24, 23, 20, 25]
      max_weight: [2, 1, 3, 2, 2, 3, 3, 2, 3, 1]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [26, 21, 23, 21, 24, 30, 25, 22, 21, 31]
      num_edges: [25, 20, 22, 20, 23, 29, 24, 21, 20, 30]
      sum_size: [115, 107, 115, 106, 108, 124, 124, 106, 110, 115]
      sum_weight: [15, 7, 15, 6, 8, 24, 24, 6, 10, 15]
      width: [10, 7, 7, 4, 12, 8, 11, 4, 9, 8]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 495.0, n: 100,
    seed: None}
  Stats:
    edges: [494, 495, 492, 495, 492, 495, 493, 495, 492, 494]
    randoms: [297, 269, 293, 264, 287, 305, 304, 272, 291, 285]
    total: [0.006338946749638, 0.00179288859546, 0.001802447026662, 0.002221652509378,
      0.002610817208317, 0.001744072321821, 0.001969036827611, 0.001438885268443,
      0.002621399757148, 0.001565193109327]
  Times:
    t_expand_cliques: [0.001118336450634, 0.000709713516748, 0.000763309005988, 0.001580896246302,
      0.001070202922081, 0.000925460963879, 0.00073907155544, 0.000717565085236, 0.001677163303407,
      0.000776963907705]
    t_merge_cliques: [0.005220610299005, 0.001083175078712, 0.001039138020674, 0.000640756263077,
      0.001540614286236, 0.000818611357942, 0.001229965272171, 0.000721320183208,
      0.00094423645374, 0.000788229201622]
- Output:
    clique_trees:
    - avg_size: [9.363636363636363, 17.666666666666668, 8.583333333333334, 20.8, 6.352941176470588,
        9.083333333333334, 10.4, 20.8, 13.125, 11.444444444444445]
      avg_weight: [0.3, 1.2, 0.2727272727272727, 1.0, 0.5, 0.8181818181818182, 0.4444444444444444,
        1.0, 0.7142857142857143, 0.375]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 2, 3: 1, 4: 1, 10: 1, 12: 1, 13: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 5: 1, 9: 1, 11: 1, 31: 1, 46: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 2, 3: 2, 5: 1, 9: 1, 23: 1, 52: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 10: 1, 14: 1, 32: 1, 45: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 6, 3: 2, 4: 3, 6: 1, 7: 2, 56: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 2, 4: 2, 5: 2, 7: 1, 9: 1, 10: 1, 55: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 3, 3: 2, 5: 1, 11: 1, 24: 1, 51: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 10: 1, 14: 1, 37: 2}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 3, 5: 1, 7: 1, 29: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 3: 2, 6: 1, 14: 1, 24: 1, 50: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 7, 1: 3}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 8, 1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 6, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 6, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 4}
      - !!python/object/apply:collections.Counter
        - {0: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 6, 1: 1, 2: 1}
      height: [2, 2, 2, 2, 1, 2, 2, 2, 2, 2]
      max_size: [54, 46, 52, 45, 56, 55, 51, 37, 49, 50]
      max_weight: [1, 2, 1, 1, 2, 3, 1, 2, 3, 2]
      min_size: [1, 4, 1, 3, 1, 2, 1, 6, 3, 1]
      min_weight: [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
      num: [11, 6, 12, 5, 17, 12, 10, 5, 8, 9]
      num_edges: [10, 5, 11, 4, 16, 11, 9, 4, 7, 8]
      sum_size: [103, 106, 103, 104, 108, 109, 104, 104, 105, 103]
      sum_weight: [3, 6, 3, 4, 8, 9, 4, 4, 5, 3]
      width: [8, 3, 7, 2, 16, 10, 6, 2, 5, 6]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 1633.5,
    n: 100, seed: None}
  Stats:
    edges: [1631, 1605, 1633, 1625, 1626, 1624, 1625, 1481, 1631, 1612]
    randoms: [289, 310, 282, 293, 308, 301, 302, 302, 288, 291]
    total: [0.002104220354611, 0.003360471312588, 0.003485755035842, 0.001653608597945,
      0.008264287891755, 0.0015737274229, 0.001718128008559, 0.00272312877494, 0.001583968599188,
      0.001590796050047]
  Times:
    t_expand_cliques: [0.000867769004124, 0.001539590168607, 0.002607403482888, 0.000770136456847,
      0.005435333628507, 0.000800518613167, 0.000812808024713, 0.000748971359185,
      0.000713809987263, 0.000719954693036]
    t_merge_cliques: [0.001236451350487, 0.00182088114398, 0.000878351552955, 0.000883472141099,
      0.002828954263248, 0.000773208809733, 0.000905319983846, 0.001974157415755,
      0.000870158611925, 0.00087084135701]
- Output:
    clique_trees:
    - avg_size: [34.0, 20.0, 25.5, 33.333333333333336, 6.529411764705882, 10.7, 6.6875,
        12.875, 33.333333333333336, 33.333333333333336]
      avg_weight: [1.0, 0.0, 0.6666666666666666, 0.0, 0.6875, 0.7777777777777778,
        0.4666666666666667, 0.42857142857142855, 0.0, 0.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {5: 1, 39: 1, 58: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 6: 1, 25: 1, 65: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 41: 1, 58: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 36: 1, 61: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 4, 3: 5, 4: 1, 5: 2, 70: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 1, 4: 2, 5: 1, 9: 1, 11: 1, 69: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 1, 3: 3, 4: 1, 6: 1, 8: 1, 70: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1, 3: 2, 10: 1, 15: 1, 68: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 38: 1, 59: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 36: 1, 59: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {0: 4}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 4, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 3, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 5, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 3}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      height: [2, 2, 2, 2, 1, 1, 2, 1, 1, 2]
      max_size: [58, 65, 58, 61, 70, 69, 70, 68, 59, 59]
      max_weight: [1, 0, 1, 0, 3, 2, 2, 1, 0, 0]
      min_size: [5, 2, 1, 3, 1, 1, 1, 1, 3, 5]
      min_weight: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [3, 5, 4, 3, 17, 10, 16, 8, 3, 3]
      num_edges: [2, 4, 3, 2, 16, 9, 15, 7, 2, 2]
      sum_size: [102, 100, 102, 100, 111, 107, 107, 103, 100, 100]
      sum_weight: [2, 0, 2, 0, 11, 7, 7, 3, 0, 0]
      width: [1, 3, 2, 1, 16, 9, 12, 7, 2, 1]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 2475.0, n: 100,
    seed: None}
  Stats:
    edges: [2404, 2397, 2474, 2463, 2455, 2458, 2473, 2435, 2417, 2351]
    randoms: [287, 283, 329, 285, 319, 301, 284, 309, 292, 301]
    total: [0.003103417787763, 0.002443886034825, 0.002336012311259, 0.001618788598567,
      0.001611619775165, 0.004048336986588, 0.001729051929933, 0.001835560163326,
      0.002151329765535, 0.002212435450719]
  Times:
    t_expand_cliques: [0.002166008784881, 0.000732244104582, 0.001428644092156, 0.000760578025645,
      0.000785156848735, 0.001702424871584, 0.000708348026577, 0.000771160574475,
      0.000734292339839, 0.000846945279005]
    t_merge_cliques: [0.000937409002882, 0.001711641930243, 0.000907368219104, 0.000858210572922,
      0.00082646292643, 0.002345912115004, 0.001020703903356, 0.001064399588851, 0.001417037425696,
      0.001365490171714]
- Output:
    clique_trees:
    - avg_size: [50.5, 13.25, 20.6, 26.0, 25.0, 50.5, 51.0, 11.777777777777779, 25.25,
        15.714285714285714]
      avg_weight: [1.0, 0.8571428571428571, 0.75, 1.3333333333333333, 0.0, 1.0, 2.0,
        0.75, 0.3333333333333333, 1.6666666666666667]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {18: 1, 83: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 2, 4: 1, 5: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 4: 2, 8: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 7: 1, 8: 1, 85: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 5: 1, 6: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {45: 1, 56: 1}
      - !!python/object/apply:collections.Counter
        - {29: 1, 73: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 1, 3: 2, 4: 1, 5: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 7: 2, 82: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 5: 1, 6: 1, 8: 1, 86: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 1, 4: 1, 5: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [83, 86, 86, 85, 86, 56, 73, 86, 82, 86]
      max_weight: [1, 3, 3, 2, 0, 1, 2, 2, 1, 5]
      min_size: [18, 1, 1, 4, 3, 45, 29, 1, 5, 1]
      min_weight: [1, 0, 0, 0, 0, 1, 2, 0, 0, 0]
      num: [2, 8, 5, 4, 4, 2, 2, 9, 4, 7]
      num_edges: [1, 7, 4, 3, 3, 1, 1, 8, 3, 6]
      sum_size: [101, 106, 103, 104, 100, 101, 102, 106, 101, 110]
      sum_weight: [1, 6, 3, 4, 0, 1, 2, 6, 1, 10]
      width: [1, 7, 4, 3, 3, 1, 1, 8, 3, 6]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 3712.5,
    n: 100, seed: None}
  Stats:
    edges: [3556, 3676, 3692, 3623, 3683, 2530, 3033, 3676, 3373, 3694]
    randoms: [302, 310, 265, 302, 279, 314, 306, 313, 300, 336]
    total: [0.001842387614185, 0.001566558599499, 0.003535936799653, 0.003454348761893,
      0.001457319385762, 0.001897007221053, 0.002321333291913, 0.002168739765224,
      0.002562342307221, 0.002492702308464]
  Times:
    t_expand_cliques: [0.000794715279937, 0.000753750574786, 0.001337838995737, 0.001473363895279,
      0.000690596654344, 0.000980080570748, 0.000752726457157, 0.000783791358564,
      0.001203338213823, 0.000929216061851]
    t_merge_cliques: [0.001047672334247, 0.000812808024713, 0.002198097803916, 0.001980984866614,
      0.000766722731417, 0.000916926650306, 0.001568606834756, 0.001384948406661,
      0.001359004093398, 0.001563486246612]
- Output:
    clique_trees:
    - avg_size: [9.45138888888889, 6.09247311827957, 9.764492753623188, 12.018264840182649,
        9.790613718411553, 10.50197628458498, 8.369565217391305, 7.994202898550725,
        11.487068965517242, 6.910891089108911]
      avg_weight: [0.7735191637630662, 0.7176724137931034, 0.7090909090909091, 0.6055045871559633,
        0.7681159420289855, 0.623015873015873, 0.6074766355140186, 0.75, 0.7142857142857143,
        0.7245657568238213]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 45, 2: 71, 3: 48, 4: 31, 5: 18, 6: 10, 7: 11, 8: 3, 9: 7, 10: 2, 11: 2,
          12: 3, 13: 5, 14: 4, 15: 3, 16: 2, 17: 1, 18: 1, 19: 1, 20: 3, 22: 1, 25: 1,
          26: 1, 29: 1, 30: 1, 31: 1, 33: 1, 36: 1, 37: 1, 38: 1, 40: 1, 50: 1, 53: 1,
          59: 1, 130: 1, 184: 1, 740: 1}
      - !!python/object/apply:collections.Counter
        - {1: 104, 2: 112, 3: 89, 4: 41, 5: 23, 6: 15, 7: 16, 8: 9, 9: 14, 10: 7,
          11: 4, 12: 6, 13: 2, 14: 3, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 21: 5, 22: 1,
          23: 1, 25: 3, 29: 1, 41: 1, 52: 1, 100: 1, 773: 1}
      - !!python/object/apply:collections.Counter
        - {1: 56, 2: 70, 3: 43, 4: 36, 5: 6, 6: 11, 7: 7, 8: 7, 9: 8, 10: 4, 11: 2,
          12: 2, 14: 2, 16: 4, 17: 2, 18: 2, 20: 1, 22: 2, 30: 1, 34: 2, 47: 1, 54: 1,
          66: 1, 75: 1, 159: 1, 167: 1, 297: 1, 678: 1}
      - !!python/object/apply:collections.Counter
        - {1: 50, 2: 51, 3: 35, 4: 21, 5: 13, 6: 9, 7: 3, 8: 5, 9: 1, 10: 4, 12: 3,
          13: 3, 14: 2, 15: 1, 17: 2, 18: 2, 19: 1, 24: 1, 25: 1, 32: 1, 34: 1, 36: 1,
          43: 1, 97: 1, 110: 1, 134: 1, 139: 1, 178: 1, 397: 1, 606: 1}
      - !!python/object/apply:collections.Counter
        - {1: 57, 2: 66, 3: 44, 4: 26, 5: 18, 6: 10, 7: 8, 8: 10, 9: 4, 10: 2, 11: 4,
          12: 3, 13: 4, 14: 2, 15: 1, 16: 2, 18: 3, 19: 1, 25: 1, 26: 1, 33: 1, 39: 1,
          42: 1, 45: 1, 48: 2, 64: 1, 318: 1, 376: 1, 601: 1}
      - !!python/object/apply:collections.Counter
        - {1: 65, 2: 55, 3: 47, 4: 21, 5: 10, 6: 10, 7: 8, 8: 8, 9: 3, 10: 1, 11: 1,
          12: 1, 13: 1, 16: 1, 17: 2, 19: 1, 20: 2, 25: 1, 26: 1, 31: 1, 32: 1, 35: 1,
          38: 1, 39: 1, 41: 1, 47: 1, 54: 1, 60: 1, 99: 1, 130: 1, 252: 1, 273: 1,
          663: 1}
      - !!python/object/apply:collections.Counter
        - {1: 69, 2: 85, 3: 56, 4: 30, 5: 18, 6: 12, 7: 6, 8: 7, 9: 4, 10: 3, 11: 1,
          12: 4, 13: 5, 14: 1, 15: 2, 16: 1, 18: 2, 20: 2, 21: 1, 23: 4, 24: 1, 30: 1,
          33: 2, 37: 1, 40: 1, 206: 1, 522: 1, 544: 1}
      - !!python/object/apply:collections.Counter
        - {1: 72, 2: 86, 3: 52, 4: 43, 5: 26, 6: 12, 7: 6, 8: 6, 9: 3, 10: 2, 11: 3,
          12: 2, 13: 1, 15: 5, 16: 1, 17: 3, 19: 3, 22: 1, 24: 2, 26: 1, 27: 3, 31: 1,
          33: 1, 40: 1, 43: 1, 46: 1, 48: 1, 50: 1, 56: 1, 65: 1, 79: 1, 159: 1, 751: 1}
      - !!python/object/apply:collections.Counter
        - {1: 43, 2: 58, 3: 40, 4: 21, 5: 17, 6: 13, 7: 3, 8: 6, 9: 1, 10: 4, 11: 1,
          12: 2, 13: 2, 14: 1, 15: 2, 16: 2, 21: 1, 22: 1, 27: 1, 29: 2, 33: 1, 35: 1,
          41: 1, 42: 1, 44: 1, 65: 1, 127: 1, 228: 1, 234: 1, 262: 1, 645: 1}
      - !!python/object/apply:collections.Counter
        - {1: 93, 2: 92, 3: 66, 4: 41, 5: 22, 6: 20, 7: 14, 8: 9, 9: 6, 10: 6, 11: 3,
          12: 2, 13: 4, 14: 2, 15: 1, 16: 4, 17: 2, 18: 1, 19: 2, 22: 1, 25: 1, 26: 1,
          27: 1, 30: 1, 35: 1, 42: 1, 45: 1, 47: 2, 62: 1, 64: 1, 94: 1, 767: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 142, 1: 84, 2: 46, 3: 14, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 237, 1: 157, 2: 46, 3: 14, 4: 8, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 144, 1: 82, 2: 35, 3: 13, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 129, 1: 54, 2: 28, 3: 6, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 134, 1: 95, 2: 29, 3: 13, 4: 5}
      - !!python/object/apply:collections.Counter
        - {0: 140, 1: 75, 2: 30, 3: 6, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 180, 1: 94, 2: 41, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 170, 1: 112, 2: 44, 3: 14, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 119, 1: 78, 2: 22, 3: 6, 4: 5, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 218, 1: 107, 2: 57, 3: 14, 4: 6, 5: 1}
      height: [5, 5, 5, 5, 5, 7, 6, 5, 5, 6]
      max_size: [740, 773, 678, 606, 601, 663, 544, 751, 645, 767]
      max_weight: [4, 5, 4, 4, 4, 4, 4, 4, 5, 5]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [288, 465, 276, 219, 277, 253, 322, 345, 232, 404]
      num_edges: [287, 464, 275, 218, 276, 252, 321, 344, 231, 403]
      sum_size: [2722, 2833, 2695, 2632, 2712, 2657, 2695, 2758, 2665, 2792]
      sum_weight: [222, 333, 195, 132, 212, 157, 195, 258, 165, 292]
      width: [110, 199, 90, 53, 81, 68, 87, 127, 65, 156]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 312375.0,
    n: 2500, seed: None}
  Stats:
    edges: [312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375,
      312375]
    randoms: [7742, 7267, 7463, 7470, 7694, 7480, 7365, 7580, 7626, 7395]
    total: [0.059580091289845, 0.054996482155945, 0.088792022533319, 0.049499018724625,
      0.065302860599498, 0.055831479395948, 0.051191885165008, 0.072114608321093,
      0.052521872592257, 0.069942454830438]
  Times:
    t_expand_cliques: [0.031510733947553, 0.029562520845061, 0.05802787033715, 0.02293306606139,
      0.02226499999488, 0.024358296428117, 0.024475387210341, 0.046202725450109, 0.026168253650723,
      0.044122742546045]
    t_merge_cliques: [0.028069357342292, 0.025433961310884, 0.030764152196169, 0.026565952663235,
      0.043037860604619, 0.031473182967831, 0.026716497954666, 0.025911882870984,
      0.026353618941534, 0.025819712284394]
- Output:
    clique_trees:
    - avg_size: [20.566929133858267, 18.239436619718308, 27.178947368421053, 14.982758620689655,
        32.61538461538461, 24.798076923076923, 13.461928934010153, 21.11382113821138,
        14.091397849462366, 16.90967741935484]
      avg_weight: [0.8888888888888888, 0.6382978723404256, 0.8723404255319149, 0.6184971098265896,
        0.5714285714285714, 0.7669902912621359, 0.7755102040816326, 0.7950819672131147,
        0.654054054054054, 0.7857142857142857]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 19, 2: 26, 3: 26, 4: 7, 5: 6, 6: 11, 7: 5, 8: 3, 9: 2, 10: 1, 11: 3,
          12: 5, 13: 2, 14: 1, 16: 1, 18: 1, 20: 2, 29: 1, 49: 1, 70: 1, 254: 1, 257: 1,
          1386: 1}
      - !!python/object/apply:collections.Counter
        - {1: 25, 2: 34, 3: 26, 4: 8, 5: 13, 6: 9, 7: 5, 10: 1, 12: 1, 14: 2, 15: 1,
          16: 1, 17: 2, 18: 2, 21: 1, 22: 1, 24: 3, 26: 1, 55: 1, 61: 1, 64: 1, 83: 1,
          277: 1, 1401: 1}
      - !!python/object/apply:collections.Counter
        - {1: 17, 2: 22, 3: 13, 4: 7, 5: 6, 6: 4, 7: 2, 8: 3, 9: 2, 10: 3, 12: 1,
          13: 1, 15: 1, 16: 1, 17: 1, 19: 1, 20: 1, 28: 1, 41: 1, 44: 1, 52: 1, 57: 1,
          109: 1, 162: 1, 329: 1, 1380: 1}
      - !!python/object/apply:collections.Counter
        - {1: 33, 2: 34, 3: 26, 4: 19, 5: 8, 6: 7, 7: 8, 8: 2, 9: 6, 10: 3, 11: 2,
          12: 6, 13: 3, 14: 1, 15: 2, 16: 2, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1,
          39: 1, 43: 1, 61: 1, 102: 1, 120: 1, 1423: 1}
      - !!python/object/apply:collections.Counter
        - {1: 20, 2: 7, 3: 16, 4: 12, 5: 2, 6: 3, 7: 4, 8: 1, 9: 1, 10: 2, 11: 1,
          14: 1, 16: 1, 18: 1, 24: 1, 37: 1, 130: 1, 278: 1, 473: 1, 1320: 1}
      - !!python/object/apply:collections.Counter
        - {1: 23, 2: 22, 3: 20, 4: 5, 5: 4, 6: 9, 7: 4, 8: 2, 12: 1, 13: 1, 17: 1,
          18: 1, 21: 1, 25: 1, 26: 1, 40: 1, 41: 1, 45: 1, 53: 1, 95: 1, 96: 1, 463: 1,
          1349: 1}
      - !!python/object/apply:collections.Counter
        - {1: 43, 2: 39, 3: 35, 4: 27, 5: 11, 6: 6, 7: 6, 8: 1, 9: 2, 10: 1, 11: 4,
          12: 5, 14: 3, 16: 3, 21: 1, 30: 1, 32: 2, 42: 1, 52: 1, 60: 1, 74: 1, 87: 1,
          102: 1, 1423: 1}
      - !!python/object/apply:collections.Counter
        - {1: 23, 2: 26, 3: 18, 4: 18, 5: 7, 6: 4, 7: 5, 8: 3, 10: 2, 11: 1, 13: 2,
          15: 3, 16: 1, 19: 1, 23: 1, 25: 1, 28: 2, 36: 1, 42: 1, 88: 1, 550: 1, 1321: 1}
      - !!python/object/apply:collections.Counter
        - {1: 38, 2: 37, 3: 28, 4: 23, 5: 8, 6: 9, 7: 5, 8: 3, 9: 2, 10: 2, 11: 4,
          12: 5, 13: 1, 14: 2, 15: 1, 16: 1, 17: 1, 20: 1, 21: 3, 23: 1, 24: 2, 28: 1,
          30: 1, 32: 1, 38: 1, 41: 1, 46: 1, 63: 1, 90: 1, 1427: 1}
      - !!python/object/apply:collections.Counter
        - {1: 31, 2: 32, 3: 27, 4: 10, 5: 12, 6: 11, 7: 4, 8: 3, 9: 2, 10: 1, 11: 1,
          12: 3, 13: 2, 14: 2, 15: 2, 18: 1, 25: 1, 27: 1, 32: 1, 33: 1, 34: 1, 39: 1,
          42: 1, 72: 1, 155: 1, 180: 1, 1411: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 59, 1: 39, 2: 18, 3: 4, 4: 5, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 80, 1: 42, 2: 12, 3: 5, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 43, 1: 31, 2: 12, 3: 5, 4: 3}
      - !!python/object/apply:collections.Counter
        - {0: 98, 1: 51, 2: 16, 3: 8}
      - !!python/object/apply:collections.Counter
        - {0: 46, 1: 21, 2: 8, 3: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 45, 1: 43, 2: 11, 3: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 95, 1: 60, 2: 33, 3: 6, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 59, 1: 35, 2: 22, 3: 6}
      - !!python/object/apply:collections.Counter
        - {0: 103, 1: 57, 2: 16, 3: 6, 4: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 75, 1: 48, 2: 21, 3: 9, 4: 1}
      height: [2, 3, 3, 4, 3, 4, 4, 4, 4, 3]
      max_size: [1386, 1401, 1380, 1423, 1320, 1349, 1423, 1321, 1427, 1411]
      max_weight: [5, 5, 4, 3, 4, 5, 4, 3, 6, 4]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [127, 142, 95, 174, 78, 104, 197, 123, 186, 155]
      num_edges: [126, 141, 94, 173, 77, 103, 196, 122, 185, 154]
      sum_size: [2612, 2590, 2582, 2607, 2544, 2579, 2652, 2597, 2621, 2621]
      sum_weight: [112, 90, 82, 107, 44, 79, 152, 97, 121, 121]
      width: [79, 89, 73, 126, 47, 65, 130, 71, 126, 102]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 1030837.5,
    n: 2500, seed: None}
  Stats:
    edges: [1030831, 1030837, 1030836, 1030836, 1030830, 1030837, 1030837, 1030837,
      1030836, 1030837]
    randoms: [7720, 7825, 8021, 7660, 7794, 7786, 7842, 7769, 7682, 7796]
    total: [0.069500036014803, 0.067792149182532, 0.052918206114597, 0.049153208338639,
      0.076831352746735, 0.052410585143262, 0.052060336914218, 0.057810416027305,
      0.049987522833556, 0.058801420519426]
  Times:
    t_expand_cliques: [0.036300532097383, 0.025587920327745, 0.023854089182211, 0.023257028604629,
      0.026049456005784, 0.021636874515891, 0.021206403739258, 0.026325967765557,
      0.022820754494767, 0.022761355672297]
    t_merge_cliques: [0.03319950391742, 0.042204228854787, 0.029064116932386, 0.025896179734009,
      0.050781896740951, 0.030773710627371, 0.03085393317496, 0.031484448261748, 0.027166768338789,
      0.036040064847128]
- Output:
    clique_trees:
    - avg_size: [93.11111111111111, 834.0, 28.651685393258425, 47.735849056603776,
        20.338582677165356, 132.05263157894737, 68.27027027027027, 63.375, 17.895833333333332,
        23.642201834862384]
      avg_weight: [0.5384615384615384, 1.0, 0.5681818181818182, 0.5769230769230769,
        0.6587301587301587, 0.5, 0.7222222222222222, 0.8974358974358975, 0.5384615384615384,
        0.7129629629629629]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 4, 3: 2, 4: 3, 5: 2, 7: 2, 11: 2, 31: 1, 39: 2, 50: 1, 103: 1,
          478: 1, 1697: 1}
      - !!python/object/apply:collections.Counter
        - {35: 1, 1094: 1, 1373: 1}
      - !!python/object/apply:collections.Counter
        - {1: 21, 2: 18, 3: 18, 4: 6, 5: 1, 6: 3, 8: 2, 9: 4, 10: 1, 13: 1, 17: 1,
          18: 1, 20: 1, 21: 1, 34: 1, 36: 2, 38: 1, 51: 2, 67: 1, 70: 1, 99: 1, 1759: 1}
      - !!python/object/apply:collections.Counter
        - {1: 13, 2: 14, 3: 4, 4: 4, 6: 1, 7: 1, 8: 3, 9: 1, 14: 1, 16: 2, 17: 2,
          27: 1, 28: 1, 35: 1, 111: 1, 174: 1, 219: 1, 1741: 1}
      - !!python/object/apply:collections.Counter
        - {1: 26, 2: 28, 3: 20, 4: 15, 5: 9, 6: 3, 7: 4, 8: 1, 10: 2, 11: 3, 12: 3,
          18: 2, 19: 2, 26: 2, 27: 1, 35: 1, 50: 1, 63: 1, 65: 2, 1762: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 5, 3: 2, 4: 2, 10: 1, 11: 1, 21: 1, 61: 1, 168: 1, 536: 1, 1675: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 10, 3: 4, 4: 6, 6: 2, 7: 1, 11: 1, 276: 1, 473: 1, 1681: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 7, 3: 7, 4: 5, 6: 1, 10: 3, 13: 1, 14: 1, 16: 1, 17: 1, 36: 1,
          38: 1, 45: 1, 55: 1, 56: 1, 139: 1, 272: 1, 1738: 1}
      - !!python/object/apply:collections.Counter
        - {1: 37, 2: 39, 3: 11, 4: 16, 5: 8, 6: 3, 7: 6, 9: 7, 10: 1, 11: 1, 14: 2,
          15: 1, 16: 1, 19: 1, 22: 1, 28: 1, 29: 1, 30: 1, 31: 1, 38: 1, 39: 1, 45: 1,
          78: 1, 1763: 1}
      - !!python/object/apply:collections.Counter
        - {1: 17, 2: 26, 3: 17, 4: 9, 5: 8, 6: 5, 7: 4, 8: 1, 9: 4, 10: 2, 11: 1,
          13: 2, 14: 1, 15: 1, 17: 1, 21: 1, 22: 2, 24: 1, 31: 1, 37: 1, 44: 1, 52: 1,
          166: 1, 1757: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 15, 1: 9, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {0: 49, 1: 29, 2: 9, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 31, 1: 14, 2: 5, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 64, 1: 46, 2: 11, 3: 5}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 6, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 19, 1: 10, 2: 5, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 14, 1: 17, 2: 6, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 89, 1: 38, 2: 10, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 53, 1: 37, 2: 14, 3: 4}
      height: [2, 2, 3, 2, 4, 2, 2, 3, 3, 3]
      max_size: [1697, 1373, 1759, 1741, 1762, 1675, 1681, 1738, 1763, 1757]
      max_weight: [3, 1, 3, 3, 3, 3, 3, 3, 4, 3]
      min_size: [1, 35, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [27, 3, 89, 53, 127, 19, 37, 40, 144, 109]
      num_edges: [26, 2, 88, 52, 126, 18, 36, 39, 143, 108]
      sum_size: [2514, 2502, 2550, 2530, 2583, 2509, 2526, 2535, 2577, 2577]
      sum_weight: [14, 2, 50, 30, 83, 9, 26, 35, 77, 77]
      width: [24, 1, 69, 47, 102, 13, 27, 28, 113, 94]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 1561875.0,
    n: 2500, seed: None}
  Stats:
    edges: [1561680, 1540344, 1561875, 1561819, 1561875, 1561543, 1561771, 1561869,
      1561873, 1561841]
    randoms: [7772, 7978, 7587, 7721, 7670, 7664, 7715, 7791, 7681, 7865]
    total: [0.060583385193512, 0.068752088773247, 0.061783309681906, 0.053570910416676,
      0.060361151668066, 0.068215109763221, 0.063115686716955, 0.067237077427731,
      0.05608341233263, 0.068732289165757]
  Times:
    t_expand_cliques: [0.025515207976101, 0.027871702639936, 0.031582763554111, 0.0254380577814,
      0.025629226405439, 0.03563929348173, 0.031966807664906, 0.029960219857573, 0.025395386213534,
      0.026062769534958]
    t_merge_cliques: [0.035068177217411, 0.040880386133311, 0.030200546127794, 0.028132852635276,
      0.034731925262626, 0.03257581628149, 0.031148879052049, 0.037276857570158, 0.030688026119096,
      0.042669519630799]
- Output:
    clique_trees:
    - avg_size: [416.8333333333333, 57.36363636363637, 1250.0, 178.85714285714286,
        1250.0, 53.744680851063826, 192.6153846153846, 1250.0, 78.75, 49.76470588235294]
      avg_weight: [0.2, 0.5581395348837209, 0.0, 0.3076923076923077, 0.0, 0.5652173913043478,
        0.3333333333333333, 0.0, 0.6451612903225806, 0.76]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 2, 5: 1, 7: 1, 351: 1, 2136: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 10, 3: 3, 4: 6, 5: 2, 6: 2, 7: 1, 8: 2, 9: 1, 13: 1, 17: 1, 20: 1,
          24: 1, 35: 1, 50: 1, 87: 1, 2162: 1}
      - !!python/object/apply:collections.Counter
        - {462: 1, 2038: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 1, 5: 1, 11: 1, 12: 1, 19: 1, 37: 1, 84: 1, 173: 1, 2156: 1}
      - !!python/object/apply:collections.Counter
        - {524: 1, 1976: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 17, 3: 3, 5: 1, 6: 2, 7: 2, 8: 3, 11: 3, 22: 1, 32: 1, 34: 1,
          39: 1, 97: 1, 2161: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 3, 4: 2, 6: 1, 7: 1, 9: 1, 23: 1, 299: 1, 2144: 1}
      - !!python/object/apply:collections.Counter
        - {758: 1, 1742: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 4, 3: 4, 4: 5, 6: 3, 7: 1, 8: 2, 9: 1, 13: 1, 89: 1, 163: 1, 2157: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 6, 3: 8, 4: 5, 5: 5, 6: 4, 7: 2, 8: 1, 9: 3, 12: 2, 18: 1, 29: 1,
          32: 1, 50: 1, 59: 1, 2163: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 24, 1: 15, 2: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 4}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 28, 1: 13, 2: 3, 3: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 6, 2: 7}
      - !!python/object/apply:collections.Counter
        - {0: 27, 1: 12, 2: 7, 3: 4}
      height: [1, 1, 1, 1, 1, 1, 2, 1, 2, 2]
      max_size: [2136, 2162, 2038, 2156, 1976, 2161, 2144, 1742, 2157, 2163]
      max_weight: [1, 3, 0, 1, 0, 4, 2, 0, 2, 3]
      min_size: [1, 1, 462, 1, 524, 1, 1, 758, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [6, 44, 2, 14, 2, 47, 13, 2, 32, 51]
      num_edges: [5, 43, 1, 13, 1, 46, 12, 1, 31, 50]
      sum_size: [2501, 2524, 2500, 2504, 2500, 2526, 2504, 2500, 2520, 2538]
      sum_weight: [1, 24, 0, 4, 0, 26, 4, 0, 20, 38]
      width: [5, 43, 1, 13, 1, 46, 11, 1, 30, 48]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 2342812.5,
    n: 2500, seed: None}
  Stats:
    edges: [2341636, 2342494, 2182194, 2342423, 2088326, 2340910, 2342186, 1803314,
      2342640, 2342655]
    randoms: [7746, 7937, 7758, 7747, 7763, 7886, 7834, 7685, 7585, 7606]
    total: [0.08055640993517, 0.06215335751844, 0.056910558004145, 0.053399541400125,
      0.067330954877035, 0.056022648019989, 0.065388203735231, 0.060792305189784,
      0.050381808120638, 0.056716658399761]
  Times:
    t_expand_cliques: [0.045553093500915, 0.030558304552783, 0.024025458198762, 0.021664867064411,
      0.022477675089124, 0.023614104284533, 0.022710832535944, 0.021814729610757,
      0.022328495287864, 0.026304119922809]
    t_merge_cliques: [0.035003316434254, 0.031595052965657, 0.032885099805384, 0.031734674335715,
      0.044853279787912, 0.032408543735456, 0.042677371199287, 0.038977575579027,
      0.028053312832774, 0.030412538476952]
- Output:
    clique_trees:
    - avg_size: [8.887622149837133, 11.13929313929314, 10.728370221327967, 11.703056768558952,
        7.997109826589595, 6.772397094430993, 9.390243902439025, 9.028006589785832,
        8.697452229299364, 6.866004962779156]
      avg_weight: [0.7455138662316476, 0.7458333333333333, 0.6693548387096774, 0.787746170678337,
        0.7727930535455861, 0.72, 0.680628272251309, 0.7920792079207921, 0.7368421052631579,
        0.6633540372670808]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 117, 2: 148, 3: 109, 4: 50, 5: 42, 6: 20, 7: 14, 8: 23, 9: 13, 10: 4,
          11: 8, 12: 5, 13: 11, 14: 7, 15: 1, 16: 2, 18: 9, 19: 1, 20: 1, 21: 2, 23: 1,
          26: 2, 27: 1, 29: 1, 30: 2, 31: 2, 33: 1, 35: 1, 38: 3, 39: 1, 40: 2, 41: 1,
          53: 1, 55: 1, 57: 1, 73: 1, 85: 1, 162: 1, 209: 1, 261: 1, 1519: 1}
      - !!python/object/apply:collections.Counter
        - {1: 99, 2: 96, 3: 85, 4: 46, 5: 30, 6: 21, 7: 12, 8: 12, 9: 8, 10: 8, 11: 7,
          12: 4, 13: 2, 14: 3, 15: 8, 16: 5, 17: 2, 18: 1, 19: 2, 21: 2, 22: 3, 23: 2,
          24: 3, 26: 1, 27: 1, 30: 1, 33: 1, 35: 1, 36: 1, 49: 1, 55: 1, 56: 1, 64: 2,
          66: 1, 69: 1, 75: 1, 95: 1, 98: 1, 99: 1, 143: 1, 1086: 1, 1105: 1}
      - !!python/object/apply:collections.Counter
        - {1: 114, 2: 110, 3: 82, 4: 55, 5: 29, 6: 23, 7: 10, 8: 9, 9: 5, 10: 6, 11: 4,
          12: 4, 13: 6, 14: 4, 15: 1, 16: 1, 17: 2, 18: 3, 19: 1, 20: 2, 21: 3, 22: 1,
          23: 3, 24: 1, 27: 2, 33: 1, 35: 3, 38: 1, 39: 1, 41: 1, 55: 1, 61: 1, 75: 1,
          138: 1, 175: 1, 190: 1, 291: 1, 925: 1, 1200: 1}
      - !!python/object/apply:collections.Counter
        - {1: 101, 2: 94, 3: 60, 4: 44, 5: 40, 6: 21, 7: 16, 8: 12, 9: 9, 10: 4, 11: 4,
          12: 4, 13: 5, 14: 1, 15: 3, 16: 5, 17: 4, 18: 1, 20: 2, 21: 1, 22: 1, 23: 1,
          26: 3, 28: 1, 30: 2, 31: 1, 32: 1, 34: 1, 35: 1, 36: 1, 45: 1, 51: 1, 58: 1,
          61: 1, 64: 1, 65: 1, 79: 1, 98: 1, 117: 1, 144: 1, 203: 1, 249: 1, 615: 1,
          1389: 1}
      - !!python/object/apply:collections.Counter
        - {1: 145, 2: 174, 3: 113, 4: 53, 5: 35, 6: 38, 7: 21, 8: 18, 9: 7, 10: 14,
          11: 9, 12: 5, 13: 6, 14: 3, 15: 3, 16: 6, 17: 3, 18: 5, 19: 2, 20: 5, 21: 2,
          22: 3, 23: 2, 24: 2, 26: 1, 27: 1, 28: 2, 29: 1, 32: 1, 35: 2, 38: 1, 43: 1,
          44: 2, 53: 1, 82: 1, 90: 1, 128: 1, 431: 1, 1499: 1}
      - !!python/object/apply:collections.Counter
        - {1: 183, 2: 199, 3: 135, 4: 94, 5: 51, 6: 26, 7: 24, 8: 18, 9: 16, 10: 9,
          11: 6, 12: 5, 13: 10, 14: 4, 15: 6, 16: 2, 18: 4, 19: 3, 20: 2, 21: 3, 23: 1,
          25: 2, 27: 2, 28: 3, 29: 3, 31: 1, 32: 1, 35: 1, 37: 1, 38: 2, 42: 1, 43: 1,
          45: 1, 53: 1, 59: 1, 97: 1, 98: 1, 105: 1, 1558: 1}
      - !!python/object/apply:collections.Counter
        - {1: 114, 2: 144, 3: 77, 4: 46, 5: 42, 6: 28, 7: 25, 8: 14, 9: 9, 10: 5,
          11: 8, 12: 8, 13: 3, 14: 8, 15: 2, 16: 2, 17: 2, 18: 6, 19: 2, 20: 3, 21: 1,
          22: 2, 23: 1, 25: 1, 27: 3, 29: 1, 30: 1, 32: 2, 34: 1, 47: 1, 48: 2, 50: 1,
          53: 1, 59: 1, 60: 1, 66: 1, 98: 1, 131: 1, 292: 1, 346: 1, 1491: 1}
      - !!python/object/apply:collections.Counter
        - {1: 131, 2: 134, 3: 111, 4: 48, 5: 53, 6: 23, 7: 16, 8: 11, 9: 15, 10: 12,
          11: 6, 12: 4, 13: 2, 14: 8, 15: 1, 16: 1, 17: 2, 18: 2, 19: 1, 20: 2, 22: 2,
          23: 2, 24: 1, 26: 1, 27: 2, 30: 1, 34: 1, 35: 2, 37: 1, 43: 2, 46: 1, 49: 1,
          59: 1, 67: 1, 87: 1, 105: 1, 250: 1, 976: 1, 1196: 1}
      - !!python/object/apply:collections.Counter
        - {1: 134, 2: 146, 3: 111, 4: 62, 5: 41, 6: 22, 7: 24, 8: 11, 9: 7, 10: 14,
          11: 8, 12: 9, 13: 6, 14: 2, 15: 1, 16: 2, 17: 5, 18: 1, 19: 1, 20: 1, 21: 1,
          22: 2, 24: 1, 25: 3, 28: 1, 39: 1, 46: 3, 48: 1, 58: 1, 77: 1, 80: 1, 216: 1,
          320: 1, 606: 1, 1394: 1}
      - !!python/object/apply:collections.Counter
        - {1: 186, 2: 212, 3: 126, 4: 95, 5: 48, 6: 29, 7: 13, 8: 18, 9: 13, 10: 10,
          11: 5, 12: 3, 13: 4, 14: 4, 15: 3, 16: 2, 17: 2, 18: 2, 19: 1, 20: 4, 22: 1,
          24: 2, 25: 2, 26: 2, 31: 1, 34: 1, 35: 1, 36: 1, 38: 2, 39: 1, 46: 1, 48: 1,
          51: 3, 54: 1, 64: 1, 78: 1, 110: 1, 126: 1, 211: 1, 1542: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 308, 1: 189, 2: 87, 3: 24, 4: 3, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 247, 1: 136, 2: 75, 3: 17, 4: 4, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 278, 1: 133, 2: 61, 3: 20, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 228, 1: 150, 2: 44, 3: 25, 4: 6, 5: 1, 6: 3}
      - !!python/object/apply:collections.Counter
        - {0: 369, 1: 190, 2: 82, 3: 30, 4: 13, 5: 4, 6: 3}
      - !!python/object/apply:collections.Counter
        - {0: 428, 1: 252, 2: 105, 3: 32, 4: 5, 5: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 305, 1: 182, 2: 53, 3: 30, 4: 3}
      - !!python/object/apply:collections.Counter
        - {0: 300, 1: 179, 2: 92, 3: 24, 4: 10, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 313, 1: 202, 2: 84, 3: 21, 4: 6, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 442, 1: 242, 2: 85, 3: 25, 4: 8, 5: 3}
      height: [5, 5, 6, 5, 6, 6, 6, 5, 6, 5]
      max_size: [1519, 1105, 1200, 1389, 1499, 1558, 1491, 1196, 1394, 1542]
      max_weight: [5, 5, 5, 6, 6, 6, 4, 5, 5, 5]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [614, 481, 497, 458, 692, 826, 574, 607, 628, 806]
      num_edges: [613, 480, 496, 457, 691, 825, 573, 606, 627, 805]
      sum_size: [5457, 5358, 5332, 5360, 5534, 5594, 5390, 5480, 5462, 5534]
      sum_weight: [457, 358, 332, 360, 534, 594, 390, 480, 462, 534]
      width: [230, 146, 127, 139, 240, 329, 177, 166, 211, 286]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 1249750.0,
    n: 5000, seed: None}
  Stats:
    edges: [1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750,
      1249750, 1249750]
    randoms: [15184, 15062, 15010, 15331, 15148, 14794, 14941, 15122, 15386, 14756]
    total: [0.122542160362484, 0.125466698937752, 0.154429428224886, 0.118020339658853,
      0.119666779433396, 0.107590725727303, 0.123409246621521, 0.165523011752432,
      0.156941247395755, 0.149628706153684]
  Times:
    t_expand_cliques: [0.055201988426789, 0.056976101532388, 0.06580911608066, 0.049620205977365,
      0.050218290672575, 0.054652378632674, 0.055883368022473, 0.066884439590885,
      0.087572639809979, 0.069878276792369]
    t_merge_cliques: [0.067340171935696, 0.068490597405364, 0.088620312144226, 0.068400133681488,
      0.069448488760821, 0.05293834709463, 0.067525878599048, 0.098638572161547, 0.069368607585776,
      0.079750429361315]
- Output:
    clique_trees:
    - avg_size: [16.602564102564102, 19.6203007518797, 13.240601503759398, 44.53508771929825,
        24.85990338164251, 21.76890756302521, 42.890756302521005, 22.532751091703055,
        19.581749049429657, 14.336065573770492]
      avg_weight: [0.5787781350482315, 0.8264150943396227, 0.7110552763819096, 0.6814159292035398,
        0.7087378640776699, 0.7637130801687764, 0.8813559322033898, 0.7017543859649122,
        0.5725190839694656, 0.6767123287671233]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 74, 2: 75, 3: 45, 4: 25, 5: 17, 6: 12, 7: 7, 8: 6, 9: 7, 10: 7, 11: 5,
          12: 2, 13: 2, 14: 4, 15: 2, 16: 1, 19: 2, 21: 1, 22: 2, 24: 1, 28: 1, 30: 2,
          37: 1, 46: 1, 48: 1, 52: 1, 53: 2, 58: 1, 75: 1, 78: 1, 121: 1, 466: 1,
          2825: 1}
      - !!python/object/apply:collections.Counter
        - {1: 48, 2: 63, 3: 46, 4: 16, 5: 23, 6: 10, 7: 9, 8: 5, 9: 7, 10: 4, 11: 4,
          12: 2, 13: 3, 15: 2, 16: 2, 17: 2, 18: 1, 19: 3, 21: 1, 22: 1, 23: 1, 29: 1,
          33: 2, 41: 1, 44: 1, 47: 1, 78: 1, 105: 1, 112: 1, 120: 1, 190: 1, 469: 1,
          2817: 1}
      - !!python/object/apply:collections.Counter
        - {1: 92, 2: 75, 3: 78, 4: 42, 5: 29, 6: 17, 7: 10, 8: 5, 9: 3, 10: 7, 11: 4,
          12: 3, 13: 4, 14: 2, 17: 1, 18: 1, 19: 3, 20: 1, 21: 1, 22: 2, 23: 2, 27: 1,
          28: 1, 30: 1, 31: 2, 32: 1, 35: 1, 36: 1, 37: 1, 38: 1, 42: 1, 64: 1, 87: 1,
          124: 1, 148: 1, 156: 1, 2856: 1}
      - !!python/object/apply:collections.Counter
        - {1: 22, 2: 25, 3: 16, 4: 5, 5: 8, 6: 6, 7: 3, 8: 8, 9: 1, 10: 2, 11: 2,
          12: 1, 15: 1, 17: 2, 20: 1, 30: 1, 33: 1, 37: 1, 49: 1, 61: 1, 95: 1, 106: 1,
          150: 1, 432: 1, 1005: 1, 2646: 1}
      - !!python/object/apply:collections.Counter
        - {1: 38, 2: 47, 3: 37, 4: 12, 5: 11, 6: 10, 7: 6, 8: 4, 9: 8, 10: 5, 12: 1,
          13: 3, 15: 1, 16: 3, 17: 1, 18: 1, 20: 1, 22: 1, 23: 1, 24: 2, 29: 1, 37: 1,
          38: 1, 41: 1, 51: 1, 53: 1, 60: 1, 61: 1, 63: 1, 76: 1, 85: 1, 90: 1, 869: 1,
          2729: 1}
      - !!python/object/apply:collections.Counter
        - {1: 46, 2: 53, 3: 34, 4: 31, 5: 17, 6: 2, 7: 9, 8: 5, 9: 3, 10: 3, 11: 3,
          12: 4, 13: 1, 14: 2, 15: 1, 16: 1, 17: 1, 18: 1, 19: 4, 23: 1, 24: 1, 25: 2,
          26: 1, 29: 1, 31: 1, 36: 1, 38: 1, 46: 1, 62: 1, 69: 1, 89: 1, 199: 1, 250: 1,
          506: 1, 2804: 1}
      - !!python/object/apply:collections.Counter
        - {1: 23, 2: 28, 3: 18, 4: 12, 5: 5, 6: 4, 7: 4, 8: 2, 10: 1, 12: 2, 13: 3,
          14: 1, 17: 1, 20: 2, 21: 1, 24: 1, 25: 1, 26: 1, 30: 1, 34: 1, 37: 1, 62: 1,
          100: 1, 135: 1, 171: 1, 1788: 1, 2233: 1}
      - !!python/object/apply:collections.Counter
        - {1: 44, 2: 46, 3: 42, 4: 24, 5: 13, 6: 11, 7: 11, 8: 5, 9: 5, 10: 1, 11: 3,
          12: 3, 15: 2, 16: 1, 19: 1, 24: 2, 28: 1, 29: 1, 30: 1, 36: 1, 43: 1, 49: 1,
          69: 1, 79: 1, 92: 1, 118: 1, 124: 1, 144: 1, 204: 1, 458: 1, 2814: 1}
      - !!python/object/apply:collections.Counter
        - {1: 51, 2: 71, 3: 43, 4: 17, 5: 19, 6: 10, 7: 10, 8: 4, 9: 2, 10: 2, 11: 1,
          12: 1, 13: 2, 14: 3, 15: 2, 16: 2, 17: 1, 18: 2, 19: 1, 21: 3, 23: 2, 25: 2,
          27: 1, 34: 1, 35: 1, 39: 1, 45: 1, 66: 1, 70: 1, 93: 1, 133: 1, 348: 1,
          373: 1, 2818: 1}
      - !!python/object/apply:collections.Counter
        - {1: 91, 2: 86, 3: 53, 4: 28, 5: 25, 6: 14, 7: 16, 8: 6, 9: 8, 10: 4, 11: 4,
          12: 2, 13: 2, 14: 2, 15: 5, 18: 1, 20: 2, 22: 3, 24: 2, 26: 3, 28: 1, 31: 2,
          61: 1, 102: 1, 121: 1, 186: 1, 393: 1, 2832: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 178, 1: 97, 2: 27, 3: 7, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 122, 1: 83, 2: 48, 3: 8, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 215, 1: 103, 2: 62, 3: 16, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 62, 1: 34, 2: 12, 3: 3, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 113, 1: 57, 2: 23, 3: 10, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 110, 1: 85, 2: 32, 3: 8, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 53, 1: 37, 2: 20, 3: 6, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 119, 1: 69, 2: 31, 3: 7, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 158, 1: 72, 2: 21, 3: 8, 4: 3}
      - !!python/object/apply:collections.Counter
        - {0: 201, 1: 106, 2: 40, 3: 12, 4: 5, 5: 1}
      height: [3, 4, 4, 3, 3, 4, 3, 3, 3, 4]
      max_size: [2825, 2817, 2856, 2646, 2729, 2804, 2233, 2814, 2818, 2832]
      max_weight: [4, 4, 4, 5, 5, 4, 5, 4, 4, 5]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [312, 266, 399, 114, 207, 238, 119, 229, 263, 366]
      num_edges: [311, 265, 398, 113, 206, 237, 118, 228, 262, 365]
      sum_size: [5180, 5219, 5283, 5077, 5146, 5181, 5104, 5160, 5150, 5247]
      sum_weight: [180, 219, 283, 77, 146, 181, 104, 160, 150, 247]
      width: [190, 164, 255, 68, 135, 146, 55, 150, 170, 237]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 4124175.0,
    n: 5000, seed: None}
  Stats:
    edges: [4124174, 4124175, 4124175, 4124169, 4124174, 4124175, 4124168, 4124175,
      4124175, 4124175]
    randoms: [15306, 15624, 15202, 15371, 15721, 15613, 15591, 15310, 15299, 15122]
    total: [0.146367574251088, 0.187146914111692, 0.140882741603858, 0.135019326806519,
      0.14162795786507, 0.148924454597623, 0.166479196245175, 0.108510041985409, 0.113383817780798,
      0.135358651114188]
  Times:
    t_expand_cliques: [0.055654307046168, 0.114648261679805, 0.061939316934025, 0.056869251926451,
      0.057485087993894, 0.064420753948571, 0.082921097540035, 0.049390803628516,
      0.050874408700084, 0.064558668455914]
    t_merge_cliques: [0.09071326720492, 0.072498652431888, 0.078943424669833, 0.078150074880067,
      0.084142869871176, 0.084503700649051, 0.083558098705139, 0.059119238356892,
      0.062509409080715, 0.070799982658275]
- Output:
    clique_trees:
    - avg_size: [29.333333333333332, 25.236453201970445, 27.393617021276597, 34.96551724137931,
        23.418181818181818, 32.560509554140125, 34.04666666666667, 21.15983606557377,
        38.330827067669176, 33.96666666666667]
      avg_weight: [0.6011560693641619, 0.6089108910891089, 0.8021390374331551, 0.4861111111111111,
        0.6940639269406392, 0.717948717948718, 0.7181208053691275, 0.6707818930041153,
        0.7424242424242424, 0.6375838926174496]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 33, 2: 29, 3: 27, 4: 21, 5: 15, 6: 9, 7: 2, 8: 6, 9: 3, 10: 4, 11: 4,
          12: 1, 13: 2, 14: 2, 15: 1, 19: 2, 21: 1, 26: 1, 43: 1, 50: 1, 54: 1, 56: 1,
          61: 2, 76: 1, 94: 1, 165: 1, 199: 1, 3521: 1}
      - !!python/object/apply:collections.Counter
        - {1: 34, 2: 45, 3: 42, 4: 15, 5: 13, 6: 5, 7: 4, 8: 3, 9: 6, 10: 4, 13: 6,
          14: 2, 15: 4, 16: 2, 17: 2, 19: 1, 21: 1, 22: 1, 24: 1, 34: 1, 35: 1, 38: 1,
          41: 2, 46: 1, 72: 2, 81: 1, 131: 1, 137: 1, 3526: 1}
      - !!python/object/apply:collections.Counter
        - {1: 36, 2: 46, 3: 19, 4: 19, 5: 13, 6: 14, 7: 5, 8: 5, 9: 3, 10: 2, 11: 1,
          13: 3, 14: 1, 15: 2, 17: 4, 20: 1, 21: 1, 24: 2, 26: 1, 28: 1, 34: 1, 39: 1,
          43: 2, 59: 1, 87: 1, 166: 1, 329: 1, 3513: 1}
      - !!python/object/apply:collections.Counter
        - {1: 29, 2: 27, 3: 19, 4: 15, 5: 11, 6: 7, 7: 2, 8: 3, 10: 4, 11: 1, 13: 5,
          14: 2, 16: 1, 18: 2, 19: 1, 23: 1, 26: 1, 27: 1, 29: 1, 36: 2, 38: 1, 41: 1,
          42: 1, 44: 1, 63: 1, 109: 1, 112: 1, 143: 1, 232: 1, 3519: 1}
      - !!python/object/apply:collections.Counter
        - {1: 48, 2: 51, 3: 34, 4: 17, 5: 18, 6: 12, 7: 4, 8: 2, 9: 3, 10: 3, 11: 1,
          12: 4, 13: 3, 14: 3, 15: 1, 16: 1, 18: 1, 20: 1, 21: 1, 23: 1, 26: 1, 27: 1,
          31: 1, 34: 1, 53: 1, 54: 1, 61: 1, 114: 1, 171: 1, 225: 1, 3520: 1}
      - !!python/object/apply:collections.Counter
        - {1: 29, 2: 38, 3: 23, 4: 10, 5: 11, 6: 5, 7: 4, 8: 1, 9: 2, 10: 6, 11: 3,
          12: 2, 13: 3, 15: 1, 16: 1, 19: 3, 21: 2, 24: 2, 27: 1, 28: 2, 32: 1, 41: 1,
          43: 1, 48: 1, 52: 1, 68: 1, 572: 1, 3486: 1}
      - !!python/object/apply:collections.Counter
        - {1: 29, 2: 38, 3: 24, 4: 11, 5: 8, 6: 6, 7: 5, 8: 1, 9: 4, 10: 3, 12: 1,
          13: 2, 14: 2, 16: 1, 17: 1, 19: 1, 21: 1, 22: 1, 24: 1, 27: 1, 28: 1, 37: 1,
          51: 1, 53: 1, 140: 1, 158: 1, 177: 1, 338: 1, 3507: 1}
      - !!python/object/apply:collections.Counter
        - {1: 53, 2: 54, 3: 29, 4: 26, 5: 18, 6: 11, 7: 8, 8: 8, 9: 3, 10: 4, 11: 5,
          12: 2, 13: 1, 17: 3, 18: 2, 19: 1, 20: 1, 23: 2, 24: 1, 25: 1, 29: 1, 32: 1,
          35: 1, 46: 1, 50: 1, 68: 1, 80: 1, 81: 1, 86: 1, 120: 1, 3528: 1}
      - !!python/object/apply:collections.Counter
        - {1: 22, 2: 32, 3: 12, 4: 14, 5: 9, 6: 9, 7: 6, 8: 5, 10: 3, 11: 2, 12: 3,
          13: 3, 14: 1, 15: 1, 17: 1, 19: 1, 28: 1, 32: 1, 37: 1, 68: 1, 95: 1, 176: 1,
          205: 1, 407: 1, 3499: 1}
      - !!python/object/apply:collections.Counter
        - {1: 32, 2: 32, 3: 28, 4: 19, 5: 1, 6: 7, 7: 2, 8: 1, 9: 2, 10: 3, 11: 1,
          14: 3, 15: 1, 17: 3, 21: 1, 23: 1, 24: 1, 27: 1, 29: 1, 30: 1, 31: 1, 32: 1,
          39: 1, 42: 1, 47: 1, 54: 1, 190: 1, 525: 1, 3489: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 104, 1: 44, 2: 19, 3: 3, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 111, 1: 68, 2: 15, 3: 7, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 91, 1: 61, 2: 21, 3: 9, 4: 5}
      - !!python/object/apply:collections.Counter
        - {0: 91, 1: 38, 2: 13, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 115, 1: 68, 2: 26, 3: 8, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 79, 1: 48, 2: 23, 3: 6}
      - !!python/object/apply:collections.Counter
        - {0: 77, 1: 45, 2: 19, 3: 8}
      - !!python/object/apply:collections.Counter
        - {0: 134, 1: 71, 2: 24, 3: 12, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 66, 1: 40, 2: 20, 3: 6}
      - !!python/object/apply:collections.Counter
        - {0: 88, 1: 34, 2: 21, 3: 5, 4: 1}
      height: [2, 3, 3, 3, 3, 2, 2, 4, 3, 3]
      max_size: [3521, 3526, 3513, 3519, 3520, 3486, 3507, 3528, 3499, 3489]
      max_weight: [5, 4, 4, 3, 4, 3, 3, 4, 3, 4]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [174, 203, 188, 145, 220, 157, 150, 244, 133, 150]
      num_edges: [173, 202, 187, 144, 219, 156, 149, 243, 132, 149]
      sum_size: [5104, 5123, 5150, 5070, 5152, 5112, 5107, 5163, 5098, 5095]
      sum_weight: [104, 123, 150, 70, 152, 112, 107, 163, 98, 95]
      width: [144, 170, 152, 121, 173, 132, 124, 188, 116, 115]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 6248750.0,
    n: 5000, seed: None}
  Stats:
    edges: [6248746, 6248750, 6248750, 6248750, 6248750, 6248725, 6248744, 6248750,
      6248750, 6248748]
    randoms: [15227, 15332, 15460, 15290, 15316, 15687, 15621, 15462, 15640, 15758]
    total: [0.129939020622657, 0.142074814523763, 0.113899290320621, 0.114975296575931,
      0.135090673667991, 0.140502452591036, 0.152851262958926, 0.127545657724186,
      0.125777006579272, 0.147391691879875]
  Times:
    t_expand_cliques: [0.053976802370218, 0.051616211235867, 0.054836037060769, 0.047193388569687,
      0.05513576215346, 0.054346508834211, 0.057507959954268, 0.054558842555911, 0.059155423846441,
      0.073362324965496]
    t_merge_cliques: [0.075962218252439, 0.090458603287896, 0.059063253259852, 0.067781908006245,
      0.07995491151453, 0.086155943756825, 0.095343303004658, 0.072986815168274, 0.06662158273283,
      0.074029366914379]
- Output:
    clique_trees:
    - avg_size: [2500.0, 85.67796610169492, 85.76271186440678, 238.76190476190476,
        2500.5, 39.8515625, 46.48623853211009, 66.65789473684211, 167.13333333333333,
        77.50769230769231]
      avg_weight: [0.0, 0.9482758620689655, 1.0344827586206897, 0.7, 1.0, 0.7952755905511811,
        0.6203703703703703, 0.88, 0.4827586206896552, 0.59375]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2090: 1, 2910: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 14, 3: 10, 4: 7, 5: 5, 6: 1, 10: 1, 12: 2, 13: 1, 14: 1, 15: 1,
          27: 1, 28: 1, 46: 1, 85: 1, 115: 1, 231: 1, 4321: 1}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 12, 3: 8, 4: 3, 5: 6, 6: 6, 7: 2, 8: 4, 10: 1, 11: 1, 12: 1, 14: 1,
          27: 1, 33: 1, 34: 1, 64: 1, 86: 1, 270: 1, 4320: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 6, 3: 2, 4: 2, 5: 1, 7: 1, 8: 1, 52: 1, 108: 1, 505: 1, 4299: 1}
      - !!python/object/apply:collections.Counter
        - {1345: 1, 3656: 1}
      - !!python/object/apply:collections.Counter
        - {1: 18, 2: 23, 3: 21, 4: 20, 5: 8, 6: 7, 7: 5, 8: 4, 9: 5, 10: 4, 11: 1,
          12: 3, 17: 2, 18: 1, 22: 1, 24: 1, 25: 1, 39: 1, 124: 1, 4327: 1}
      - !!python/object/apply:collections.Counter
        - {1: 23, 2: 26, 3: 15, 4: 9, 5: 10, 6: 3, 7: 7, 8: 3, 9: 1, 10: 1, 14: 1,
          15: 1, 16: 1, 18: 2, 19: 1, 37: 1, 51: 1, 90: 1, 147: 1, 4326: 1}
      - !!python/object/apply:collections.Counter
        - {1: 18, 2: 15, 3: 12, 4: 5, 5: 6, 6: 2, 7: 3, 8: 3, 9: 2, 11: 1, 14: 1,
          20: 1, 22: 1, 23: 1, 27: 2, 31: 1, 368: 1, 4314: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 6, 3: 3, 4: 2, 5: 2, 6: 3, 8: 1, 9: 1, 14: 1, 35: 1, 60: 1, 66: 1,
          454: 1, 4305: 1}
      - !!python/object/apply:collections.Counter
        - {1: 11, 2: 16, 3: 7, 4: 5, 6: 3, 7: 2, 8: 4, 9: 3, 10: 1, 11: 1, 12: 1,
          13: 1, 14: 1, 15: 1, 17: 1, 18: 1, 21: 1, 24: 1, 26: 1, 74: 1, 289: 1, 4319: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 22, 1: 23, 2: 8, 3: 4, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 21, 1: 22, 2: 10, 3: 2, 4: 3}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 7, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 65, 1: 33, 2: 19, 3: 10}
      - !!python/object/apply:collections.Counter
        - {0: 62, 1: 30, 2: 11, 3: 5}
      - !!python/object/apply:collections.Counter
        - {0: 37, 1: 25, 2: 6, 3: 2, 4: 3, 5: 1, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 19, 1: 7, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 41, 1: 13, 2: 7, 3: 2, 5: 1}
      height: [1, 1, 2, 2, 1, 1, 2, 2, 2, 2]
      max_size: [2910, 4321, 4320, 4299, 3656, 4327, 4326, 4314, 4305, 4319]
      max_weight: [0, 4, 4, 3, 1, 3, 3, 6, 3, 5]
      min_size: [2090, 1, 1, 1, 1345, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
      num: [2, 59, 59, 21, 2, 128, 109, 76, 30, 65]
      num_edges: [1, 58, 58, 20, 1, 127, 108, 75, 29, 64]
      sum_size: [5000, 5055, 5060, 5014, 5001, 5101, 5067, 5066, 5014, 5038]
      sum_weight: [0, 55, 60, 14, 1, 101, 67, 66, 14, 38]
      width: [1, 58, 54, 19, 1, 127, 105, 70, 28, 63]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 9373125.0,
    n: 5000, seed: None}
  Stats:
    edges: [6415600, 9372390, 9373047, 9372993, 7585180, 9370072, 9373001, 9372991,
      9371943, 9370929]
    randoms: [15702, 15338, 15513, 15605, 15523, 15805, 15511, 15942, 15329, 15595]
    total: [0.116344200473074, 0.107003223580923, 0.154475172145638, 0.121822205669448,
      0.127176975377822, 0.133614578792368, 0.11880925160556, 0.126360412255138, 0.113842281105951,
      0.124200548176027]
  Times:
    t_expand_cliques: [0.053057827484654, 0.048101439533877, 0.062320630064475, 0.052019030836524,
      0.063787507881438, 0.051151603204943, 0.05427072412968, 0.061002249303685, 0.047960794046189,
      0.047090635434264]
    t_merge_cliques: [0.06328637298842, 0.058901784047046, 0.092154542081163, 0.069803174832924,
      0.063389467496384, 0.082462975587426, 0.064538527475881, 0.065358162951453,
      0.065881487059762, 0.077109912741763]
- Output:
    clique_trees:
    - avg_size: [5.882978723404255, 6.7073170731707314, 9.24561403508772, 5.88421052631579,
        10.857142857142858, 5.872549019607843, 7.589041095890411, 6.27906976744186,
        6.674698795180723, 6.108695652173913]
      avg_weight: [0.5698924731182796, 0.6172839506172839, 0.48214285714285715, 0.6276595744680851,
        0.6666666666666666, 0.9801980198019802, 0.75, 0.47058823529411764, 0.6585365853658537,
        0.6813186813186813]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 30, 2: 22, 3: 12, 4: 10, 5: 1, 6: 1, 7: 4, 8: 2, 9: 2, 13: 1, 14: 2,
          16: 1, 17: 1, 23: 1, 26: 1, 30: 1, 35: 1, 142: 1}
      - !!python/object/apply:collections.Counter
        - {1: 16, 2: 14, 3: 20, 4: 7, 5: 4, 6: 4, 7: 3, 8: 1, 9: 2, 10: 2, 11: 2,
          12: 1, 13: 1, 22: 2, 29: 1, 46: 1, 141: 1}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 17, 3: 4, 4: 5, 5: 3, 6: 4, 7: 1, 8: 3, 9: 2, 13: 1, 14: 1, 15: 1,
          17: 1, 23: 2, 24: 1, 27: 1, 35: 1, 38: 1, 137: 1}
      - !!python/object/apply:collections.Counter
        - {1: 19, 2: 26, 3: 14, 4: 11, 5: 10, 6: 3, 7: 2, 8: 2, 9: 1, 11: 1, 12: 1,
          13: 1, 17: 1, 47: 1, 62: 1, 133: 1}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 11, 3: 5, 4: 4, 5: 3, 6: 1, 7: 2, 9: 1, 10: 1, 11: 1, 15: 1,
          19: 1, 38: 1, 45: 1, 54: 1, 71: 1, 76: 1, 84: 1}
      - !!python/object/apply:collections.Counter
        - {1: 14, 2: 33, 3: 23, 4: 4, 5: 7, 6: 4, 7: 3, 8: 3, 9: 1, 10: 1, 11: 1,
          12: 3, 15: 1, 17: 1, 19: 1, 94: 1, 119: 1}
      - !!python/object/apply:collections.Counter
        - {1: 15, 2: 16, 3: 12, 4: 7, 5: 6, 6: 2, 7: 3, 8: 1, 9: 1, 12: 1, 14: 1,
          15: 2, 16: 1, 19: 2, 52: 1, 95: 1, 106: 1}
      - !!python/object/apply:collections.Counter
        - {1: 24, 2: 18, 3: 12, 4: 11, 5: 6, 6: 3, 7: 2, 8: 2, 9: 1, 12: 2, 17: 1,
          31: 2, 102: 1, 108: 1}
      - !!python/object/apply:collections.Counter
        - {1: 13, 2: 26, 3: 13, 4: 10, 5: 2, 6: 7, 8: 1, 9: 2, 12: 3, 13: 1, 22: 1,
          26: 1, 40: 1, 64: 1, 131: 1}
      - !!python/object/apply:collections.Counter
        - {1: 19, 2: 17, 3: 21, 4: 8, 5: 6, 6: 3, 7: 3, 8: 2, 11: 4, 12: 1, 13: 1,
          15: 2, 16: 1, 20: 1, 21: 1, 26: 1, 147: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 53, 1: 29, 2: 9, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 47, 1: 22, 2: 10, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 34, 1: 19, 2: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 54, 1: 25, 2: 11, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 29, 1: 11, 2: 5, 3: 1, 4: 2}
      - !!python/object/apply:collections.Counter
        - {0: 41, 1: 36, 2: 15, 3: 6, 4: 2, 7: 1}
      - !!python/object/apply:collections.Counter
        - {0: 35, 1: 24, 2: 9, 3: 4}
      - !!python/object/apply:collections.Counter
        - {0: 55, 1: 21, 2: 8, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 43, 1: 27, 2: 9, 3: 3}
      - !!python/object/apply:collections.Counter
        - {0: 50, 1: 26, 2: 9, 3: 6}
      height: [5, 4, 5, 4, 5, 5, 4, 4, 5, 5]
      max_size: [142, 141, 137, 133, 84, 119, 106, 108, 131, 147]
      max_weight: [3, 4, 4, 3, 4, 7, 3, 3, 3, 3]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [94, 82, 57, 95, 49, 102, 73, 86, 83, 92]
      num_edges: [93, 81, 56, 94, 48, 101, 72, 85, 82, 91]
      sum_size: [553, 550, 527, 559, 532, 599, 554, 540, 554, 562]
      sum_weight: [53, 50, 27, 59, 32, 99, 54, 40, 54, 62]
      width: [44, 33, 24, 42, 10, 31, 17, 22, 33, 30]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 12475.0,
    n: 500, seed: None}
  Stats:
    edges: [12475, 12474, 12475, 12475, 12474, 12475, 12475, 12475, 12475, 12475]
    randoms: [1471, 1516, 1483, 1512, 1522, 1568, 1482, 1408, 1473, 1443]
    total: [0.010551483929375, 0.011240715093548, 0.025240403079044, 0.009141956699624,
      0.01539897403896, 0.010209428641361, 0.008334269263055, 0.026034435613895, 0.011232863525061,
      0.008462966711739]
  Times:
    t_expand_cliques: [0.0054694708828, 0.005520676764239, 0.01391741720265, 0.004852610697728,
      0.007595197707615, 0.004109784044316, 0.004101932475828, 0.004464470116418,
      0.006216394006727, 0.004110466789401]
    t_merge_cliques: [0.005082013046576, 0.005720038329309, 0.011322985876394, 0.004289346001896,
      0.007803776331344, 0.006099644597046, 0.004232336787227, 0.021569965497477,
      0.005016469518334, 0.004352499922338]
- Output:
    clique_trees:
    - avg_size: [8.26865671641791, 28.166666666666668, 17.96551724137931, 11.909090909090908,
        13.692307692307692, 14.771428571428572, 20.56, 10.320754716981131, 23.5, 12.380952380952381]
      avg_weight: [0.8181818181818182, 0.4117647058823529, 0.75, 0.5581395348837209,
        0.8947368421052632, 0.5, 0.5833333333333334, 0.9038461538461539, 0.8095238095238095,
        0.4878048780487805]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 16, 2: 12, 3: 15, 4: 12, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1,
          15: 1, 19: 1, 44: 1, 282: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 5, 3: 1, 4: 3, 6: 1, 9: 1, 18: 1, 25: 1, 26: 1, 162: 1, 234: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 5, 3: 2, 4: 3, 5: 3, 6: 2, 7: 1, 8: 1, 10: 2, 13: 1, 16: 1, 21: 1,
          25: 1, 79: 1, 273: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 10, 3: 10, 4: 1, 5: 2, 7: 2, 9: 1, 10: 1, 11: 1, 16: 2, 19: 1,
          20: 1, 26: 1, 28: 1, 282: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 8, 3: 7, 4: 5, 6: 2, 8: 1, 9: 1, 10: 1, 12: 1, 14: 1, 16: 3, 19: 2,
          40: 1, 281: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 8, 3: 4, 4: 1, 5: 5, 6: 1, 7: 1, 8: 1, 9: 1, 11: 2, 19: 2, 22: 1,
          65: 1, 277: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 3, 3: 5, 4: 2, 5: 4, 8: 1, 9: 2, 13: 2, 15: 1, 154: 1, 241: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 14, 3: 10, 4: 9, 5: 2, 6: 2, 7: 3, 8: 1, 17: 1, 113: 1, 263: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 5, 3: 1, 4: 3, 6: 1, 8: 1, 9: 1, 14: 1, 19: 1, 30: 1, 41: 1, 96: 1,
          265: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 5, 3: 8, 4: 5, 5: 2, 6: 3, 7: 1, 8: 2, 9: 2, 10: 2, 12: 2, 13: 1,
          16: 1, 17: 1, 18: 1, 284: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 32, 1: 18, 2: 13, 3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 7}
      - !!python/object/apply:collections.Counter
        - {0: 15, 1: 7, 2: 4, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 25, 1: 12, 2: 6}
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 17, 2: 7, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 21, 1: 9, 2: 4}
      - !!python/object/apply:collections.Counter
        - {0: 14, 1: 8, 2: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 23, 1: 16, 2: 11, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 9, 2: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 23, 1: 17, 3: 1}
      height: [4, 2, 2, 4, 2, 2, 2, 2, 3, 2]
      max_size: [282, 234, 273, 282, 281, 277, 241, 263, 265, 284]
      max_weight: [4, 1, 3, 2, 3, 2, 4, 5, 4, 3]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [67, 18, 29, 44, 39, 35, 25, 53, 22, 42]
      num_edges: [66, 17, 28, 43, 38, 34, 24, 52, 21, 41]
      sum_size: [554, 507, 521, 524, 534, 517, 514, 547, 517, 520]
      sum_weight: [54, 7, 21, 24, 34, 17, 14, 47, 17, 20]
      width: [42, 11, 25, 31, 33, 28, 18, 28, 15, 40]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 41167.5,
    n: 500, seed: None}
  Stats:
    edges: [41167, 41157, 41135, 41163, 41167, 41161, 41125, 41129, 41154, 41165]
    randoms: [1555, 1511, 1577, 1505, 1585, 1535, 1490, 1617, 1594, 1504]
    total: [0.009462505517434, 0.012776891536726, 0.009762230610125, 0.012200654684263,
      0.008404592006898, 0.009655039631645, 0.008701586119246, 0.01222830586024, 0.009113964151104,
      0.014247865824205]
  Times:
    t_expand_cliques: [0.004965605009437, 0.005304587944565, 0.003893695224642, 0.006672126351537,
      0.004138800710465, 0.004534451487719, 0.004251453649631, 0.004449791097072,
      0.00417669306273, 0.005995867343995]
    t_merge_cliques: [0.004496900507996, 0.007472303592161, 0.005868535385483, 0.005528528332726,
      0.004265791296434, 0.005120588143927, 0.004450132469615, 0.007778514763168,
      0.004937271088374, 0.008251998480209]
- Output:
    clique_trees:
    - avg_size: [167.33333333333334, 167.0, 39.53846153846154, 22.347826086956523,
        50.6, 17.333333333333332, 71.85714285714286, 33.93333333333333, 11.717391304347826,
        11.847826086956522]
      avg_weight: [1.0, 0.5, 1.1666666666666667, 0.6363636363636364, 0.6666666666666666,
        0.6896551724137931, 0.5, 0.6428571428571429, 0.8666666666666667, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {6: 1, 228: 1, 268: 1}
      - !!python/object/apply:collections.Counter
        - {77: 1, 132: 1, 292: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 9: 1, 13: 1, 29: 1, 95: 1, 339: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 4, 3: 3, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 12: 1, 15: 1, 87: 1, 342: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 8: 1, 9: 2, 12: 1, 19: 1, 23: 1, 36: 1, 37: 1, 348: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 4, 3: 3, 4: 3, 5: 3, 6: 2, 12: 1, 13: 1, 15: 1, 20: 1, 46: 1,
          349: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 5: 1, 22: 1, 56: 1, 78: 1, 339: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 3, 5: 1, 6: 1, 9: 2, 11: 1, 12: 1, 14: 1, 87: 1, 342: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 12, 3: 10, 4: 4, 5: 3, 6: 2, 7: 3, 8: 2, 11: 1, 14: 1, 22: 1,
          352: 1}
      - !!python/object/apply:collections.Counter
        - {1: 11, 2: 12, 3: 4, 4: 6, 5: 4, 6: 4, 7: 1, 8: 1, 23: 1, 42: 1, 350: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 2, 2: 3, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 8, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 6, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 7, 3: 3, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 3}
      - !!python/object/apply:collections.Counter
        - {0: 8, 1: 3, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 19, 1: 19, 2: 4, 3: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {0: 17, 1: 17, 2: 6, 3: 4, 4: 1}
      height: [2, 1, 2, 2, 2, 1, 1, 1, 3, 3]
      max_size: [268, 292, 339, 342, 348, 349, 339, 342, 352, 350]
      max_weight: [1, 1, 3, 2, 2, 4, 1, 2, 6, 4]
      min_size: [6, 77, 1, 1, 5, 1, 1, 1, 1, 1]
      min_weight: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [3, 3, 13, 23, 10, 30, 7, 15, 46, 46]
      num_edges: [2, 2, 12, 22, 9, 29, 6, 14, 45, 45]
      sum_size: [502, 501, 514, 514, 506, 520, 503, 509, 539, 545]
      sum_weight: [2, 1, 14, 14, 6, 20, 3, 9, 39, 45]
      width: [1, 2, 8, 16, 7, 29, 6, 14, 41, 36]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 62375.0,
    n: 500, seed: None}
  Stats:
    edges: [61671, 54058, 62323, 62323, 62271, 62276, 62076, 62369, 62373, 62374]
    randoms: [1622, 1573, 1576, 1596, 1517, 1594, 1555, 1533, 1576, 1560]
    total: [0.011420959796214, 0.009955106096879, 0.017428433806669, 0.010529636086628,
      0.00986191139266, 0.01011486844697, 0.011971935080501, 0.011639096851146, 0.009259730226934,
      0.009083923367326]
  Times:
    t_expand_cliques: [0.00536808323755, 0.004022051300783, 0.006421217532484, 0.00398211071326,
      0.004407802274292, 0.003947632086425, 0.00633792263201, 0.004823594031579, 0.004307438746671,
      0.004504410703941]
    t_merge_cliques: [0.006052876558664, 0.005933054796096, 0.011007216274185, 0.006547525373368,
      0.005454109118368, 0.006167236360545, 0.005634012448491, 0.006815502819567,
      0.004952291480263, 0.004579512663385]
- Output:
    clique_trees:
    - avg_size: [23.09090909090909, 250.0, 100.6, 56.111111111111114, 250.0, 31.8125,
        50.6, 50.6, 24.571428571428573, 250.5]
      avg_weight: [0.38095238095238093, 0.0, 0.75, 0.625, 0.0, 0.6, 0.6666666666666666,
        0.6666666666666666, 0.8, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 8, 3: 2, 4: 1, 5: 2, 6: 1, 7: 1, 9: 1, 14: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {129: 1, 371: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 27: 1, 42: 1, 428: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 2, 3: 1, 4: 1, 12: 1, 50: 1, 430: 1}
      - !!python/object/apply:collections.Counter
        - {109: 1, 391: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 3, 3: 3, 4: 3, 5: 1, 6: 1, 7: 1, 8: 1, 23: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 3, 9: 1, 12: 1, 18: 1, 23: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 3: 1, 5: 1, 7: 1, 9: 3, 30: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 6, 3: 5, 4: 4, 7: 1, 8: 1, 10: 1, 15: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {78: 1, 423: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 8}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 1, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 1, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 4, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 4, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 5, 2: 4, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [432, 371, 428, 430, 391, 432, 431, 431, 432, 423]
      max_weight: [1, 0, 2, 2, 0, 3, 2, 2, 3, 1]
      min_size: [1, 129, 3, 1, 109, 1, 2, 1, 1, 78]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
      num: [22, 2, 5, 9, 2, 16, 10, 10, 21, 2]
      num_edges: [21, 1, 4, 8, 1, 15, 9, 9, 20, 1]
      sum_size: [508, 500, 503, 505, 500, 509, 506, 506, 516, 501]
      sum_weight: [8, 0, 3, 5, 0, 9, 6, 6, 16, 1]
      width: [21, 1, 4, 8, 1, 15, 9, 9, 20, 1]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 93562.5,
    n: 500, seed: None}
  Stats:
    edges: [93299, 76891, 92595, 93535, 82131, 93449, 93183, 93241, 93333, 92256]
    randoms: [1486, 1430, 1519, 1532, 1492, 1563, 1502, 1548, 1572, 1505]
    total: [0.012049426647745, 0.010450779029212, 0.009356680029126, 0.01131786528825,
      0.010599617457928, 0.008714558275878, 0.00829057357756, 0.010816389022688, 0.010167439818581,
      0.009642408847557]
  Times:
    t_expand_cliques: [0.005623771272203, 0.005926227345238, 0.004626622074309, 0.005405292844729,
      0.003780018167847, 0.004052092084561, 0.003806986598738, 0.00454981325215, 0.004970384225038,
      0.004213902669909]
    t_merge_cliques: [0.006425655375542, 0.004524551683974, 0.004730057954817, 0.005912572443521,
      0.006819599290082, 0.004662466191317, 0.004483586978822, 0.006266575770538,
      0.005197055593543, 0.005428506177648]
- Output:
    clique_trees:
    - avg_size: [2.8181818181818183, 3.3529411764705883, 3.4705882352941178, 3.7857142857142856,
        2.782608695652174, 3.391304347826087, 3.3529411764705883, 3.15, 3.176470588235294,
        3.411764705882353]
      avg_weight: [0.5714285714285714, 0.4375, 0.5625, 0.23076923076923078, 0.6363636363636364,
        1.2727272727272727, 0.4375, 0.6842105263157895, 0.25, 0.5]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 6, 3: 6, 4: 2, 5: 1, 13: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 5, 3: 4, 4: 1, 5: 2, 6: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 5, 3: 7, 4: 1, 5: 1, 6: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 4, 3: 3, 4: 1, 5: 1, 7: 1, 9: 2}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 7, 3: 4, 6: 2, 7: 1, 11: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 7, 3: 5, 4: 1, 5: 5, 8: 1, 9: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 8, 3: 2, 4: 1, 5: 2, 8: 1, 11: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 6, 3: 3, 4: 2, 5: 2, 8: 1, 11: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 5, 3: 1, 4: 1, 6: 1, 7: 1, 9: 2}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 3, 3: 3, 4: 3, 5: 3, 12: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 6, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 3, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 8, 1: 7, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 3}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 8, 2: 3}
      - !!python/object/apply:collections.Counter
        - {0: 7, 1: 8, 2: 2, 3: 4, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 10, 1: 5, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 3, 2: 2, 3: 2}
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 4}
      - !!python/object/apply:collections.Counter
        - {0: 11, 1: 3, 2: 1, 3: 1}
      height: [4, 4, 3, 3, 4, 5, 3, 5, 3, 4]
      max_size: [13, 12, 12, 9, 11, 9, 11, 11, 9, 12]
      max_weight: [2, 2, 2, 1, 2, 4, 2, 3, 1, 3]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [22, 17, 17, 14, 23, 23, 17, 20, 17, 17]
      num_edges: [21, 16, 16, 13, 22, 22, 16, 19, 16, 16]
      sum_size: [62, 57, 59, 53, 64, 78, 57, 63, 54, 58]
      sum_weight: [12, 7, 9, 3, 14, 28, 7, 13, 4, 8]
      width: [6, 7, 10, 5, 8, 6, 7, 6, 6, 7]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.1, edges_bound: 122.5, n: 50,
    seed: None}
  Stats:
    edges: [121, 122, 122, 122, 122, 122, 122, 122, 122, 122]
    randoms: [149, 138, 149, 134, 159, 163, 141, 141, 144, 149]
    total: [0.000770819201932, 0.000656800772594, 0.000801542730796, 0.000695375869945,
      0.000780036260592, 0.001095123117714, 0.000845579788834, 0.000644852733592,
      0.000743850771041, 0.003598749347552]
  Times:
    t_expand_cliques: [0.000400088620312, 0.000339665680214, 0.000386433718595, 0.000329424503926,
      0.000399405875226, 0.000815880377599, 0.000372778816878, 0.00034854136633, 0.000359806660247,
      0.002369808193009]
    t_merge_cliques: [0.00037073058162, 0.000317135092381, 0.000415109012201, 0.000365951366019,
      0.000380630385365, 0.000279242740115, 0.000472800971956, 0.000296311367262,
      0.000384044110795, 0.001228941154542]
- Output:
    clique_trees:
    - avg_size: [3.642857142857143, 6.875, 6.444444444444445, 7.375, 8.333333333333334,
        10.0, 6.875, 8.5, 4.833333333333333, 11.0]
      avg_weight: [0.07692307692307693, 0.7142857142857143, 1.0, 1.2857142857142858,
        0.0, 0.0, 0.7142857142857143, 0.2, 0.7272727272727273, 1.25]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 2, 3: 1, 7: 1, 28: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 3: 3, 4: 1, 15: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 3: 1, 5: 5, 27: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 3: 2, 4: 2, 5: 1, 16: 1, 23: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 3, 14: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 9: 1, 17: 1, 22: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 4: 2, 5: 1, 15: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 3: 2, 4: 1, 17: 1, 23: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 2, 3: 3, 5: 1, 9: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {6: 3, 14: 1, 23: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 1, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 4, 2: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 1, 2: 4}
      - !!python/object/apply:collections.Counter
        - {0: 5}
      - !!python/object/apply:collections.Counter
        - {0: 4}
      - !!python/object/apply:collections.Counter
        - {0: 5, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 7, 1: 2, 2: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 1, 2: 2}
      height: [3, 2, 3, 2, 3, 2, 2, 3, 2, 2]
      max_size: [28, 24, 27, 23, 25, 22, 24, 23, 27, 23]
      max_weight: [1, 2, 2, 2, 0, 0, 3, 1, 4, 2]
      min_size: [1, 1, 1, 1, 2, 1, 1, 1, 1, 6]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [14, 8, 9, 8, 6, 5, 8, 6, 12, 5]
      num_edges: [13, 7, 8, 7, 5, 4, 7, 5, 11, 4]
      sum_size: [51, 55, 58, 59, 50, 50, 55, 51, 58, 55]
      sum_weight: [1, 5, 8, 9, 0, 0, 5, 1, 8, 5]
      width: [7, 4, 5, 4, 3, 2, 6, 3, 10, 3]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.33, edges_bound: 404.25,
    n: 50, seed: None}
  Stats:
    edges: [404, 395, 403, 397, 401, 403, 399, 401, 401, 387]
    randoms: [134, 149, 169, 166, 141, 134, 136, 138, 144, 149]
    total: [0.001063716843765, 0.001144963508982, 0.001182173116161, 0.001015924687755,
      0.004831104227523, 0.001711641930243, 0.000804273711139, 0.003064159945326,
      0.00081485625997, 0.001653267225402]
  Times:
    t_expand_cliques: [0.000463583913297, 0.000407598816257, 0.000658849007852, 0.000461535678039,
      0.003508626996219, 0.000571116264319, 0.000405209208456, 0.002662364462299,
      0.000369365091449, 0.001199924488394]
    t_merge_cliques: [0.000600132930468, 0.000737364692725, 0.000523324108309, 0.000554389009716,
      0.001322477231305, 0.001140525665924, 0.000399064502683, 0.000401795483027,
      0.000445491168522, 0.000453342737009]
- Output:
    clique_trees:
    - avg_size: [17.0, 10.6, 17.333333333333332, 8.666666666666666, 16.666666666666668,
        10.8, 18.0, 8.0, 16.666666666666668, 16.666666666666668]
      avg_weight: [0.5, 0.75, 1.0, 0.4, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 19: 1, 30: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 4: 1, 15: 1, 32: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 16: 1, 31: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 3: 1, 4: 1, 9: 1, 34: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 19: 1, 30: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 4: 1, 14: 1, 32: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 22: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 3: 1, 4: 1, 6: 1, 7: 1, 34: 1}
      - !!python/object/apply:collections.Counter
        - {11: 1, 13: 1, 26: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 12: 1, 33: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 1, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 4, 2: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      - !!python/object/apply:collections.Counter
        - {0: 2}
      height: [1, 2, 1, 1, 2, 1, 2, 1, 2, 1]
      max_size: [30, 32, 31, 34, 30, 32, 27, 34, 26, 33]
      max_weight: [1, 2, 2, 2, 0, 2, 3, 4, 0, 0]
      min_size: [2, 1, 5, 1, 1, 2, 5, 1, 11, 5]
      min_weight: [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
      num: [3, 5, 3, 6, 3, 5, 3, 7, 3, 3]
      num_edges: [2, 4, 2, 5, 2, 4, 2, 6, 2, 2]
      sum_size: [51, 53, 52, 52, 50, 54, 54, 56, 50, 50]
      sum_weight: [1, 3, 2, 2, 0, 4, 4, 6, 0, 0]
      width: [2, 3, 2, 5, 1, 4, 1, 6, 1, 2]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.5, edges_bound: 612.5, n: 50,
    seed: None}
  Stats:
    edges: [607, 606, 594, 605, 606, 594, 589, 599, 458, 604]
    randoms: [154, 146, 150, 152, 145, 153, 151, 156, 130, 131]
    total: [0.00085684508275, 0.000763650378531, 0.000809394299283, 0.000846603906463,
      0.000801884103339, 0.000836021357632, 0.000738730182897, 0.000757505672758,
      0.000704251556061, 0.000744192143584]
  Times:
    t_expand_cliques: [0.000408964306428, 0.000371413326706, 0.000373120189421, 0.000395650777254,
      0.000361172150418, 0.000381313130451, 0.000370389209077, 0.000384044110795,
      0.000322597053067, 0.000321572935439]
    t_merge_cliques: [0.000447880776322, 0.000392237051825, 0.000436274109863, 0.000450953129208,
      0.000440711952921, 0.000454708227181, 0.00036834097382, 0.000373461561964, 0.000381654502994,
      0.000422619208145]
- Output:
    clique_trees:
    - avg_size: [13.0, 13.0, 11.0, 10.8, 26.0, 26.0, 12.5, 25.0, 26.0, 10.4]
      avg_weight: [0.6666666666666666, 0.6666666666666666, 1.25, 1.0, 2.0, 2.0, 0.0,
        0.0, 2.0, 0.5]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 4: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 4: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 5: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 3: 1, 5: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {14: 1, 38: 1}
      - !!python/object/apply:collections.Counter
        - {14: 1, 38: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 40: 1}
      - !!python/object/apply:collections.Counter
        - {21: 1, 31: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 4: 1, 43: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 3}
      - !!python/object/apply:collections.Counter
        - {0: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 2}
      height: [1, 1, 1, 2, 1, 1, 1, 1, 1, 1]
      max_size: [43, 43, 43, 43, 38, 38, 43, 40, 31, 43]
      max_weight: [2, 1, 2, 2, 2, 2, 0, 0, 2, 1]
      min_size: [2, 2, 2, 1, 14, 14, 2, 10, 21, 1]
      min_weight: [0, 0, 1, 0, 2, 2, 0, 0, 2, 0]
      num: [4, 4, 5, 5, 2, 2, 4, 2, 2, 5]
      num_edges: [3, 3, 4, 4, 1, 1, 3, 1, 1, 4]
      sum_size: [52, 52, 55, 54, 52, 52, 50, 50, 52, 52]
      sum_weight: [2, 2, 5, 4, 2, 2, 0, 0, 2, 2]
      width: [3, 3, 4, 2, 1, 1, 3, 1, 1, 4]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: SortMinSepMVA, edge_density: 0.75, edges_bound: 918.75,
    n: 50, seed: None}
  Stats:
    edges: [912, 913, 917, 916, 793, 793, 908, 825, 674, 911]
    randoms: [143, 134, 159, 171, 159, 162, 139, 146, 167, 141]
    total: [0.000818952730485, 0.000713127242178, 0.000812808024713, 0.000885520376356,
      0.000883130768556, 0.000873913709897, 0.000789594691794, 0.001175687037846,
      0.002953213868874, 0.000814514887427]
  Times:
    t_expand_cliques: [0.000378582150108, 0.000336593327327, 0.000394285287082, 0.000423643325774,
      0.000398040385055, 0.000409988424057, 0.000345810385987, 0.00037073058162, 0.002336353683802,
      0.000393943914539]
    t_merge_cliques: [0.000440370580378, 0.00037653391485, 0.00041852273763, 0.000461877050582,
      0.000485090383501, 0.00046392528584, 0.000443784305807, 0.000804956456225, 0.000616860185072,
      0.000420570972888]
