- Output:
    clique_trees:
    - avg_size: [6.983842010771993, 13.003601440576231, 9.416666666666666, 8.240405503258508,
        7.1798516687268235, 9.568123393316196, 14.457604306864065, 8.325274725274726,
        8.22993492407809, 7.3405199746353835]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 910, 3: 306, 4: 133, 5: 83, 6: 36, 7: 39, 8: 25, 9: 16, 10: 7, 11: 13,
          12: 8, 13: 4, 14: 10, 15: 10, 17: 7, 18: 4, 19: 4, 20: 2, 21: 5, 22: 1,
          23: 2, 24: 2, 25: 2, 26: 1, 27: 1, 30: 1, 31: 1, 32: 2, 33: 2, 34: 2, 35: 3,
          36: 1, 37: 1, 39: 2, 42: 1, 46: 2, 49: 1, 50: 1, 51: 1, 52: 1, 55: 1, 57: 2,
          60: 1, 61: 1, 66: 1, 70: 1, 72: 1, 79: 1, 90: 1, 104: 1, 114: 1, 121: 1,
          132: 1, 184: 1, 254: 1, 341: 1, 3102: 1}
      - !!python/object/apply:collections.Counter
        - {2: 427, 3: 146, 4: 66, 5: 41, 6: 29, 7: 25, 8: 13, 9: 14, 10: 3, 11: 6,
          12: 4, 13: 3, 14: 1, 15: 2, 16: 4, 17: 5, 18: 4, 19: 3, 21: 1, 22: 1, 23: 2,
          24: 3, 25: 2, 27: 1, 29: 2, 30: 2, 32: 1, 33: 1, 34: 1, 42: 1, 46: 1, 51: 2,
          56: 1, 58: 1, 69: 1, 71: 1, 79: 1, 88: 1, 122: 1, 127: 1, 132: 1, 136: 1,
          187: 1, 283: 1, 744: 1, 1472: 1, 1607: 1, 2111: 1}
      - !!python/object/apply:collections.Counter
        - {2: 617, 3: 216, 4: 90, 5: 55, 6: 38, 7: 23, 8: 26, 9: 21, 10: 13, 11: 7,
          12: 6, 13: 2, 14: 4, 15: 9, 16: 5, 17: 2, 18: 2, 19: 4, 20: 4, 21: 5, 22: 2,
          23: 2, 24: 4, 25: 1, 26: 1, 29: 1, 30: 2, 31: 1, 39: 1, 42: 1, 44: 1, 45: 1,
          46: 1, 47: 1, 48: 1, 51: 1, 52: 1, 53: 1, 60: 1, 63: 1, 66: 1, 81: 2, 120: 1,
          129: 1, 165: 1, 185: 1, 192: 1, 221: 1, 359: 1, 383: 1, 1224: 1, 2824: 1}
      - !!python/object/apply:collections.Counter
        - {2: 720, 3: 229, 4: 115, 5: 62, 6: 57, 7: 26, 8: 21, 9: 19, 10: 19, 11: 9,
          12: 14, 13: 13, 14: 4, 15: 2, 16: 5, 17: 4, 18: 8, 19: 4, 20: 1, 21: 1,
          22: 2, 23: 3, 24: 2, 25: 3, 26: 2, 27: 2, 29: 1, 30: 1, 32: 3, 36: 2, 40: 1,
          42: 1, 44: 2, 45: 2, 54: 1, 57: 1, 63: 1, 64: 1, 72: 1, 76: 1, 84: 1, 86: 1,
          87: 1, 104: 2, 107: 1, 115: 1, 125: 1, 128: 1, 135: 1, 145: 1, 164: 1, 174: 1,
          682: 1, 3044: 1}
      - !!python/object/apply:collections.Counter
        - {2: 896, 3: 268, 4: 129, 5: 76, 6: 48, 7: 28, 8: 23, 9: 18, 10: 15, 11: 18,
          12: 12, 13: 7, 14: 7, 15: 3, 16: 2, 17: 4, 18: 5, 19: 6, 20: 4, 21: 3, 22: 5,
          23: 3, 24: 1, 25: 1, 27: 2, 28: 1, 29: 2, 30: 3, 31: 3, 36: 1, 38: 2, 40: 2,
          41: 1, 42: 1, 45: 1, 50: 1, 56: 1, 63: 1, 75: 1, 77: 2, 78: 1, 84: 1, 90: 1,
          96: 1, 104: 1, 113: 1, 133: 1, 169: 1, 284: 1, 649: 1, 3053: 1}
      - !!python/object/apply:collections.Counter
        - {2: 608, 3: 190, 4: 87, 5: 59, 6: 39, 7: 35, 8: 17, 9: 10, 10: 13, 11: 10,
          12: 11, 13: 10, 14: 5, 15: 1, 16: 7, 17: 2, 18: 5, 19: 2, 20: 2, 21: 1,
          22: 4, 23: 1, 24: 4, 25: 2, 26: 2, 27: 2, 28: 1, 29: 3, 37: 1, 38: 1, 39: 1,
          41: 1, 43: 1, 47: 1, 51: 2, 53: 1, 54: 1, 58: 1, 63: 1, 67: 2, 68: 1, 69: 1,
          70: 1, 79: 1, 82: 1, 83: 1, 100: 1, 115: 1, 145: 1, 149: 1, 158: 1, 163: 1,
          165: 1, 177: 1, 206: 1, 230: 1, 251: 1, 270: 1, 274: 1, 3069: 1}
      - !!python/object/apply:collections.Counter
        - {2: 380, 3: 130, 4: 62, 5: 38, 6: 14, 7: 16, 8: 13, 9: 11, 10: 7, 11: 8,
          12: 4, 13: 6, 14: 5, 15: 3, 16: 1, 18: 4, 19: 4, 20: 4, 21: 3, 22: 1, 23: 1,
          24: 1, 26: 1, 30: 1, 32: 1, 33: 1, 36: 1, 39: 1, 44: 1, 45: 1, 46: 1, 49: 1,
          59: 1, 63: 1, 72: 1, 73: 1, 81: 1, 82: 1, 84: 1, 120: 1, 177: 1, 359: 1,
          377: 1, 435: 1, 439: 1, 599: 1, 642: 1, 1372: 1, 2566: 1}
      - !!python/object/apply:collections.Counter
        - {2: 739, 3: 242, 4: 102, 5: 71, 6: 46, 7: 29, 8: 14, 9: 17, 10: 14, 11: 13,
          12: 7, 13: 2, 14: 3, 15: 4, 16: 2, 17: 5, 18: 3, 19: 3, 20: 1, 21: 3, 22: 2,
          23: 1, 24: 6, 25: 1, 26: 4, 27: 2, 29: 1, 31: 3, 32: 1, 33: 1, 34: 1, 35: 2,
          37: 1, 38: 1, 41: 1, 47: 2, 50: 1, 58: 1, 61: 1, 65: 1, 83: 1, 88: 1, 96: 1,
          129: 1, 139: 1, 153: 1, 170: 1, 214: 1, 525: 1, 1347: 1, 2774: 1}
      - !!python/object/apply:collections.Counter
        - {2: 717, 3: 234, 4: 119, 5: 69, 6: 40, 7: 38, 8: 29, 9: 15, 10: 13, 11: 9,
          12: 11, 13: 12, 14: 3, 15: 5, 16: 4, 17: 3, 18: 4, 19: 5, 20: 4, 21: 3,
          22: 2, 24: 3, 25: 1, 26: 2, 27: 2, 28: 1, 29: 1, 31: 1, 32: 2, 33: 2, 34: 1,
          35: 2, 36: 1, 38: 2, 39: 1, 46: 1, 47: 1, 51: 1, 54: 1, 55: 2, 57: 2, 58: 1,
          67: 1, 78: 1, 88: 1, 90: 1, 93: 1, 113: 1, 118: 1, 139: 1, 142: 1, 180: 1,
          350: 1, 840: 1, 2995: 1}
      - !!python/object/apply:collections.Counter
        - {2: 864, 3: 261, 4: 115, 5: 71, 6: 44, 7: 50, 8: 24, 9: 17, 10: 14, 11: 15,
          12: 10, 13: 7, 14: 9, 15: 5, 16: 3, 17: 2, 18: 2, 19: 5, 20: 3, 21: 2, 22: 2,
          23: 3, 24: 2, 25: 1, 27: 1, 28: 1, 29: 3, 30: 1, 31: 3, 32: 1, 37: 1, 38: 1,
          42: 1, 43: 1, 44: 1, 46: 2, 47: 1, 48: 1, 51: 1, 53: 2, 55: 1, 56: 1, 58: 1,
          59: 1, 60: 1, 62: 1, 67: 1, 69: 2, 76: 1, 80: 1, 84: 1, 90: 1, 94: 1, 95: 1,
          99: 1, 109: 1, 113: 1, 117: 1, 131: 1, 132: 1, 149: 1, 186: 1, 3118: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1670}
      - !!python/object/apply:collections.Counter
        - {1: 832}
      - !!python/object/apply:collections.Counter
        - {1: 1187}
      - !!python/object/apply:collections.Counter
        - {1: 1380}
      - !!python/object/apply:collections.Counter
        - {1: 1617}
      - !!python/object/apply:collections.Counter
        - {1: 1166}
      - !!python/object/apply:collections.Counter
        - {1: 742}
      - !!python/object/apply:collections.Counter
        - {1: 1364}
      - !!python/object/apply:collections.Counter
        - {1: 1382}
      - !!python/object/apply:collections.Counter
        - {1: 1576}
      height: [7, 6, 6, 6, 6, 5, 6, 7, 6, 5]
      max_size: [3102, 2111, 2824, 3044, 3053, 3069, 2566, 2774, 2995, 3118]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [1671, 833, 1188, 1381, 1618, 1167, 743, 1365, 1383, 1577]
      num_edges: [1670, 832, 1187, 1380, 1617, 1166, 742, 1364, 1382, 1576]
      sum_size: [11670, 10832, 11187, 11380, 11617, 11166, 10742, 11364, 11382, 11576]
      sum_weight: [1670, 832, 1187, 1380, 1617, 1166, 742, 1364, 1382, 1576]
      width: [619, 199, 382, 532, 609, 445, 215, 434, 470, 580]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 4999500.0, n: 10000,
    seed: None}
  Stats:
    edges: [4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500,
      4999500, 4999500]
    randoms: [28431, 29300, 28902, 28701, 28393, 28904, 29382, 28666, 28617, 28457]
    total: [0.241013794523042, 0.228357748866529, 0.219993438819529, 0.218440876494242,
      0.213106930511003, 0.221306698992521, 0.229390059436582, 0.2197353611773, 0.219696444707324,
      0.21482778949985]
  Times:
    t_chordal: [7.244334666620716, 8.266600007988018, 7.978525960187199, 7.975256976716082,
      8.362142672557866, 7.965988712175431, 8.306145286105902, 8.091109600727123,
      8.081466850507013, 8.13267170782865]
    t_convert_nx: [11.579377821230537, 10.742981977919271, 11.013771309754247, 11.097949682369972,
      11.514263739647504, 11.57079503275645, 11.096492704356706, 11.135574739933872,
      11.240018693560387, 11.417044594519439]
    t_expand_cliques: [0.077621630183557, 0.060950360676998, 0.060089760496339, 0.0598187106973,
      0.060661559505661, 0.06120161086892, 0.059536395604482, 0.059933753244422, 0.061632423017954,
      0.061808571249912]
    t_merge_cliques: [0.163392164339484, 0.167407388189531, 0.15990367832319, 0.158622165796942,
      0.152445371005342, 0.160105088123601, 0.1698536638321, 0.159801607932877, 0.15806402168937,
      0.153019218249938]
- Output:
    clique_trees:
    - avg_size: [20.340425531914892, 24.471830985915492, 15.901639344262295, 24.638297872340427,
        13.359703337453647, 21.918410041841003, 16.081447963800905, 10.559273422562141,
        19.346788990825686, 12.599767981438514]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 253, 3: 94, 4: 43, 5: 25, 6: 18, 7: 12, 8: 5, 9: 2, 10: 3, 11: 9, 12: 3,
          13: 3, 14: 4, 15: 6, 16: 2, 17: 3, 18: 3, 19: 3, 22: 1, 23: 2, 24: 3, 26: 2,
          29: 1, 30: 1, 34: 1, 36: 1, 43: 2, 66: 1, 72: 1, 75: 1, 85: 1, 100: 1, 108: 1,
          117: 1, 121: 1, 165: 1, 207: 1, 1616: 1, 5498: 1}
      - !!python/object/apply:collections.Counter
        - {2: 203, 3: 69, 4: 36, 5: 20, 6: 12, 7: 12, 8: 10, 9: 4, 10: 8, 11: 1, 12: 7,
          13: 3, 14: 4, 15: 3, 16: 3, 17: 3, 20: 1, 21: 4, 22: 2, 23: 1, 24: 1, 25: 2,
          26: 2, 27: 1, 29: 2, 35: 1, 36: 1, 44: 1, 53: 1, 57: 1, 59: 1, 69: 1, 94: 1,
          115: 1, 264: 1, 2527: 1, 5147: 1}
      - !!python/object/apply:collections.Counter
        - {2: 340, 3: 122, 4: 51, 5: 35, 6: 16, 7: 18, 8: 9, 9: 12, 10: 6, 11: 4,
          12: 6, 13: 4, 14: 4, 15: 3, 16: 3, 17: 3, 18: 2, 19: 8, 21: 1, 22: 1, 23: 1,
          25: 1, 26: 2, 27: 2, 30: 2, 34: 1, 37: 2, 48: 1, 49: 1, 52: 1, 59: 1, 89: 1,
          114: 1, 122: 1, 131: 1, 218: 1, 431: 1, 904: 1, 5645: 1}
      - !!python/object/apply:collections.Counter
        - {2: 206, 3: 67, 4: 41, 5: 22, 6: 16, 7: 11, 8: 9, 9: 7, 10: 3, 11: 5, 12: 3,
          13: 1, 14: 1, 15: 1, 16: 4, 17: 2, 18: 1, 21: 2, 24: 1, 35: 2, 36: 1, 37: 1,
          38: 1, 46: 1, 51: 1, 55: 1, 60: 1, 63: 1, 69: 1, 88: 1, 97: 1, 105: 1, 125: 1,
          193: 1, 583: 1, 756: 1, 814: 1, 5596: 1}
      - !!python/object/apply:collections.Counter
        - {2: 398, 3: 148, 4: 74, 5: 45, 6: 23, 7: 24, 8: 20, 9: 8, 10: 7, 11: 3,
          12: 7, 13: 2, 14: 2, 15: 1, 16: 6, 17: 2, 19: 3, 20: 2, 21: 1, 22: 1, 23: 4,
          24: 1, 25: 1, 27: 1, 28: 1, 29: 1, 30: 2, 32: 2, 38: 2, 39: 1, 40: 1, 41: 1,
          42: 1, 46: 2, 55: 1, 59: 1, 63: 1, 65: 1, 70: 1, 71: 1, 72: 1, 207: 1, 326: 1,
          624: 1, 5692: 1}
      - !!python/object/apply:collections.Counter
        - {2: 224, 3: 75, 4: 34, 5: 23, 6: 19, 7: 16, 8: 12, 9: 9, 10: 8, 11: 4, 12: 4,
          13: 1, 14: 3, 15: 1, 16: 3, 17: 3, 18: 3, 19: 3, 21: 3, 23: 2, 25: 1, 30: 2,
          32: 1, 33: 1, 35: 1, 40: 1, 41: 1, 42: 1, 44: 1, 45: 1, 46: 1, 47: 1, 50: 1,
          54: 1, 57: 2, 75: 1, 85: 1, 110: 1, 121: 1, 143: 1, 146: 1, 152: 1, 175: 1,
          476: 1, 736: 1, 5662: 1}
      - !!python/object/apply:collections.Counter
        - {2: 340, 3: 106, 4: 51, 5: 39, 6: 35, 7: 11, 8: 14, 9: 8, 10: 5, 11: 2,
          12: 6, 13: 8, 14: 2, 15: 3, 16: 1, 17: 4, 18: 1, 19: 1, 20: 3, 21: 1, 26: 1,
          28: 1, 29: 1, 31: 1, 33: 2, 34: 2, 36: 2, 41: 1, 42: 1, 43: 2, 45: 1, 48: 1,
          70: 1, 124: 1, 195: 1, 257: 1, 1516: 1, 5527: 1}
      - !!python/object/apply:collections.Counter
        - {2: 561, 3: 193, 4: 77, 5: 48, 6: 40, 7: 17, 8: 17, 9: 9, 10: 9, 11: 10,
          12: 5, 13: 4, 14: 6, 15: 3, 16: 1, 17: 3, 18: 1, 19: 1, 20: 2, 21: 1, 22: 2,
          23: 1, 25: 2, 26: 3, 27: 2, 28: 1, 29: 3, 30: 2, 32: 3, 33: 2, 35: 1, 37: 1,
          39: 1, 40: 1, 44: 1, 45: 1, 54: 2, 59: 1, 68: 1, 73: 1, 75: 1, 76: 1, 83: 1,
          223: 1, 297: 1, 5726: 1}
      - !!python/object/apply:collections.Counter
        - {2: 262, 3: 107, 4: 53, 5: 34, 6: 19, 7: 9, 8: 6, 9: 10, 10: 7, 12: 4, 13: 5,
          14: 2, 15: 1, 16: 2, 17: 2, 18: 1, 19: 2, 21: 1, 24: 1, 26: 1, 36: 1, 45: 1,
          47: 2, 49: 2, 52: 2, 54: 1, 63: 1, 108: 1, 191: 1, 246: 1, 467: 1, 1589: 1,
          5488: 1}
      - !!python/object/apply:collections.Counter
        - {2: 448, 3: 147, 4: 87, 5: 44, 6: 18, 7: 26, 8: 12, 9: 7, 10: 6, 11: 11,
          12: 4, 13: 6, 14: 4, 15: 5, 17: 2, 19: 2, 20: 2, 21: 1, 22: 2, 23: 1, 27: 3,
          31: 1, 32: 1, 34: 1, 40: 1, 41: 2, 42: 1, 49: 1, 51: 1, 57: 1, 59: 1, 60: 1,
          63: 1, 68: 1, 73: 1, 77: 1, 117: 1, 121: 1, 127: 1, 165: 1, 177: 1, 219: 1,
          327: 1, 5717: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 516}
      - !!python/object/apply:collections.Counter
        - {1: 425}
      - !!python/object/apply:collections.Counter
        - {1: 670}
      - !!python/object/apply:collections.Counter
        - {1: 422}
      - !!python/object/apply:collections.Counter
        - {1: 808}
      - !!python/object/apply:collections.Counter
        - {1: 477}
      - !!python/object/apply:collections.Counter
        - {1: 662}
      - !!python/object/apply:collections.Counter
        - {1: 1045}
      - !!python/object/apply:collections.Counter
        - {1: 544}
      - !!python/object/apply:collections.Counter
        - {1: 861}
      height: [4, 4, 5, 4, 5, 4, 5, 4, 4, 4]
      max_size: [5498, 5147, 5645, 5596, 5692, 5662, 5527, 5726, 5488, 5717]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [517, 426, 671, 423, 809, 478, 663, 1046, 545, 862]
      num_edges: [516, 425, 670, 422, 808, 477, 662, 1045, 544, 861]
      sum_size: [10516, 10425, 10670, 10422, 10808, 10477, 10662, 11045, 10544, 10861]
      sum_weight: [516, 425, 670, 422, 808, 477, 662, 1045, 544, 861]
      width: [325, 250, 389, 244, 500, 316, 414, 687, 337, 548]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 16498350.0, n: 10000,
    seed: None}
  Stats:
    edges: [16498350, 16498350, 16498350, 16498350, 16498350, 16498350, 16498350,
      16498350, 16498350, 16498350]
    randoms: [29653, 29806, 29541, 29699, 29341, 29727, 29452, 29066, 29570, 29280]
    total: [0.232767258003605, 0.247081350100871, 0.243266511934053, 0.247531961857931,
      0.245107875430222, 0.251423950219305, 0.244711541908146, 0.240091405912608,
      0.246464148543055, 0.240285305516409]
  Times:
    t_chordal: [36.401081331667, 25.071353347550485, 37.35825478066636, 37.62020700148241,
      35.51080461167021, 26.585220412302988, 39.69927809948331, 38.069778254637185,
      26.75991337330379, 37.58873757361289]
    t_convert_nx: [42.91410691310125, 40.67274013936867, 43.33011202822718, 43.54009062075511,
      43.76093578406926, 44.357698343421816, 43.296347552751286, 44.271584729860024,
      44.63254318106647, 44.14886437302994]
    t_expand_cliques: [0.06042874343143, 0.065795461178823, 0.065995846861824, 0.066825382140905,
      0.066615096654459, 0.066501760969913, 0.066638992732351, 0.068253343488323,
      0.066845181748249, 0.064817770215996]
    t_merge_cliques: [0.172338514572175, 0.181285888922048, 0.177270665072228, 0.180706579717025,
      0.178492778775762, 0.184922189249392, 0.178072549175795, 0.171838062424285,
      0.179618966794806, 0.175467535300413]
- Output:
    clique_trees:
    - avg_size: [21.918410041841003, 16.64788732394366, 19.38051470588235, 18.45026178010471,
        112.1, 25.9975, 19.482439926062845, 25.093975903614457, 27.452380952380953,
        23.725]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 223, 3: 79, 4: 37, 5: 29, 6: 21, 7: 10, 8: 9, 9: 8, 10: 5, 11: 2, 12: 7,
          13: 4, 14: 5, 15: 3, 17: 3, 18: 4, 19: 2, 21: 1, 22: 1, 23: 2, 24: 2, 26: 1,
          29: 2, 34: 1, 37: 1, 39: 1, 42: 2, 43: 1, 46: 1, 55: 1, 61: 1, 64: 1, 70: 1,
          82: 1, 85: 1, 98: 1, 122: 1, 185: 1, 294: 1, 7057: 1}
      - !!python/object/apply:collections.Counter
        - {2: 327, 3: 115, 4: 55, 5: 29, 6: 17, 7: 18, 8: 10, 9: 8, 10: 4, 11: 7,
          12: 5, 13: 3, 14: 3, 15: 3, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 24: 2,
          25: 1, 28: 1, 29: 2, 30: 5, 31: 2, 33: 1, 37: 1, 38: 1, 43: 2, 51: 1, 52: 1,
          57: 1, 64: 1, 65: 1, 71: 1, 86: 1, 87: 1, 136: 1, 183: 1, 7063: 1}
      - !!python/object/apply:collections.Counter
        - {2: 270, 3: 95, 4: 46, 5: 28, 6: 15, 7: 11, 8: 14, 9: 5, 10: 5, 11: 8, 12: 4,
          13: 5, 14: 2, 15: 1, 16: 3, 18: 2, 19: 2, 20: 1, 22: 1, 23: 1, 24: 1, 25: 1,
          28: 1, 29: 4, 31: 1, 33: 1, 34: 2, 36: 1, 38: 1, 41: 1, 42: 1, 49: 1, 51: 1,
          72: 1, 76: 1, 87: 1, 117: 1, 135: 1, 151: 1, 312: 1, 7057: 1}
      - !!python/object/apply:collections.Counter
        - {2: 288, 3: 104, 4: 65, 5: 28, 6: 18, 7: 11, 8: 5, 9: 8, 10: 1, 11: 7, 12: 9,
          13: 2, 14: 3, 15: 2, 16: 2, 17: 1, 18: 1, 19: 1, 20: 1, 23: 1, 25: 1, 27: 1,
          28: 1, 29: 1, 38: 1, 40: 1, 48: 1, 57: 1, 70: 1, 73: 1, 86: 1, 123: 1, 134: 1,
          762: 1, 7025: 1}
      - !!python/object/apply:collections.Counter
        - {2: 38, 3: 20, 4: 8, 5: 5, 6: 2, 8: 1, 9: 3, 10: 3, 14: 1, 22: 1, 24: 1,
          29: 1, 33: 1, 59: 1, 137: 1, 1040: 1, 1671: 1, 6790: 1}
      - !!python/object/apply:collections.Counter
        - {2: 198, 3: 68, 4: 33, 5: 19, 6: 12, 7: 21, 8: 10, 9: 4, 10: 3, 11: 1, 13: 1,
          14: 4, 16: 3, 17: 2, 20: 1, 21: 2, 24: 1, 28: 2, 29: 1, 30: 1, 35: 1, 40: 1,
          47: 1, 57: 1, 60: 1, 65: 1, 66: 1, 94: 1, 104: 1, 140: 1, 304: 1, 820: 1,
          7012: 1}
      - !!python/object/apply:collections.Counter
        - {2: 279, 3: 91, 4: 50, 5: 27, 6: 20, 7: 12, 8: 8, 9: 10, 10: 3, 11: 2, 12: 1,
          13: 1, 14: 2, 15: 5, 17: 2, 18: 2, 19: 5, 20: 2, 21: 1, 23: 1, 25: 1, 26: 1,
          28: 1, 32: 1, 35: 1, 45: 3, 53: 2, 77: 1, 121: 1, 132: 1, 144: 1, 337: 1,
          340: 1, 7049: 1}
      - !!python/object/apply:collections.Counter
        - {2: 211, 3: 64, 4: 33, 5: 23, 6: 8, 7: 12, 8: 3, 9: 3, 10: 7, 11: 3, 12: 5,
          13: 6, 14: 2, 15: 4, 16: 4, 17: 1, 19: 3, 20: 2, 21: 1, 22: 2, 23: 2, 24: 2,
          26: 2, 36: 1, 37: 1, 38: 1, 40: 1, 44: 1, 47: 1, 54: 1, 68: 1, 197: 1, 199: 1,
          884: 1, 7008: 1}
      - !!python/object/apply:collections.Counter
        - {2: 168, 3: 63, 4: 24, 5: 24, 6: 12, 7: 15, 8: 7, 9: 6, 10: 2, 11: 5, 12: 8,
          13: 6, 14: 2, 15: 2, 16: 1, 17: 4, 18: 1, 20: 3, 22: 1, 23: 2, 24: 1, 25: 2,
          26: 2, 28: 1, 32: 3, 36: 1, 51: 1, 55: 1, 56: 1, 57: 1, 61: 1, 67: 1, 96: 1,
          100: 1, 200: 1, 351: 1, 387: 1, 7045: 1}
      - !!python/object/apply:collections.Counter
        - {2: 222, 3: 62, 4: 33, 5: 31, 6: 13, 7: 11, 8: 11, 9: 9, 10: 8, 11: 7, 12: 3,
          13: 3, 14: 7, 17: 2, 18: 2, 19: 2, 27: 1, 29: 1, 31: 1, 34: 1, 48: 1, 56: 1,
          59: 1, 75: 1, 101: 1, 168: 1, 192: 1, 201: 1, 714: 1, 7025: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 477}
      - !!python/object/apply:collections.Counter
        - {1: 638}
      - !!python/object/apply:collections.Counter
        - {1: 543}
      - !!python/object/apply:collections.Counter
        - {1: 572}
      - !!python/object/apply:collections.Counter
        - {1: 89}
      - !!python/object/apply:collections.Counter
        - {1: 399}
      - !!python/object/apply:collections.Counter
        - {1: 540}
      - !!python/object/apply:collections.Counter
        - {1: 414}
      - !!python/object/apply:collections.Counter
        - {1: 377}
      - !!python/object/apply:collections.Counter
        - {1: 439}
      height: [3, 4, 4, 3, 3, 3, 3, 4, 3, 4]
      max_size: [7057, 7063, 7057, 7025, 6790, 7012, 7049, 7008, 7045, 7025]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [478, 639, 544, 573, 90, 400, 541, 415, 378, 440]
      num_edges: [477, 638, 543, 572, 89, 399, 540, 414, 377, 439]
      sum_size: [10477, 10638, 10543, 10572, 10089, 10399, 10540, 10414, 10377, 10439]
      sum_weight: [477, 638, 543, 572, 89, 399, 540, 414, 377, 439]
      width: [375, 514, 407, 447, 63, 329, 430, 315, 312, 332]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 24997500.0, n: 10000,
    seed: None}
  Stats:
    edges: [24997500, 24997500, 24997500, 24997500, 24997276, 24997498, 24997500,
      24997500, 24997500, 24997500]
    randoms: [29869, 29610, 29581, 29606, 29994, 29994, 29586, 29785, 29881, 29603]
    total: [0.248534573016968, 0.248990305361531, 0.278921508552685, 0.244475994853474,
      0.257433472464982, 0.24663176246213, 0.245957893062496, 0.249699677506214, 0.251446822180696,
      0.251389130220559]
  Times:
    t_chordal: [43.15980468028556, 94.38079151320562, 112.5929688862825, 79.92674930385601,
      104.45730368262457, 92.90987184533333, 114.19450861300038, 93.51903237269926,
      44.03454758408952, 97.51313038280477]
    t_convert_nx: [71.22605928753501, 66.63319588536842, 71.64951451703837, 66.48435677390626,
      67.67793958457014, 66.54003122193308, 67.80990226162703, 65.176292291364, 68.14629417915421,
      66.24087110080018]
    t_expand_cliques: [0.06842573662243, 0.068633973873602, 0.075303027871996, 0.066965344883556,
      0.071806007541909, 0.066230028426162, 0.067363726641361, 0.068970908573647,
      0.070109386004333, 0.06869951740191]
    t_merge_cliques: [0.180108836394538, 0.180356331487928, 0.203618480680689, 0.177510649969918,
      0.185627464923073, 0.180401734035968, 0.178594166421135, 0.180728768932568,
      0.181337436176364, 0.182689612818649]
- Output:
    clique_trees:
    - avg_size: [9.056451612903226, 6.808139534883721, 6.741379310344827, 6.876470588235295,
        5.58256880733945, 5.6036866359447, 6.519337016574585, 8.135714285714286, 5.668224299065421,
        5.849514563106796]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 65, 3: 17, 4: 11, 5: 4, 6: 6, 7: 1, 8: 1, 9: 1, 10: 2, 11: 2, 12: 1,
          13: 1, 15: 1, 19: 2, 22: 1, 23: 1, 24: 1, 25: 1, 50: 1, 58: 1, 92: 1, 196: 1,
          208: 1}
      - !!python/object/apply:collections.Counter
        - {2: 100, 3: 29, 4: 9, 5: 8, 6: 4, 7: 3, 8: 1, 9: 5, 10: 1, 11: 1, 15: 1,
          22: 1, 23: 2, 24: 1, 38: 1, 40: 1, 45: 1, 59: 1, 136: 1, 264: 1}
      - !!python/object/apply:collections.Counter
        - {2: 83, 3: 36, 4: 16, 5: 9, 6: 3, 7: 3, 8: 1, 9: 4, 10: 2, 11: 2, 12: 3,
          14: 2, 16: 1, 18: 1, 23: 1, 24: 1, 28: 2, 29: 1, 32: 1, 125: 1, 278: 1}
      - !!python/object/apply:collections.Counter
        - {2: 71, 3: 40, 4: 17, 5: 12, 6: 6, 7: 2, 8: 4, 9: 1, 11: 1, 13: 2, 14: 1,
          15: 1, 17: 3, 18: 2, 20: 2, 27: 1, 32: 1, 37: 1, 118: 1, 281: 1}
      - !!python/object/apply:collections.Counter
        - {2: 112, 3: 42, 4: 23, 5: 7, 6: 10, 7: 2, 8: 5, 9: 4, 10: 5, 14: 1, 16: 1,
          20: 2, 25: 1, 26: 1, 147: 1, 272: 1}
      - !!python/object/apply:collections.Counter
        - {2: 127, 3: 31, 4: 17, 5: 12, 6: 4, 7: 4, 8: 8, 10: 4, 11: 1, 15: 1, 16: 1,
          19: 1, 24: 1, 25: 1, 33: 1, 62: 1, 92: 1, 288: 1}
      - !!python/object/apply:collections.Counter
        - {2: 75, 3: 36, 4: 24, 5: 10, 6: 6, 7: 11, 8: 3, 9: 1, 10: 2, 11: 1, 12: 1,
          14: 1, 15: 2, 18: 1, 20: 1, 21: 2, 38: 1, 60: 1, 72: 1, 293: 1}
      - !!python/object/apply:collections.Counter
        - {2: 58, 3: 27, 4: 20, 5: 4, 6: 10, 8: 3, 10: 4, 11: 1, 12: 1, 13: 2, 14: 1,
          15: 2, 16: 1, 22: 1, 32: 1, 79: 1, 84: 1, 141: 1, 251: 1}
      - !!python/object/apply:collections.Counter
        - {2: 106, 3: 42, 4: 20, 5: 12, 6: 10, 7: 6, 8: 3, 9: 2, 10: 1, 11: 2, 12: 1,
          15: 1, 18: 2, 21: 1, 32: 1, 35: 1, 44: 1, 67: 1, 297: 1}
      - !!python/object/apply:collections.Counter
        - {2: 108, 3: 34, 4: 19, 5: 13, 6: 7, 7: 6, 8: 2, 9: 2, 10: 1, 11: 1, 12: 1,
          13: 1, 14: 1, 15: 1, 16: 1, 17: 2, 21: 1, 23: 1, 37: 1, 38: 1, 93: 1, 291: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 123}
      - !!python/object/apply:collections.Counter
        - {1: 171}
      - !!python/object/apply:collections.Counter
        - {1: 173}
      - !!python/object/apply:collections.Counter
        - {1: 169}
      - !!python/object/apply:collections.Counter
        - {1: 217}
      - !!python/object/apply:collections.Counter
        - {1: 216}
      - !!python/object/apply:collections.Counter
        - {1: 180}
      - !!python/object/apply:collections.Counter
        - {1: 139}
      - !!python/object/apply:collections.Counter
        - {1: 213}
      - !!python/object/apply:collections.Counter
        - {1: 205}
      height: [4, 5, 5, 5, 5, 5, 5, 4, 5, 4]
      max_size: [208, 264, 278, 281, 272, 288, 293, 251, 297, 291]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [124, 172, 174, 170, 218, 217, 181, 140, 214, 206]
      num_edges: [123, 171, 173, 169, 217, 216, 180, 139, 213, 205]
      sum_size: [1123, 1171, 1173, 1169, 1217, 1216, 1180, 1139, 1213, 1205]
      sum_weight: [123, 171, 173, 169, 217, 216, 180, 139, 213, 205]
      width: [39, 61, 71, 60, 82, 72, 62, 57, 84, 78]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 49950.0, n: 1000,
    seed: None}
  Stats:
    edges: [49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950]
    randoms: [2907, 2842, 2893, 2869, 2805, 2778, 2832, 2878, 2802, 2818]
    total: [0.018948224367788, 0.018485664572117, 0.020862982961072, 0.020256363952287,
      0.019138027501654, 0.017985895169273, 0.025607719935234, 0.019886657488298,
      0.018975534171222, 0.018445723984595]
  Times:
    t_chordal: [0.080378554840303, 0.082031822065707, 0.078449458600215, 0.081910634812967,
      0.078674764478549, 0.078604100362163, 0.077824746846657, 0.080782398558588,
      0.078667254282603, 0.081818805598919]
    t_convert_nx: [0.100167921153867, 0.112580568187287, 0.099489272538525, 0.120965019214154,
      0.106856092014921, 0.102061514649492, 0.106576507902261, 0.115344320294836,
      0.100508610951708, 0.107973062975383]
    t_expand_cliques: [0.005557886371419, 0.005676342643813, 0.005846346170193, 0.005721062446938,
      0.005857270091566, 0.006020446167087, 0.006051511068492, 0.005747689505286,
      0.006508267530931, 0.00589857616926]
    t_merge_cliques: [0.01339033799637, 0.012809321928303, 0.015016636790879, 0.014535301505349,
      0.013280757410088, 0.011965449002187, 0.019556208866742, 0.014138967983012,
      0.012467266640291, 0.012547147815335]
- Output:
    clique_trees:
    - avg_size: [9.121951219512194, 18.224137931034484, 17.112903225806452, 19.5,
        22.25531914893617, 10.794117647058824, 27.289473684210527, 22.717391304347824,
        29.542857142857144, 22.717391304347824]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 55, 3: 29, 4: 8, 5: 6, 6: 4, 7: 6, 8: 2, 9: 2, 10: 3, 11: 2, 12: 1,
          20: 2, 43: 1, 47: 1, 569: 1}
      - !!python/object/apply:collections.Counter
        - {2: 23, 3: 8, 4: 4, 5: 4, 6: 5, 7: 2, 8: 3, 13: 1, 18: 1, 23: 1, 25: 1,
          33: 1, 34: 1, 35: 1, 153: 1, 549: 1}
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 8, 4: 7, 5: 2, 6: 3, 7: 4, 9: 1, 11: 1, 12: 1, 15: 1, 17: 1,
          27: 1, 34: 1, 40: 1, 196: 1, 536: 1}
      - !!python/object/apply:collections.Counter
        - {2: 23, 3: 10, 4: 6, 5: 2, 6: 2, 7: 1, 9: 1, 12: 1, 13: 1, 14: 1, 19: 2,
          34: 1, 71: 1, 202: 1, 531: 1}
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 8, 4: 5, 5: 2, 7: 2, 9: 2, 13: 1, 15: 1, 18: 1, 19: 1, 30: 1,
          94: 1, 204: 1, 527: 1}
      - !!python/object/apply:collections.Counter
        - {2: 48, 3: 18, 4: 8, 5: 2, 6: 5, 7: 1, 8: 2, 9: 3, 10: 2, 11: 3, 16: 2,
          18: 2, 19: 1, 24: 2, 31: 1, 41: 1, 569: 1}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 6, 4: 2, 6: 1, 7: 2, 8: 1, 9: 2, 11: 1, 12: 1, 18: 2, 20: 1,
          43: 1, 114: 1, 163: 1, 536: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 11, 4: 3, 6: 4, 9: 1, 10: 1, 13: 1, 18: 1, 20: 1, 33: 1, 40: 1,
          325: 1, 470: 1}
      - !!python/object/apply:collections.Counter
        - {2: 10, 3: 4, 4: 4, 5: 3, 6: 2, 7: 1, 8: 1, 9: 1, 10: 1, 13: 1, 14: 1, 30: 1,
          41: 1, 57: 1, 61: 1, 169: 1, 540: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 5, 5: 4, 6: 4, 9: 1, 10: 2, 11: 1, 13: 1, 15: 1, 27: 1, 30: 1,
          31: 1, 298: 1, 488: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 122}
      - !!python/object/apply:collections.Counter
        - {1: 57}
      - !!python/object/apply:collections.Counter
        - {1: 61}
      - !!python/object/apply:collections.Counter
        - {1: 53}
      - !!python/object/apply:collections.Counter
        - {1: 46}
      - !!python/object/apply:collections.Counter
        - {1: 101}
      - !!python/object/apply:collections.Counter
        - {1: 37}
      - !!python/object/apply:collections.Counter
        - {1: 45}
      - !!python/object/apply:collections.Counter
        - {1: 34}
      - !!python/object/apply:collections.Counter
        - {1: 45}
      height: [4, 3, 3, 5, 2, 3, 2, 3, 2, 2]
      max_size: [569, 549, 536, 531, 527, 569, 536, 470, 540, 488]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [123, 58, 62, 54, 47, 102, 38, 46, 35, 46]
      num_edges: [122, 57, 61, 53, 46, 101, 37, 45, 34, 45]
      sum_size: [1122, 1057, 1061, 1053, 1046, 1101, 1037, 1045, 1034, 1045]
      sum_weight: [122, 57, 61, 53, 46, 101, 37, 45, 34, 45]
      width: [91, 40, 40, 31, 28, 76, 28, 27, 21, 29]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 164835.0, n: 1000,
    seed: None}
  Stats:
    edges: [164835, 164834, 164823, 164835, 164828, 164835, 164746, 164805, 164812,
      164833]
    randoms: [2941, 2994, 2994, 2981, 2994, 2944, 2994, 2994, 2994, 2994]
    total: [0.019868223370979, 0.022585207440146, 0.022724487437664, 0.028334945180692,
      0.026881380892899, 0.020144735130749, 0.021015235115222, 0.021503397851607,
      0.026149819533405, 0.019475303574072]
  Times:
    t_chordal: [0.235336769134188, 0.243360730755718, 0.232832460159262, 0.25367461939522,
      0.241150002167714, 0.230576670395592, 0.246580556580621, 0.274088356089798,
      0.230940914898898, 0.228025934754832]
    t_convert_nx: [0.349854967875137, 0.365103737995208, 0.399398706402884, 0.373439031375892,
      0.362668727646501, 0.330409705084847, 0.334871102848378, 0.356726114419203,
      0.319392247634372, 0.327376610040929]
    t_expand_cliques: [0.005974702246334, 0.007957052603119, 0.006521581060106, 0.009826750020739,
      0.006239265967103, 0.006352260278813, 0.007075970069824, 0.006388787140907,
      0.005853856366137, 0.005782168132125]
    t_merge_cliques: [0.013893521124645, 0.014628154837027, 0.016202906377558, 0.018508195159953,
      0.020642114925796, 0.013792474851936, 0.013939265045398, 0.0151146107107, 0.020295963167268,
      0.013693135441947]
- Output:
    clique_trees:
    - avg_size: [143.71428571428572, 13.974025974025974, 23.704545454545453, 14.32,
        91.81818181818181, 17.112903225806452, 334.0, 15.691176470588236, 17.65, 48.57142857142857]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 11: 1, 22: 1, 354: 1, 612: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 13, 4: 5, 5: 1, 6: 4, 7: 1, 9: 3, 13: 2, 17: 1, 18: 1, 22: 1,
          25: 1, 59: 1, 703: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 6, 4: 4, 5: 3, 6: 2, 7: 2, 8: 1, 9: 1, 10: 2, 17: 1, 22: 1, 26: 1,
          28: 1, 35: 1, 70: 1, 701: 1}
      - !!python/object/apply:collections.Counter
        - {2: 37, 3: 12, 4: 4, 5: 6, 6: 2, 7: 4, 8: 1, 10: 1, 12: 1, 13: 1, 14: 1,
          21: 1, 28: 1, 33: 1, 35: 1, 704: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 4: 1, 13: 1, 35: 1, 313: 1, 633: 1}
      - !!python/object/apply:collections.Counter
        - {2: 33, 3: 11, 4: 3, 5: 1, 6: 2, 7: 4, 8: 2, 13: 1, 15: 1, 40: 1, 44: 1,
          77: 1, 700: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 461: 1, 536: 1}
      - !!python/object/apply:collections.Counter
        - {2: 37, 3: 7, 4: 3, 5: 2, 6: 2, 7: 1, 8: 3, 9: 2, 11: 3, 12: 2, 16: 1, 20: 1,
          28: 1, 29: 1, 35: 1, 704: 1}
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 12, 4: 2, 5: 4, 6: 1, 7: 2, 8: 3, 9: 2, 12: 3, 15: 1, 132: 1,
          694: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 2, 5: 1, 6: 2, 9: 1, 16: 1, 24: 2, 28: 1, 202: 1, 676: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 76}
      - !!python/object/apply:collections.Counter
        - {1: 43}
      - !!python/object/apply:collections.Counter
        - {1: 74}
      - !!python/object/apply:collections.Counter
        - {1: 10}
      - !!python/object/apply:collections.Counter
        - {1: 61}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 67}
      - !!python/object/apply:collections.Counter
        - {1: 59}
      - !!python/object/apply:collections.Counter
        - {1: 20}
      height: [2, 3, 2, 2, 2, 3, 2, 2, 3, 2]
      max_size: [612, 703, 701, 704, 633, 700, 536, 704, 694, 676]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 5, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [7, 77, 44, 75, 11, 62, 3, 68, 60, 21]
      num_edges: [6, 76, 43, 74, 10, 61, 2, 67, 59, 20]
      sum_size: [1006, 1076, 1043, 1074, 1010, 1061, 1002, 1067, 1059, 1020]
      sum_weight: [6, 76, 43, 74, 10, 61, 2, 67, 59, 20]
      width: [4, 60, 40, 67, 7, 53, 1, 60, 45, 16]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 249750.0, n: 1000,
    seed: None}
  Stats:
    edges: [249738, 249750, 249744, 249746, 249541, 249749, 249420, 249745, 249749,
      249592]
    randoms: [2994, 2945, 2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994]
    total: [0.020383013165713, 0.020505565908625, 0.021025134918965, 0.020795049825029,
      0.02060012610302, 0.021599664908713, 0.026831540501632, 0.020241002187856, 0.022119233919049,
      0.039170451065782]
  Times:
    t_chordal: [0.350114069635222, 0.350496748255843, 0.339663631978549, 0.331477518399126,
      0.337234424963075, 0.330758929196261, 0.371390113373238, 0.337511960840473,
      0.357519464208966, 0.394938332756983]
    t_convert_nx: [0.488411938344022, 0.568979272200565, 0.505950976854599, 0.479971843592658,
      0.468376783799552, 0.533279555778737, 0.565223150110725, 0.515841222168323,
      0.539687801154592, 0.505976921167864]
    t_expand_cliques: [0.005894138326202, 0.006406879885681, 0.005668149702785, 0.006242338319989,
      0.005850101268166, 0.007005305953435, 0.005929299698124, 0.006518167334676,
      0.007538529865489, 0.022611151753409]
    t_merge_cliques: [0.014488874839511, 0.014098686022944, 0.015356985216179, 0.01455271150504,
      0.014750024834854, 0.014594358955279, 0.020902240803508, 0.01372283485318, 0.014580704053561,
      0.016559299312373]
- Output:
    clique_trees:
    - avg_size: [28.0, 38.0, 38.0, 46.40909090909091, 500.5, 24.232558139534884, 30.38235294117647,
        33.225806451612904, 48.57142857142857, 334.0]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 10, 4: 4, 5: 1, 8: 1, 10: 1, 11: 1, 12: 3, 13: 1, 16: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {2: 14, 3: 1, 4: 2, 5: 1, 6: 2, 8: 1, 14: 1, 16: 1, 17: 1, 24: 1, 27: 1,
          864: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 5, 4: 2, 6: 2, 8: 1, 15: 1, 16: 1, 26: 1, 38: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 3, 4: 4, 5: 2, 6: 1, 25: 1, 75: 1, 862: 1}
      - !!python/object/apply:collections.Counter
        - {216: 1, 785: 1}
      - !!python/object/apply:collections.Counter
        - {2: 21, 3: 8, 4: 4, 5: 2, 6: 1, 7: 2, 8: 1, 10: 1, 14: 1, 33: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 3, 4: 3, 5: 2, 6: 1, 7: 2, 8: 2, 9: 1, 10: 1, 13: 2, 26: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 4, 4: 3, 5: 1, 6: 1, 7: 3, 8: 1, 10: 1, 12: 1, 14: 1, 40: 1,
          864: 1}
      - !!python/object/apply:collections.Counter
        - {2: 10, 3: 2, 4: 2, 6: 1, 7: 1, 9: 1, 30: 1, 32: 1, 38: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {24: 1, 139: 1, 839: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 36}
      - !!python/object/apply:collections.Counter
        - {1: 26}
      - !!python/object/apply:collections.Counter
        - {1: 26}
      - !!python/object/apply:collections.Counter
        - {1: 21}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 42}
      - !!python/object/apply:collections.Counter
        - {1: 33}
      - !!python/object/apply:collections.Counter
        - {1: 30}
      - !!python/object/apply:collections.Counter
        - {1: 20}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [865, 864, 864, 862, 785, 865, 865, 864, 864, 839]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 216, 2, 2, 2, 2, 24]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [37, 27, 27, 22, 2, 43, 34, 31, 21, 3]
      num_edges: [36, 26, 26, 21, 1, 42, 33, 30, 20, 2]
      sum_size: [1036, 1026, 1026, 1021, 1001, 1042, 1033, 1030, 1020, 1002]
      sum_weight: [36, 26, 26, 21, 1, 42, 33, 30, 20, 2]
      width: [36, 26, 26, 21, 1, 42, 33, 30, 20, 2]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 374625.0, n: 1000,
    seed: None}
  Stats:
    edges: [374281, 373887, 374166, 374243, 330940, 374518, 374417, 373957, 374550,
      361408]
    randoms: [2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994]
    total: [0.021075658055317, 0.022637096066674, 0.02149554628312, 0.021432050990136,
      0.021405082559241, 0.022001460391735, 0.021797319611061, 0.021034693350167,
      0.020344779440904, 0.020510345124229]
  Times:
    t_chordal: [0.525420818467978, 0.505526309411202, 0.458682827698013, 0.476243372678795,
      0.429893857035225, 0.478248253623413, 0.475890393469406, 0.480420748486608,
      0.570645511582597, 0.465794300512293]
    t_convert_nx: [0.759740980169326, 0.774418975397623, 0.724818910400288, 0.72268123553647,
      0.635565693561475, 0.723244500232305, 0.731803392628606, 0.723437717091599,
      0.858666646639477, 0.715146460768949]
    t_expand_cliques: [0.00654069792251, 0.007274648889805, 0.006431117336227, 0.005953195776129,
      0.005875362836342, 0.007125810461083, 0.006065165970206, 0.006297982044487,
      0.005943295972386, 0.005712186760825]
    t_merge_cliques: [0.014534960132806, 0.015362447176869, 0.015064428946893, 0.015478855214006,
      0.015529719722899, 0.014875649930651, 0.015732153640855, 0.01473671130568, 0.014401483468518,
      0.014798158363405]
- Output:
    clique_trees:
    - avg_size: [167.5, 334.0, 200.8, 500.5, 500.5, 250.75, 500.5, 250.75, 500.5,
        250.75]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 992: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 2, 994: 1}
      - !!python/object/apply:collections.Counter
        - {41: 1, 960: 1}
      - !!python/object/apply:collections.Counter
        - {20: 1, 981: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 4: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {16: 1, 985: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 5: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {71: 1, 930: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 4: 1, 994: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [994, 992, 994, 960, 981, 994, 985, 994, 930, 994]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 5, 2, 41, 20, 2, 16, 2, 71, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [6, 3, 5, 2, 2, 4, 2, 4, 2, 4]
      num_edges: [5, 2, 4, 1, 1, 3, 1, 3, 1, 3]
      sum_size: [1005, 1002, 1004, 1001, 1001, 1003, 1001, 1003, 1001, 1003]
      sum_weight: [5, 2, 4, 1, 1, 3, 1, 3, 1, 3]
      width: [5, 2, 4, 1, 1, 3, 1, 3, 1, 3]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 494505.0, n: 1000,
    seed: None}
  Stats:
    edges: [493528, 491556, 493529, 461140, 480880, 493531, 484740, 493533, 434470,
      493531]
    randoms: [2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994, 2994]
    total: [0.020742819825962, 0.020574181789748, 0.020265239638412, 0.019952542389085,
      0.02141361687282, 0.021528659419779, 0.020548578849031, 0.020854107274957, 0.023064494490427,
      0.020768422766679]
  Times:
    t_chordal: [0.666761340651902, 0.657676734539493, 0.616592548998057, 0.563203931519297,
      0.619783358156809, 0.664151206188677, 0.596332088575252, 0.627880373502528,
      0.569372874742562, 0.647218103941796]
    t_convert_nx: [1.000034137254289, 1.011617249008403, 0.997913189645075, 0.895071638734997,
      0.942924217685082, 1.029037148501494, 0.969395610153917, 0.994635671860422,
      0.857254388429382, 1.000295628622176]
    t_expand_cliques: [0.005667125585155, 0.00567873225161, 0.005769195975496, 0.005889017738063,
      0.005769878720578, 0.005885262640085, 0.005839518719334, 0.005716624603885,
      0.006798775564967, 0.005784899112463]
    t_merge_cliques: [0.015075694240807, 0.014895449538137, 0.014496043662916, 0.014063524651021,
      0.015643738152242, 0.015643396779694, 0.014709060129697, 0.015137482671072,
      0.01626571892546, 0.014983523654216]
- Output:
    clique_trees:
    - avg_size: [3.6052631578947367, 3.911764705882353, 4.413793103448276, 4.193548387096774,
        3.675675675675676, 3.675675675675676, 4.193548387096774, 4.535714285714286,
        3.75, 3.911764705882353]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 11, 4: 1, 5: 2, 6: 3, 7: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 7, 4: 1, 5: 4, 8: 1, 9: 1, 10: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {2: 14, 3: 7, 4: 1, 5: 1, 6: 2, 11: 1, 13: 1, 14: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 4, 4: 2, 6: 2, 7: 2, 11: 1, 17: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {2: 25, 3: 2, 4: 2, 5: 5, 7: 1, 19: 1, 21: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 7, 4: 4, 5: 2, 6: 4, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 9, 4: 3, 6: 2, 7: 1, 8: 1, 15: 1, 23: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 8, 5: 1, 7: 1, 8: 1, 10: 1, 13: 1, 15: 1, 19: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 6, 4: 3, 5: 2, 14: 1, 17: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 4, 4: 5, 5: 1, 6: 1, 8: 1, 9: 1, 10: 1, 25: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 37}
      - !!python/object/apply:collections.Counter
        - {1: 33}
      - !!python/object/apply:collections.Counter
        - {1: 28}
      - !!python/object/apply:collections.Counter
        - {1: 30}
      - !!python/object/apply:collections.Counter
        - {1: 36}
      - !!python/object/apply:collections.Counter
        - {1: 36}
      - !!python/object/apply:collections.Counter
        - {1: 30}
      - !!python/object/apply:collections.Counter
        - {1: 27}
      - !!python/object/apply:collections.Counter
        - {1: 35}
      - !!python/object/apply:collections.Counter
        - {1: 33}
      height: [4, 3, 4, 4, 3, 3, 4, 3, 5, 4]
      max_size: [27, 25, 20, 20, 21, 27, 23, 19, 20, 25]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [38, 34, 29, 31, 37, 37, 31, 28, 36, 34]
      num_edges: [37, 33, 28, 30, 36, 36, 30, 27, 35, 33]
      sum_size: [137, 133, 128, 130, 136, 136, 130, 127, 135, 133]
      sum_weight: [37, 33, 28, 30, 36, 36, 30, 27, 35, 33]
      width: [17, 12, 10, 7, 14, 19, 10, 8, 11, 14]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 495.0, n: 100,
    seed: None}
  Stats:
    edges: [495, 494, 495, 495, 495, 495, 495, 495, 495, 495]
    randoms: [263, 294, 290, 283, 262, 261, 278, 269, 285, 266]
    total: [0.00175089977268, 0.00166692212712, 0.001752265262852, 0.001727003694675,
      0.001441616248787, 0.001400651543635, 0.001551879580153, 0.001477801738337,
      0.001565875854413, 0.001465512326792]
  Times:
    t_chordal: [0.001790840360203, 0.00155973114864, 0.001736220753334, 0.001702083499041,
      0.001526959384519, 0.001583968599188, 0.001617764480938, 0.001554610560496,
      0.001598306245991, 0.00158192036393]
    t_convert_nx: [0.002211752705633, 0.001464829581706, 0.001412599582638, 0.001628347029769,
      0.001461415856277, 0.001434106052842, 0.001432057817585, 0.001427278601984,
      0.001449467817274, 0.001479167228509]
    t_expand_cliques: [0.000548585676486, 0.000523324108309, 0.000504548618448, 0.000643145870877,
      0.000525372343567, 0.000503865873362, 0.000510010579135, 0.000501134893019,
      0.000504548618448, 0.000518886265251]
    t_merge_cliques: [0.001202314096194, 0.00114359801881, 0.001247716644403, 0.001083857823798,
      0.00091624390522, 0.000896785670273, 0.001041869001018, 0.000976666845318, 0.001061327235965,
      0.000946626061541]
- Output:
    clique_trees:
    - avg_size: [8.615384615384615, 8.071428571428571, 8.615384615384615, 8.615384615384615,
        7.1875, 9.25, 10.9, 10.9, 4.666666666666667, 7.1875]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 2, 4: 1, 7: 1, 8: 1, 11: 1, 12: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 1, 6: 1, 8: 1, 30: 1, 48: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 5: 1, 6: 3, 7: 1, 16: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 3, 5: 1, 7: 1, 33: 1, 46: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 9: 1, 10: 1, 55: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 3, 5: 2, 7: 1, 12: 1, 13: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 4: 1, 5: 1, 11: 1, 34: 1, 45: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 1, 4: 1, 5: 1, 9: 2, 21: 1, 52: 1}
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 1, 4: 3, 6: 1, 9: 1, 56: 1}
      - !!python/object/apply:collections.Counter
        - {2: 10, 3: 2, 4: 1, 5: 1, 34: 1, 46: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 12}
      - !!python/object/apply:collections.Counter
        - {1: 13}
      - !!python/object/apply:collections.Counter
        - {1: 12}
      - !!python/object/apply:collections.Counter
        - {1: 12}
      - !!python/object/apply:collections.Counter
        - {1: 15}
      - !!python/object/apply:collections.Counter
        - {1: 11}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 26}
      - !!python/object/apply:collections.Counter
        - {1: 15}
      height: [3, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      max_size: [54, 48, 54, 46, 55, 54, 45, 52, 56, 46]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [13, 14, 13, 13, 16, 12, 10, 10, 27, 16]
      num_edges: [12, 13, 12, 12, 15, 11, 9, 9, 26, 15]
      sum_size: [112, 113, 112, 112, 115, 111, 109, 109, 126, 115]
      sum_weight: [12, 13, 12, 12, 15, 11, 9, 9, 26, 15]
      width: [10, 10, 6, 11, 13, 9, 5, 8, 20, 9]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 1633.5, n: 100,
    seed: None}
  Stats:
    edges: [1618, 1618, 1633, 1609, 1629, 1628, 1627, 1630, 1632, 1628]
    randoms: [294, 294, 294, 294, 294, 294, 294, 294, 294, 294]
    total: [0.001816784673465, 0.00182088114398, 0.00185809075116, 0.00181849153618,
      0.001765237419483, 0.001801764281576, 0.001789816242574, 0.001795278203261,
      0.001737244870963, 0.001784012909344]
  Times:
    t_chordal: [0.003143699747828, 0.004365130706426, 0.003379588174992, 0.005636402056292,
      0.003394608566881, 0.003232456608989, 0.003462541702923, 0.002885280732831,
      0.004050385221846, 0.00296789288822]
    t_convert_nx: [0.003641420915418, 0.00326864209854, 0.012663555852474, 0.007291034771866,
      0.004864217364187, 0.003402801507911, 0.005920082639465, 0.003886185028697,
      0.003558808760029, 0.00673664576215]
    t_expand_cliques: [0.000561557833117, 0.000558826852774, 0.000628808224074, 0.000546878813771,
      0.000529810186625, 0.000536296264941, 0.000524689598481, 0.000529810186625,
      0.000537320382569, 0.000519569010337]
    t_merge_cliques: [0.001255226840348, 0.001262054291206, 0.001229282527085, 0.001271612722408,
      0.001235427232858, 0.001265468016636, 0.001265126644093, 0.001265468016636,
      0.001199924488394, 0.001264443899007]
- Output:
    clique_trees:
    - avg_size: [34.0, 12.0, 17.5, 12.0, 25.75, 34.0, 13.375, 10.9, 34.0, 20.8]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1, 51: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 2, 6: 1, 9: 1, 12: 1, 69: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 2, 27: 1, 64: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 4, 4: 1, 21: 1, 67: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 8: 1, 23: 1, 66: 1}
      - !!python/object/apply:collections.Counter
        - {14: 1, 33: 1, 55: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 2, 4: 1, 5: 1, 7: 1, 15: 1, 68: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 3, 6: 2, 13: 1, 69: 1}
      - !!python/object/apply:collections.Counter
        - {13: 1, 39: 1, 50: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 1, 14: 1, 17: 1, 67: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 7}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      height: [2, 2, 2, 1, 2, 1, 1, 2, 1, 1]
      max_size: [51, 69, 64, 67, 66, 55, 68, 69, 50, 67]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 3, 2, 6, 14, 2, 2, 13, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [3, 9, 6, 9, 4, 3, 8, 10, 3, 5]
      num_edges: [2, 8, 5, 8, 3, 2, 7, 9, 2, 4]
      sum_size: [102, 108, 105, 108, 103, 102, 107, 109, 102, 104]
      sum_weight: [2, 8, 5, 8, 3, 2, 7, 9, 2, 4]
      width: [1, 6, 4, 8, 2, 2, 7, 8, 2, 4]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 2475.0, n: 100,
    seed: None}
  Stats:
    edges: [2452, 2472, 2385, 2441, 2441, 2104, 2427, 2466, 2044, 2445]
    randoms: [294, 294, 294, 294, 294, 294, 294, 294, 294, 294]
    total: [0.002244865842298, 0.003124924257967, 0.002072131335576, 0.001839315261299,
      0.001795619575804, 0.002205266627318, 0.00185467702573, 0.001804153889377, 0.003668389346309,
      0.001869697417619]
  Times:
    t_chordal: [0.003928173851478, 0.003804596990938, 0.003976990125116, 0.00405789541779,
      0.004237457375371, 0.003467662291067, 0.003768411501387, 0.003837027382516,
      0.004422822666181, 0.004397561098004]
    t_convert_nx: [0.004984039126755, 0.005074161478088, 0.005395051668441, 0.004331676197219,
      0.004750198934849, 0.006968779091341, 0.008000065543528, 0.005078599321147,
      0.004801404816289, 0.005103178144237]
    t_expand_cliques: [0.000789253319251, 0.001682966636637, 0.000758529790387, 0.000522982735766,
      0.000515472539822, 0.000536296264941, 0.000565654303632, 0.000536979010026,
      0.000518544892708, 0.000541758225627]
    t_merge_cliques: [0.001455612523047, 0.00144195762133, 0.001313601545189, 0.001316332525532,
      0.001280147035982, 0.001668970362377, 0.001289022722098, 0.00126717487935, 0.003149844453601,
      0.001327939191992]
- Output:
    clique_trees:
    - avg_size: [13.375, 25.75, 15.142857142857142, 34.0, 34.0, 34.0, 25.75, 15.142857142857142,
        25.75, 13.375]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 1, 4: 1, 6: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 6: 1, 10: 1, 84: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 1, 9: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {8: 1, 12: 1, 82: 1}
      - !!python/object/apply:collections.Counter
        - {9: 1, 10: 1, 83: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 15: 1, 85: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 1, 12: 1, 84: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 1, 4: 1, 7: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 12: 1, 85: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 2, 4: 1, 5: 1, 86: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 7}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 7}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [86, 84, 86, 82, 83, 85, 84, 86, 85, 86]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 3, 2, 8, 9, 2, 3, 2, 3, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [8, 4, 7, 3, 3, 3, 4, 7, 4, 8]
      num_edges: [7, 3, 6, 2, 2, 2, 3, 6, 3, 7]
      sum_size: [107, 103, 106, 102, 102, 102, 103, 106, 103, 107]
      sum_weight: [7, 3, 6, 2, 2, 2, 3, 6, 3, 7]
      width: [7, 3, 6, 2, 2, 2, 3, 6, 3, 7]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 3712.5, n: 100,
    seed: None}
  Stats:
    edges: [3683, 3549, 3698, 3415, 3484, 3676, 3561, 3688, 3642, 3680]
    randoms: [294, 294, 294, 294, 294, 294, 294, 294, 294, 294]
    total: [0.001893934868167, 0.001850239182672, 0.001952992318094, 0.004352841294881,
      0.002699574069478, 0.002153378000793, 0.002629592698178, 0.002871284458571,
      0.002159522706565, 0.001935582318404]
  Times:
    t_chordal: [0.005352038728032, 0.009279871206967, 0.007428607906666, 0.005702286957077,
      0.006635599489443, 0.006252579496277, 0.006175087929033, 0.006475837139353,
      0.005075868340803, 0.005297760493707]
    t_convert_nx: [0.007182478303215, 0.007367160848939, 0.00726816281149, 0.006284668515313,
      0.00855513729833, 0.010543973733431, 0.007139465362806, 0.006896066739698, 0.006445796355575,
      0.007749498097019]
    t_expand_cliques: [0.000578967832807, 0.000540392735456, 0.000642121753248, 0.0005455133236,
      0.000564288813461, 0.000531858421883, 0.000625394498645, 0.0006154946949, 0.000606619008784,
      0.000640756263077]
    t_merge_cliques: [0.00131496703536, 0.001309846447217, 0.001310870564845, 0.003807327971281,
      0.002135285256017, 0.00162151957891, 0.002004198199533, 0.002255789763671, 0.001552903697781,
      0.001294826055328]
- Output:
    clique_trees:
    - avg_size: [50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {6: 1, 95: 1}
      - !!python/object/apply:collections.Counter
        - {29: 1, 72: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 98: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 91: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 96: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 95: 1}
      - !!python/object/apply:collections.Counter
        - {9: 1, 92: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [95, 72, 98, 91, 99, 99, 99, 96, 95, 92]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [6, 29, 3, 10, 2, 2, 2, 5, 6, 9]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      num_edges: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      sum_size: [101, 101, 101, 101, 101, 101, 101, 101, 101, 101]
      sum_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      width: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 4900.5, n: 100,
    seed: None}
  Stats:
    edges: [4480, 2962, 4756, 4140, 4852, 4852, 4852, 4570, 4480, 4222]
    randoms: [294, 294, 294, 294, 294, 294, 294, 294, 294, 294]
    total: [0.002301192311881, 0.001891545260367, 0.001857066633531, 0.001957771533695,
      0.001818150163637, 0.001809957222607, 0.001923292906859, 0.001809957222607,
      0.001861163104046, 0.00180449526192]
  Times:
    t_chordal: [0.005874680091256, 0.00421868188551, 0.005950806168329, 0.005492342843176,
      0.006027614990488, 0.00619454616398, 0.006027273617945, 0.005797188524011, 0.005641864016979,
      0.005397441276242]
    t_convert_nx: [0.008153683187846, 0.005478005196373, 0.00815300044276, 0.007955004367862,
      0.007923939466455, 0.007815724370347, 0.008049905934796, 0.007781587116054,
      0.007318003202757, 0.006917573209902]
    t_expand_cliques: [0.000552340774458, 0.000544830578514, 0.000546196068686, 0.000643828615963,
      0.000526396461196, 0.00051991038288, 0.000609008616584, 0.000518203520165, 0.000508645088963,
      0.000529468814082]
    t_merge_cliques: [0.001748851537422, 0.001346714681853, 0.001310870564845, 0.001313942917732,
      0.001291753702441, 0.001290046839727, 0.001314284290274, 0.001291753702441,
      0.001352518015083, 0.001275026447838]
- Output:
    clique_trees:
    - avg_size: [6.679545454545455, 5.85242718446602, 8.4375, 8.883280757097792, 5.741935483870968,
        5.585321100917431, 5.368881118881119, 7.884297520661157, 6.653846153846154,
        6.516556291390729]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 246, 3: 61, 4: 28, 5: 20, 6: 14, 7: 16, 8: 8, 9: 7, 10: 8, 11: 4, 12: 2,
          13: 2, 14: 4, 15: 1, 16: 1, 17: 1, 19: 2, 20: 1, 22: 2, 27: 1, 28: 1, 30: 1,
          33: 1, 42: 1, 46: 1, 55: 1, 57: 1, 63: 1, 75: 1, 134: 1, 759: 1}
      - !!python/object/apply:collections.Counter
        - {2: 288, 3: 76, 4: 40, 5: 28, 6: 18, 7: 10, 8: 9, 9: 4, 10: 8, 11: 5, 12: 1,
          13: 3, 14: 2, 15: 2, 16: 3, 17: 2, 18: 2, 19: 1, 21: 1, 24: 1, 25: 1, 28: 1,
          29: 1, 30: 1, 34: 2, 36: 1, 37: 1, 52: 1, 125: 1, 768: 1}
      - !!python/object/apply:collections.Counter
        - {2: 170, 3: 46, 4: 37, 5: 13, 6: 11, 7: 7, 8: 9, 9: 8, 10: 4, 11: 5, 12: 2,
          13: 4, 14: 1, 15: 4, 24: 1, 27: 2, 29: 3, 30: 1, 38: 1, 49: 1, 60: 1, 72: 1,
          81: 1, 83: 1, 419: 1, 643: 1}
      - !!python/object/apply:collections.Counter
        - {2: 151, 3: 59, 4: 25, 5: 20, 6: 10, 7: 7, 8: 6, 9: 3, 10: 3, 11: 4, 12: 3,
          13: 1, 14: 5, 15: 1, 16: 2, 17: 2, 18: 1, 19: 1, 23: 1, 25: 1, 31: 1, 32: 1,
          39: 2, 40: 1, 84: 1, 91: 1, 142: 1, 191: 1, 197: 1, 708: 1}
      - !!python/object/apply:collections.Counter
        - {2: 302, 3: 84, 4: 44, 5: 26, 6: 11, 7: 10, 8: 9, 9: 8, 10: 4, 11: 7, 12: 3,
          13: 1, 14: 3, 16: 1, 21: 1, 26: 2, 27: 1, 28: 1, 29: 3, 38: 1, 49: 1, 93: 1,
          95: 1, 108: 1, 762: 1}
      - !!python/object/apply:collections.Counter
        - {2: 304, 3: 91, 4: 51, 5: 19, 6: 19, 7: 6, 8: 8, 9: 3, 10: 7, 11: 3, 12: 6,
          13: 1, 14: 3, 15: 5, 16: 6, 18: 1, 19: 2, 26: 1, 27: 2, 30: 1, 33: 1, 36: 1,
          48: 1, 58: 1, 104: 1, 771: 1}
      - !!python/object/apply:collections.Counter
        - {2: 329, 3: 101, 4: 47, 5: 33, 6: 20, 7: 6, 8: 4, 9: 5, 10: 2, 11: 3, 12: 1,
          13: 2, 14: 3, 16: 1, 17: 2, 18: 2, 20: 2, 21: 1, 30: 1, 39: 1, 43: 1, 44: 1,
          49: 1, 88: 1, 194: 1, 751: 1}
      - !!python/object/apply:collections.Counter
        - {2: 193, 3: 60, 4: 29, 5: 16, 6: 13, 7: 10, 8: 5, 9: 3, 10: 5, 11: 3, 12: 2,
          13: 1, 14: 3, 15: 1, 17: 1, 18: 1, 19: 1, 21: 1, 22: 2, 26: 1, 29: 1, 31: 2,
          32: 1, 34: 1, 36: 1, 42: 1, 43: 1, 61: 1, 261: 1, 290: 1, 673: 1}
      - !!python/object/apply:collections.Counter
        - {2: 229, 3: 75, 4: 46, 5: 27, 6: 16, 7: 5, 8: 4, 9: 5, 10: 4, 11: 2, 13: 2,
          15: 5, 16: 1, 18: 1, 19: 1, 20: 4, 22: 1, 26: 2, 27: 1, 29: 1, 37: 1, 39: 2,
          47: 1, 54: 1, 67: 1, 69: 1, 88: 1, 105: 1, 760: 1}
      - !!python/object/apply:collections.Counter
        - {2: 233, 3: 83, 4: 41, 5: 28, 6: 13, 7: 7, 8: 7, 9: 8, 10: 3, 11: 1, 12: 4,
          13: 1, 14: 2, 15: 1, 16: 2, 17: 2, 19: 1, 20: 1, 27: 1, 31: 1, 32: 1, 33: 2,
          35: 1, 39: 1, 43: 1, 44: 1, 48: 1, 64: 1, 67: 1, 71: 1, 98: 1, 763: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 439}
      - !!python/object/apply:collections.Counter
        - {1: 514}
      - !!python/object/apply:collections.Counter
        - {1: 335}
      - !!python/object/apply:collections.Counter
        - {1: 316}
      - !!python/object/apply:collections.Counter
        - {1: 526}
      - !!python/object/apply:collections.Counter
        - {1: 544}
      - !!python/object/apply:collections.Counter
        - {1: 571}
      - !!python/object/apply:collections.Counter
        - {1: 362}
      - !!python/object/apply:collections.Counter
        - {1: 441}
      - !!python/object/apply:collections.Counter
        - {1: 452}
      height: [6, 5, 5, 5, 5, 6, 5, 6, 5, 5]
      max_size: [759, 768, 643, 708, 762, 771, 751, 673, 760, 763]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [440, 515, 336, 317, 527, 545, 572, 363, 442, 453]
      num_edges: [439, 514, 335, 316, 526, 544, 571, 362, 441, 452]
      sum_size: [2939, 3014, 2835, 2816, 3026, 3044, 3071, 2862, 2941, 2952]
      sum_weight: [439, 514, 335, 316, 526, 544, 571, 362, 441, 452]
      width: [176, 210, 96, 118, 201, 222, 224, 121, 196, 171]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 312375.0, n: 2500,
    seed: None}
  Stats:
    edges: [312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375,
      312375]
    randoms: [7086, 7009, 7203, 7273, 6975, 6976, 6959, 7226, 7147, 7155]
    total: [0.050718060075418, 0.083191805966578, 0.050919469875751, 0.062225045752456,
      0.047747777579403, 0.049235820494033, 0.047163006413371, 0.048750730110513,
      0.048284756589439, 0.058951624438322]
  Times:
    t_chordal: [0.610164504014712, 0.471151459828477, 0.521723071082974, 0.49579958154554,
      0.471467570803227, 0.472574983332493, 0.459533869447526, 0.483716359016043,
      0.459352600627241, 0.466834804023151]
    t_convert_nx: [0.793871065638768, 0.770684359777988, 0.69903845595833, 0.732472141440212,
      0.736854682146316, 0.668270890036737, 0.67382741091798, 0.645068481038976, 0.666794112416028,
      0.655222265955842]
    t_expand_cliques: [0.016785970680878, 0.031470110614947, 0.015288369335053, 0.016950512246567,
      0.015332406393085, 0.016101518732313, 0.01568060638688, 0.016136680104225, 0.015664220504817,
      0.025504625427274]
    t_merge_cliques: [0.03393208939454, 0.051721695351631, 0.035631100540698, 0.045274533505889,
      0.032415371186318, 0.03313430176172, 0.031482400026491, 0.032614050006288, 0.032620536084622,
      0.033446999011048]
- Output:
    clique_trees:
    - avg_size: [18.97841726618705, 22.358974358974358, 19.931818181818183, 27.305263157894736,
        25.5, 11.588983050847459, 21.483606557377048, 16.52173913043478, 29.724137931034484,
        10.76171875]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 70, 3: 17, 4: 13, 5: 13, 6: 7, 7: 1, 8: 1, 9: 3, 11: 3, 12: 1, 14: 1,
          15: 1, 17: 1, 18: 1, 38: 1, 56: 1, 62: 1, 78: 1, 608: 1, 1295: 1}
      - !!python/object/apply:collections.Counter
        - {2: 51, 3: 24, 4: 10, 5: 6, 6: 5, 7: 2, 8: 2, 9: 4, 10: 1, 11: 1, 12: 1,
          14: 1, 15: 1, 19: 1, 22: 1, 29: 1, 41: 1, 49: 1, 92: 1, 733: 1, 1229: 1}
      - !!python/object/apply:collections.Counter
        - {2: 63, 3: 18, 4: 12, 5: 8, 6: 2, 7: 6, 8: 2, 9: 3, 10: 3, 13: 3, 16: 1,
          17: 1, 19: 1, 27: 2, 31: 1, 33: 1, 36: 1, 49: 1, 271: 1, 295: 1, 1376: 1}
      - !!python/object/apply:collections.Counter
        - {2: 48, 3: 7, 4: 6, 5: 11, 6: 3, 7: 2, 8: 2, 9: 3, 11: 1, 13: 1, 14: 1,
          18: 1, 19: 1, 23: 3, 41: 1, 94: 1, 117: 1, 664: 1, 1263: 1}
      - !!python/object/apply:collections.Counter
        - {2: 43, 3: 14, 4: 15, 5: 6, 6: 1, 7: 3, 8: 3, 10: 2, 11: 1, 13: 2, 16: 1,
          20: 1, 21: 1, 23: 1, 25: 1, 29: 1, 33: 1, 38: 1, 46: 1, 103: 1, 645: 1,
          1276: 1}
      - !!python/object/apply:collections.Counter
        - {2: 111, 3: 39, 4: 28, 5: 10, 6: 6, 7: 8, 8: 6, 9: 4, 10: 4, 11: 1, 12: 3,
          13: 1, 14: 1, 15: 1, 18: 1, 20: 1, 22: 1, 26: 1, 34: 1, 37: 1, 38: 1, 44: 1,
          46: 1, 58: 1, 64: 1, 96: 1, 1426: 1}
      - !!python/object/apply:collections.Counter
        - {2: 53, 3: 20, 4: 17, 5: 13, 6: 1, 7: 1, 8: 2, 9: 2, 13: 1, 15: 1, 18: 1,
          19: 1, 21: 1, 23: 1, 26: 1, 28: 1, 31: 1, 45: 1, 51: 1, 788: 1, 1197: 1}
      - !!python/object/apply:collections.Counter
        - {2: 73, 3: 33, 4: 10, 5: 7, 6: 4, 7: 5, 8: 7, 9: 2, 10: 1, 11: 1, 12: 4,
          14: 2, 16: 1, 20: 2, 21: 1, 31: 1, 36: 1, 40: 1, 70: 1, 98: 1, 168: 1, 183: 1,
          1407: 1}
      - !!python/object/apply:collections.Counter
        - {2: 40, 3: 8, 4: 12, 5: 2, 6: 4, 7: 2, 8: 2, 9: 1, 10: 2, 11: 1, 13: 1,
          17: 1, 23: 1, 24: 1, 26: 1, 32: 1, 41: 2, 42: 1, 74: 1, 91: 1, 618: 1, 1288: 1}
      - !!python/object/apply:collections.Counter
        - {2: 122, 3: 56, 4: 17, 5: 6, 6: 12, 7: 11, 8: 2, 9: 3, 10: 3, 11: 2, 12: 2,
          13: 2, 14: 3, 15: 1, 17: 1, 18: 1, 20: 1, 21: 2, 30: 1, 32: 1, 37: 1, 45: 1,
          47: 1, 49: 1, 51: 1, 78: 1, 1428: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 138}
      - !!python/object/apply:collections.Counter
        - {1: 116}
      - !!python/object/apply:collections.Counter
        - {1: 131}
      - !!python/object/apply:collections.Counter
        - {1: 94}
      - !!python/object/apply:collections.Counter
        - {1: 101}
      - !!python/object/apply:collections.Counter
        - {1: 235}
      - !!python/object/apply:collections.Counter
        - {1: 121}
      - !!python/object/apply:collections.Counter
        - {1: 160}
      - !!python/object/apply:collections.Counter
        - {1: 86}
      - !!python/object/apply:collections.Counter
        - {1: 255}
      height: [3, 3, 4, 2, 3, 4, 2, 3, 4, 4]
      max_size: [1295, 1229, 1376, 1263, 1276, 1426, 1197, 1407, 1288, 1428]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [139, 117, 132, 95, 102, 236, 122, 161, 87, 256]
      num_edges: [138, 116, 131, 94, 101, 235, 121, 160, 86, 255]
      sum_size: [2638, 2616, 2631, 2594, 2601, 2735, 2621, 2660, 2586, 2755]
      sum_weight: [138, 116, 131, 94, 101, 235, 121, 160, 86, 255]
      width: [72, 70, 86, 59, 66, 166, 68, 104, 49, 180]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 1030837.5, n: 2500,
    seed: None}
  Stats:
    edges: [1030837, 1030796, 1030836, 1030819, 1030836, 1030837, 1030796, 1030836,
      1030837, 1030837]
    randoms: [7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494]
    total: [0.053285522970796, 0.061964237129672, 0.072868700268415, 0.063062091227721,
      0.053301908852845, 0.0540116223696, 0.069927434438554, 0.05719253172461, 0.05940291894008,
      0.055405787834914]
  Times:
    t_chordal: [1.459974240027904, 1.615117478240066, 1.429618028020542, 1.429105627833607,
      1.406140472753179, 1.412067724216044, 1.770020048809457, 1.419217772127681,
      1.4651494477787, 1.415375965529577]
    t_convert_nx: [2.477086562859839, 2.157433847975199, 2.317324554141862, 2.147005599533827,
      2.062343160652304, 2.260127243201651, 2.307456156670881, 2.176786598806359,
      2.172035375753879, 2.416243051788612]
    t_expand_cliques: [0.015933563441195, 0.016427188138266, 0.015632814230869, 0.016871313816608,
      0.014772555422681, 0.015130655220219, 0.015887136775348, 0.015659099916675,
      0.015573074035856, 0.014491947192397]
    t_merge_cliques: [0.037351959529602, 0.045537048991406, 0.057235886037546, 0.046190777411113,
      0.038529353430164, 0.038880967149382, 0.054040297663207, 0.041533431807935,
      0.043829844904224, 0.040913840642517]
- Output:
    clique_trees:
    - avg_size: [20.076335877862597, 105.125, 834.0, 17.333333333333332, 19.649253731343283,
        16.81645569620253, 15.28, 48.15094339622642, 23.513513513513512, 32.2375]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 66, 3: 20, 4: 14, 5: 4, 6: 7, 7: 1, 8: 3, 10: 3, 11: 1, 12: 1, 13: 1,
          15: 1, 19: 1, 20: 1, 28: 1, 30: 1, 31: 1, 43: 1, 48: 1, 240: 1, 1749: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 3, 4: 5, 5: 1, 17: 1, 21: 1, 30: 1, 31: 1, 794: 1, 1578: 1}
      - !!python/object/apply:collections.Counter
        - {321: 1, 701: 1, 1480: 1}
      - !!python/object/apply:collections.Counter
        - {2: 68, 3: 26, 4: 15, 5: 7, 6: 4, 7: 7, 8: 3, 9: 4, 10: 4, 11: 1, 12: 2,
          14: 1, 19: 2, 21: 1, 24: 1, 26: 1, 33: 1, 44: 1, 56: 1, 58: 2, 1763: 1}
      - !!python/object/apply:collections.Counter
        - {2: 70, 3: 19, 4: 10, 5: 8, 6: 5, 7: 6, 8: 3, 9: 2, 10: 2, 11: 1, 12: 1,
          16: 1, 32: 1, 42: 1, 48: 1, 92: 1, 219: 1, 1750: 1}
      - !!python/object/apply:collections.Counter
        - {2: 77, 3: 19, 4: 15, 5: 7, 6: 8, 7: 5, 8: 4, 9: 3, 10: 3, 11: 4, 12: 1,
          13: 1, 14: 2, 15: 1, 16: 1, 18: 1, 30: 1, 41: 1, 45: 1, 56: 1, 99: 1, 1762: 1}
      - !!python/object/apply:collections.Counter
        - {2: 99, 3: 20, 4: 18, 5: 10, 6: 5, 7: 2, 8: 2, 9: 5, 11: 1, 12: 1, 15: 2,
          22: 1, 23: 1, 24: 1, 36: 1, 40: 1, 42: 2, 55: 1, 90: 1, 1762: 1}
      - !!python/object/apply:collections.Counter
        - {2: 26, 3: 5, 4: 7, 5: 3, 6: 2, 9: 1, 11: 2, 12: 1, 17: 1, 24: 1, 25: 1,
          28: 1, 650: 1, 1643: 1}
      - !!python/object/apply:collections.Counter
        - {2: 45, 3: 22, 4: 9, 5: 4, 6: 2, 7: 3, 8: 5, 10: 5, 11: 3, 13: 1, 14: 1,
          16: 1, 21: 2, 22: 1, 24: 1, 26: 1, 34: 1, 36: 1, 67: 1, 194: 1, 1754: 1}
      - !!python/object/apply:collections.Counter
        - {2: 38, 3: 18, 4: 5, 5: 5, 6: 4, 7: 2, 8: 2, 9: 3, 45: 1, 625: 1, 1653: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 130}
      - !!python/object/apply:collections.Counter
        - {1: 23}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 152}
      - !!python/object/apply:collections.Counter
        - {1: 133}
      - !!python/object/apply:collections.Counter
        - {1: 157}
      - !!python/object/apply:collections.Counter
        - {1: 174}
      - !!python/object/apply:collections.Counter
        - {1: 52}
      - !!python/object/apply:collections.Counter
        - {1: 110}
      - !!python/object/apply:collections.Counter
        - {1: 79}
      height: [3, 2, 2, 4, 3, 3, 3, 2, 2, 2]
      max_size: [1749, 1578, 1480, 1763, 1750, 1762, 1762, 1643, 1754, 1653]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 321, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [131, 24, 3, 153, 134, 158, 175, 53, 111, 80]
      num_edges: [130, 23, 2, 152, 133, 157, 174, 52, 110, 79]
      sum_size: [2630, 2523, 2502, 2652, 2633, 2657, 2674, 2552, 2610, 2579]
      sum_weight: [130, 23, 2, 152, 133, 157, 174, 52, 110, 79]
      width: [103, 18, 1, 130, 99, 127, 148, 36, 89, 55]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 1561875.0, n: 2500,
    seed: None}
  Stats:
    edges: [1561875, 1560378, 1391170, 1561875, 1561872, 1561875, 1561874, 1561273,
      1561873, 1561806]
    randoms: [7444, 7494, 7494, 7493, 7494, 7377, 7494, 7494, 7494, 7494]
    total: [0.063651641609354, 0.070483871683535, 0.054642137456383, 0.055048370782487,
      0.052372351418455, 0.062856243584349, 0.052683341805078, 0.054024253153671,
      0.064989480605107, 0.055655331163791]
  Times:
    t_chordal: [2.153822467843554, 2.14065982533333, 1.903624727798075, 2.234525326599652,
      2.095465173002481, 2.025947726987994, 2.03720482796362, 2.08033383503718, 2.025437033663763,
      2.06074348891616]
    t_convert_nx: [3.288527731910577, 3.374964966642793, 3.02412070113823, 3.279910464809433,
      3.153276954519953, 3.113351728761756, 3.077053927644727, 3.074275837890355,
      3.123464890346014, 3.146903529143486]
    t_expand_cliques: [0.02098929080195, 0.027195102259853, 0.014225335236375, 0.015426625214957,
      0.014135895630119, 0.025118191708685, 0.014892718557803, 0.015039850123799,
      0.026831540501632, 0.015135093063265]
    t_merge_cliques: [0.042662350807404, 0.043288769423683, 0.040416802220008, 0.03962174556753,
      0.038236455788336, 0.037738051875664, 0.037790623247275, 0.038984403029872,
      0.038157940103474, 0.040520238100527]
- Output:
    clique_trees:
    - avg_size: [37.75, 35.708333333333336, 834.0, 57.79545454545455, 39.44615384615385,
        1250.5, 50.0, 250.9, 38.298507462686565, 1250.5]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 16, 4: 7, 5: 4, 6: 4, 7: 2, 9: 2, 19: 1, 28: 1, 30: 1, 121: 1,
          2161: 1}
      - !!python/object/apply:collections.Counter
        - {2: 34, 3: 15, 4: 4, 5: 3, 6: 1, 7: 4, 8: 3, 11: 1, 13: 1, 18: 1, 20: 1,
          23: 1, 28: 1, 94: 1, 2162: 1}
      - !!python/object/apply:collections.Counter
        - {108: 1, 310: 1, 2084: 1}
      - !!python/object/apply:collections.Counter
        - {2: 23, 3: 5, 4: 3, 6: 1, 7: 3, 8: 1, 9: 1, 17: 1, 24: 1, 26: 1, 44: 1,
          45: 1, 109: 1, 2161: 1}
      - !!python/object/apply:collections.Counter
        - {2: 32, 3: 13, 4: 2, 5: 4, 6: 2, 7: 1, 8: 3, 10: 1, 12: 1, 13: 2, 36: 1,
          67: 1, 77: 1, 2162: 1}
      - !!python/object/apply:collections.Counter
        - {953: 1, 1548: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 9, 4: 5, 5: 2, 6: 2, 7: 1, 8: 2, 9: 1, 10: 1, 15: 1, 18: 1, 28: 1,
          48: 1, 126: 1, 2160: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 5: 1, 6: 1, 7: 1, 17: 1, 20: 1, 304: 1, 2143: 1}
      - !!python/object/apply:collections.Counter
        - {2: 29, 3: 16, 4: 7, 5: 3, 6: 1, 7: 2, 8: 1, 10: 1, 11: 1, 16: 1, 17: 1,
          25: 1, 68: 1, 80: 1, 2162: 1}
      - !!python/object/apply:collections.Counter
        - {1144: 1, 1357: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 67}
      - !!python/object/apply:collections.Counter
        - {1: 71}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 43}
      - !!python/object/apply:collections.Counter
        - {1: 64}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 50}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 66}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [2161, 2162, 2084, 2161, 2162, 1548, 2160, 2143, 2162, 1357]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 108, 2, 2, 953, 2, 2, 2, 1144]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [68, 72, 3, 44, 65, 2, 51, 10, 67, 2]
      num_edges: [67, 71, 2, 43, 64, 1, 50, 9, 66, 1]
      sum_size: [2567, 2571, 2502, 2543, 2564, 2501, 2550, 2509, 2566, 2501]
      sum_weight: [67, 71, 2, 43, 64, 1, 50, 9, 66, 1]
      width: [67, 71, 2, 43, 64, 1, 50, 9, 66, 1]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 2342812.5, n: 2500,
    seed: None}
  Stats:
    edges: [2342456, 2341835, 2224159, 2342637, 2342333, 1651006, 2341646, 2341586,
      2342369, 1573842]
    randoms: [7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494]
    total: [0.052873144938928, 0.052631794551075, 0.063585756708562, 0.053937885900325,
      0.053803385118385, 0.053480446692788, 0.051629866137574, 0.052847541998204,
      0.05379963002045, 0.053203934933066]
  Times:
    t_chordal: [3.072472708118624, 2.992644104444963, 2.821040906330438, 2.962802682232336,
      2.973344949103051, 2.270401191253626, 3.082001098536836, 2.997711438472209,
      2.969598385444414, 2.153766141373978]
    t_convert_nx: [4.781001320770372, 4.561625766253343, 4.404257461806367, 4.721440346342945,
      4.675159787953049, 3.422074718939427, 4.650670063095873, 4.556279189485991,
      4.597221364049574, 3.212515331894338]
    t_expand_cliques: [0.014770848559976, 0.01491729738089, 0.02584019463697, 0.014593334837656,
      0.014829564637353, 0.015251842472964, 0.015605845799968, 0.015714402268628,
      0.015002640516627, 0.01520507443459]
    t_merge_cliques: [0.038102296378952, 0.037714497170185, 0.037745562071592, 0.039344551062669,
      0.038973820481033, 0.038228604219825, 0.036024020337607, 0.037133139729576,
      0.038796989503822, 0.037998860498476]
- Output:
    clique_trees:
    - avg_size: [1250.5, 358.0, 1250.5, 417.5, 1250.5, 625.75, 834.0, 1250.5, 417.5,
        834.0]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {19: 1, 2482: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 4: 3, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {18: 1, 2483: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 1, 9: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {41: 1, 2460: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 11: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 13: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {18: 1, 2483: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 3, 7: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 13: 1, 2482: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [2482, 2487, 2483, 2487, 2460, 2487, 2487, 2483, 2487, 2482]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [19, 2, 18, 2, 41, 2, 2, 18, 2, 7]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 7, 2, 6, 2, 4, 3, 2, 6, 3]
      num_edges: [1, 6, 1, 5, 1, 3, 2, 1, 5, 2]
      sum_size: [2501, 2506, 2501, 2505, 2501, 2503, 2502, 2501, 2505, 2502]
      sum_weight: [1, 6, 1, 5, 1, 3, 2, 1, 5, 2]
      width: [1, 6, 1, 5, 1, 3, 2, 1, 5, 2]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 3092512.5, n: 2500,
    seed: None}
  Stats:
    edges: [3079092, 3091364, 3081556, 3091383, 3025390, 3091400, 3091420, 3081556,
      3091372, 3079020]
    randoms: [7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494, 7494]
    total: [0.054024253153671, 0.066805241160921, 0.056314862916793, 0.055209839995257,
      0.056103211940126, 0.055479524304189, 0.05622849566339, 0.055346047639887, 0.06649698175471,
      0.065869197648226]
  Times:
    t_chordal: [3.809616532808832, 3.81073555200453, 3.806315460318729, 3.84786664349889,
      3.707930527956535, 3.871003508968386, 3.770501384094928, 3.77753980318505, 3.77183478524762,
      3.803261200177133]
    t_convert_nx: [6.410879065021561, 6.285640402942533, 6.040158724577566, 6.073157160067183,
      6.194526022999639, 6.293326747119124, 6.011265293916608, 6.084383196141403,
      6.142465003340305, 6.091564308954446]
    t_expand_cliques: [0.01498625463455, 0.027089959516616, 0.016239433239662, 0.014959968948745,
      0.015058284241093, 0.015787455992779, 0.016671269506446, 0.015514699330993,
      0.026320505804904, 0.026256327766816]
    t_merge_cliques: [0.03903799851912, 0.039715281644305, 0.040075429677131, 0.040249871046512,
      0.041044927699033, 0.03969206831141, 0.039557226156944, 0.039831348308894, 0.040176475949806,
      0.03961286988141]
- Output:
    clique_trees:
    - avg_size: [6.054600606673407, 6.972520908004779, 7.0963414634146345, 8.574242424242424,
        6.416034669555796, 11.181262729124237, 7.7829036635006785, 9.38758389261745,
        7.71006711409396, 8.655436447166922]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 557, 3: 159, 4: 91, 5: 38, 6: 30, 7: 23, 8: 13, 9: 14, 10: 7, 11: 8,
          12: 1, 13: 3, 14: 2, 15: 1, 16: 2, 17: 2, 18: 4, 19: 3, 20: 3, 21: 1, 22: 2,
          23: 1, 24: 1, 25: 2, 28: 1, 29: 2, 32: 1, 33: 1, 35: 1, 36: 1, 37: 2, 38: 1,
          39: 1, 43: 1, 46: 1, 47: 1, 52: 1, 61: 1, 90: 1, 96: 1, 115: 1, 127: 1,
          1553: 1}
      - !!python/object/apply:collections.Counter
        - {2: 447, 3: 141, 4: 70, 5: 43, 6: 33, 7: 23, 8: 14, 9: 10, 10: 2, 11: 8,
          12: 3, 13: 4, 14: 1, 15: 2, 16: 1, 17: 1, 18: 3, 19: 5, 20: 1, 21: 2, 24: 1,
          25: 2, 26: 1, 27: 2, 29: 2, 31: 1, 32: 1, 35: 1, 37: 1, 50: 1, 53: 1, 56: 1,
          57: 2, 65: 1, 82: 1, 90: 1, 290: 1, 332: 1, 1500: 1}
      - !!python/object/apply:collections.Counter
        - {2: 462, 3: 128, 4: 61, 5: 39, 6: 24, 7: 22, 8: 7, 9: 12, 10: 8, 11: 5,
          12: 4, 13: 5, 14: 3, 16: 4, 17: 1, 18: 3, 19: 1, 20: 2, 21: 2, 22: 1, 25: 3,
          26: 1, 29: 1, 31: 2, 32: 1, 34: 1, 37: 1, 38: 2, 40: 1, 42: 2, 48: 1, 56: 1,
          57: 1, 71: 1, 80: 1, 86: 1, 109: 1, 156: 1, 186: 1, 189: 1, 1529: 1}
      - !!python/object/apply:collections.Counter
        - {2: 352, 3: 113, 4: 48, 5: 34, 6: 15, 7: 16, 8: 9, 9: 14, 10: 7, 11: 8,
          12: 6, 13: 4, 14: 3, 15: 3, 16: 2, 18: 1, 20: 2, 22: 2, 23: 1, 24: 1, 26: 1,
          27: 1, 30: 1, 32: 1, 34: 1, 35: 1, 39: 1, 40: 1, 41: 1, 51: 1, 58: 1, 61: 1,
          66: 1, 113: 1, 153: 1, 330: 1, 347: 1, 390: 1, 1431: 1}
      - !!python/object/apply:collections.Counter
        - {2: 506, 3: 150, 4: 70, 5: 43, 6: 42, 7: 24, 8: 12, 9: 10, 10: 6, 11: 5,
          12: 4, 13: 3, 14: 4, 15: 4, 16: 2, 17: 2, 18: 2, 19: 3, 20: 4, 21: 1, 22: 1,
          23: 2, 24: 1, 25: 1, 26: 1, 27: 3, 28: 1, 29: 1, 30: 2, 32: 1, 34: 1, 35: 1,
          37: 2, 50: 1, 55: 1, 63: 1, 78: 1, 120: 1, 171: 1, 186: 1, 1542: 1}
      - !!python/object/apply:collections.Counter
        - {2: 250, 3: 93, 4: 36, 5: 27, 6: 15, 7: 11, 8: 6, 9: 8, 10: 4, 11: 2, 12: 1,
          13: 3, 14: 2, 15: 2, 16: 2, 17: 1, 18: 1, 21: 1, 23: 1, 24: 1, 26: 1, 27: 1,
          28: 1, 30: 1, 31: 1, 32: 1, 34: 2, 39: 1, 40: 1, 43: 1, 47: 1, 54: 1, 70: 1,
          71: 1, 76: 1, 81: 1, 106: 1, 124: 1, 140: 1, 446: 1, 457: 1, 468: 1, 1335: 1}
      - !!python/object/apply:collections.Counter
        - {2: 370, 3: 135, 4: 76, 5: 29, 6: 26, 7: 18, 8: 14, 9: 4, 10: 10, 11: 9,
          12: 4, 13: 3, 14: 5, 15: 1, 16: 2, 17: 1, 18: 1, 19: 1, 21: 2, 23: 2, 26: 2,
          27: 1, 29: 1, 31: 1, 32: 1, 33: 1, 37: 1, 38: 1, 41: 1, 57: 1, 58: 1, 61: 1,
          63: 1, 72: 1, 78: 1, 84: 1, 92: 1, 98: 1, 108: 1, 126: 1, 128: 1, 309: 1,
          1513: 1}
      - !!python/object/apply:collections.Counter
        - {2: 338, 3: 94, 4: 48, 5: 32, 6: 19, 7: 6, 8: 11, 9: 9, 10: 3, 11: 3, 12: 2,
          13: 4, 14: 3, 15: 2, 16: 5, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 24: 1, 38: 1,
          50: 1, 55: 1, 73: 1, 77: 1, 82: 1, 233: 1, 305: 1, 852: 1, 867: 1, 918: 1}
      - !!python/object/apply:collections.Counter
        - {2: 387, 3: 151, 4: 49, 5: 33, 6: 25, 7: 13, 8: 16, 9: 15, 10: 5, 11: 6,
          12: 6, 13: 3, 14: 1, 15: 4, 16: 2, 17: 1, 19: 2, 20: 3, 21: 2, 24: 2, 32: 1,
          36: 3, 38: 1, 42: 1, 44: 1, 45: 1, 46: 1, 50: 2, 57: 1, 58: 1, 77: 1, 93: 1,
          110: 1, 319: 1, 502: 1, 1443: 1}
      - !!python/object/apply:collections.Counter
        - {2: 335, 3: 119, 4: 54, 5: 40, 6: 17, 7: 12, 8: 9, 9: 11, 10: 5, 11: 6,
          12: 6, 13: 4, 14: 3, 15: 1, 16: 2, 17: 1, 18: 1, 19: 3, 21: 2, 25: 1, 26: 2,
          29: 1, 31: 1, 33: 3, 37: 2, 50: 1, 60: 1, 62: 1, 63: 1, 67: 1, 76: 1, 80: 1,
          129: 1, 238: 1, 259: 1, 597: 1, 1398: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 988}
      - !!python/object/apply:collections.Counter
        - {1: 836}
      - !!python/object/apply:collections.Counter
        - {1: 819}
      - !!python/object/apply:collections.Counter
        - {1: 659}
      - !!python/object/apply:collections.Counter
        - {1: 922}
      - !!python/object/apply:collections.Counter
        - {1: 490}
      - !!python/object/apply:collections.Counter
        - {1: 736}
      - !!python/object/apply:collections.Counter
        - {1: 595}
      - !!python/object/apply:collections.Counter
        - {1: 744}
      - !!python/object/apply:collections.Counter
        - {1: 652}
      height: [7, 5, 6, 5, 7, 5, 7, 5, 6, 6]
      max_size: [1553, 1500, 1529, 1431, 1542, 1335, 1513, 918, 1443, 1398]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [989, 837, 820, 660, 923, 491, 737, 596, 745, 653]
      num_edges: [988, 836, 819, 659, 922, 490, 736, 595, 744, 652]
      sum_size: [5988, 5836, 5819, 5659, 5922, 5490, 5736, 5595, 5744, 5652]
      sum_weight: [988, 836, 819, 659, 922, 490, 736, 595, 744, 652]
      width: [385, 311, 286, 232, 348, 125, 286, 145, 285, 240]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 1249750.0, n: 5000,
    seed: None}
  Stats:
    edges: [1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750,
      1249750, 1249750]
    randoms: [14027, 14180, 14242, 14376, 14080, 14560, 14294, 14460, 14320, 14456]
    total: [0.101064024079108, 0.102997899534728, 0.104828680482399, 0.120024537858399,
      0.099988017823705, 0.106843461230824, 0.105719321446998, 0.106564218490689,
      0.106897056720072, 0.109695970199539]
  Times:
    t_chordal: [2.020171362189103, 1.798922696529019, 1.773290739143249, 1.848713930150382,
      1.98863468392824, 1.806707014625431, 1.770271299001024, 2.024063350551046, 1.806529159530555,
      1.810608561418576]
    t_convert_nx: [2.846496715484079, 2.809143049091745, 2.646579737286572, 2.857246195488358,
      2.735467685504432, 2.699378121638517, 2.664558122259791, 2.63392812947302, 2.74940831603999,
      2.675619616768358]
    t_expand_cliques: [0.030619410237989, 0.029854052996711, 0.032022451389366, 0.046015653296593,
      0.030535091219861, 0.029933251426655, 0.031502541006546, 0.030490712789287,
      0.033268461171133, 0.030274623969603]
    t_merge_cliques: [0.070444613841119, 0.073143846538017, 0.072806229093032, 0.074008884561806,
      0.069452926603844, 0.076910209804169, 0.074216780440452, 0.076073505701402,
      0.073628595548939, 0.079421346229935]
- Output:
    clique_trees:
    - avg_size: [12.518433179723502, 12.284424379232506, 11.796976241900648, 15.282857142857143,
        11.591101694915254, 14.847645429362881, 24.14351851851852, 33.88815789473684,
        13.016826923076923, 19.58364312267658]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 231, 3: 61, 4: 32, 5: 25, 6: 15, 7: 9, 8: 11, 9: 10, 10: 6, 11: 4, 12: 3,
          13: 2, 14: 2, 15: 1, 16: 5, 17: 2, 18: 1, 19: 2, 22: 1, 23: 1, 38: 1, 40: 1,
          56: 1, 58: 1, 66: 1, 102: 1, 104: 1, 175: 1, 297: 1, 2844: 1}
      - !!python/object/apply:collections.Counter
        - {2: 223, 3: 81, 4: 33, 5: 20, 6: 21, 7: 6, 8: 7, 9: 5, 10: 6, 11: 2, 12: 3,
          13: 1, 14: 1, 15: 2, 16: 2, 17: 4, 18: 3, 20: 1, 21: 3, 22: 1, 23: 2, 25: 1,
          27: 1, 29: 2, 31: 1, 36: 2, 39: 1, 57: 1, 65: 1, 74: 1, 75: 1, 97: 1, 100: 1,
          196: 1, 2856: 1}
      - !!python/object/apply:collections.Counter
        - {2: 244, 3: 69, 4: 44, 5: 19, 6: 19, 7: 18, 8: 7, 9: 7, 10: 2, 11: 5, 12: 1,
          14: 1, 15: 1, 16: 2, 18: 2, 19: 5, 20: 1, 22: 2, 24: 1, 26: 1, 28: 1, 31: 1,
          32: 1, 33: 1, 35: 1, 37: 2, 41: 1, 60: 1, 198: 1, 375: 1, 2837: 1}
      - !!python/object/apply:collections.Counter
        - {2: 173, 3: 55, 4: 29, 5: 14, 6: 11, 7: 10, 8: 8, 9: 8, 10: 2, 11: 5, 12: 2,
          13: 3, 14: 3, 16: 1, 17: 2, 22: 1, 23: 2, 24: 2, 26: 1, 27: 1, 28: 1, 29: 1,
          30: 1, 31: 1, 35: 1, 38: 1, 45: 1, 48: 1, 61: 2, 85: 1, 96: 1, 111: 1, 141: 1,
          143: 1, 147: 1, 2852: 1}
      - !!python/object/apply:collections.Counter
        - {2: 242, 3: 76, 4: 48, 5: 27, 6: 13, 7: 8, 8: 13, 9: 6, 10: 3, 11: 4, 12: 3,
          13: 1, 14: 2, 15: 5, 16: 4, 17: 1, 18: 1, 19: 3, 20: 1, 21: 2, 30: 1, 31: 1,
          56: 1, 60: 1, 99: 1, 109: 1, 124: 1, 345: 1, 2842: 1}
      - !!python/object/apply:collections.Counter
        - {2: 177, 3: 52, 4: 27, 5: 28, 6: 13, 7: 12, 8: 6, 9: 5, 10: 4, 11: 7, 12: 3,
          13: 4, 15: 3, 16: 1, 18: 1, 20: 1, 22: 1, 23: 3, 29: 1, 30: 1, 39: 2, 58: 1,
          59: 1, 61: 1, 64: 1, 65: 1, 80: 1, 103: 1, 506: 1, 2819: 1}
      - !!python/object/apply:collections.Counter
        - {2: 106, 3: 44, 4: 14, 5: 14, 6: 8, 7: 5, 8: 1, 9: 3, 10: 5, 12: 2, 13: 2,
          16: 1, 19: 2, 20: 1, 25: 1, 30: 1, 32: 1, 64: 1, 127: 1, 193: 1, 1630: 1,
          2352: 1}
      - !!python/object/apply:collections.Counter
        - {2: 77, 3: 24, 4: 10, 5: 7, 6: 1, 8: 4, 9: 1, 12: 3, 13: 1, 15: 3, 16: 1,
          17: 2, 18: 2, 19: 2, 21: 1, 23: 1, 25: 1, 28: 1, 36: 1, 38: 1, 41: 2, 46: 1,
          52: 1, 60: 1, 124: 1, 1938: 1, 2112: 1}
      - !!python/object/apply:collections.Counter
        - {2: 212, 3: 66, 4: 32, 5: 26, 6: 18, 7: 6, 8: 6, 9: 6, 10: 5, 11: 3, 12: 3,
          13: 2, 14: 4, 15: 1, 16: 2, 17: 3, 18: 1, 19: 1, 22: 2, 24: 1, 25: 1, 29: 1,
          30: 1, 34: 1, 38: 1, 46: 1, 49: 1, 52: 1, 54: 1, 58: 1, 60: 1, 76: 1, 78: 1,
          84: 1, 320: 1, 2846: 1}
      - !!python/object/apply:collections.Counter
        - {2: 120, 3: 55, 4: 24, 5: 20, 6: 4, 7: 5, 8: 8, 9: 4, 10: 1, 12: 2, 14: 2,
          15: 3, 17: 1, 18: 2, 20: 1, 21: 1, 23: 1, 24: 1, 28: 1, 32: 1, 38: 1, 46: 1,
          48: 1, 49: 1, 53: 1, 93: 1, 111: 1, 127: 1, 207: 1, 229: 1, 378: 1, 2821: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 433}
      - !!python/object/apply:collections.Counter
        - {1: 442}
      - !!python/object/apply:collections.Counter
        - {1: 462}
      - !!python/object/apply:collections.Counter
        - {1: 349}
      - !!python/object/apply:collections.Counter
        - {1: 471}
      - !!python/object/apply:collections.Counter
        - {1: 360}
      - !!python/object/apply:collections.Counter
        - {1: 215}
      - !!python/object/apply:collections.Counter
        - {1: 151}
      - !!python/object/apply:collections.Counter
        - {1: 415}
      - !!python/object/apply:collections.Counter
        - {1: 268}
      height: [4, 4, 4, 4, 5, 4, 3, 2, 4, 4]
      max_size: [2844, 2856, 2837, 2852, 2842, 2819, 2352, 2112, 2846, 2821]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [434, 443, 463, 350, 472, 361, 216, 152, 416, 269]
      num_edges: [433, 442, 462, 349, 471, 360, 215, 151, 415, 268]
      sum_size: [5433, 5442, 5462, 5349, 5471, 5360, 5215, 5151, 5415, 5268]
      sum_weight: [433, 442, 462, 349, 471, 360, 215, 151, 415, 268]
      width: [291, 304, 313, 219, 311, 239, 118, 78, 270, 166]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 4124175.0, n: 5000,
    seed: None}
  Stats:
    edges: [4124175, 4124175, 4124175, 4124175, 4124175, 4124175, 4124175, 4124113,
      4124175, 4124175]
    randoms: [14620, 14673, 14703, 14747, 14607, 14744, 14973, 14994, 14694, 14920]
    total: [0.111153630957801, 0.114579987171169, 0.108131118462779, 0.108460884339195,
      0.121924276059815, 0.127902050659031, 0.124660718363884, 0.111698120163851,
      0.120424285106083, 0.1137931234598]
  Times:
    t_chordal: [5.898014952800168, 5.691132267864077, 5.738499073685603, 5.721117749289874,
      5.792443445664219, 5.63563226120732, 5.757432277661451, 5.903213373883773, 5.531065413465285,
      5.641925122663679]
    t_convert_nx: [9.03152097512384, 8.837967863871597, 8.839586993842659, 8.84545245687525,
      9.176285463913302, 8.947334409567134, 8.76260134070651, 8.818159039323064, 8.764026912445843,
      9.021259657855921]
    t_expand_cliques: [0.030485933573686, 0.030705436118751, 0.03089592199774, 0.029878973192353,
      0.044182482741064, 0.042126395915034, 0.042408369635439, 0.030493785142198,
      0.041980288466561, 0.031660596493907]
    t_merge_cliques: [0.080667697384115, 0.083874551052418, 0.07723519646504, 0.078581911146841,
      0.077741793318751, 0.085775654743998, 0.082252348728446, 0.081204335021653,
      0.078443996639521, 0.082132526965893]
- Output:
    clique_trees:
    - avg_size: [30.405882352941177, 18.98201438848921, 26.375634517766496, 32.04968944099379,
        15.08169014084507, 42.31404958677686, 16.573208722741434, 19.652985074626866,
        12.734741784037558, 31.296969696969697]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 80, 3: 28, 4: 11, 5: 6, 6: 8, 7: 2, 8: 3, 9: 4, 10: 3, 11: 1, 13: 3,
          14: 1, 16: 1, 17: 1, 19: 1, 21: 2, 22: 1, 23: 1, 25: 2, 27: 1, 28: 1, 29: 1,
          34: 2, 43: 1, 78: 1, 124: 1, 183: 1, 358: 1, 3508: 1}
      - !!python/object/apply:collections.Counter
        - {2: 134, 3: 53, 4: 20, 5: 15, 6: 13, 7: 7, 8: 3, 9: 1, 10: 3, 11: 4, 12: 3,
          13: 3, 14: 1, 15: 2, 16: 1, 17: 1, 22: 1, 24: 1, 25: 1, 26: 1, 27: 1, 39: 1,
          40: 1, 52: 1, 59: 1, 89: 1, 96: 1, 117: 1, 168: 1, 3525: 1}
      - !!python/object/apply:collections.Counter
        - {2: 94, 3: 33, 4: 19, 5: 9, 6: 11, 7: 3, 8: 2, 9: 3, 10: 3, 11: 1, 12: 3,
          13: 1, 16: 1, 19: 1, 20: 1, 22: 3, 27: 1, 30: 1, 55: 1, 69: 1, 81: 1, 127: 1,
          250: 1, 299: 1, 3509: 1}
      - !!python/object/apply:collections.Counter
        - {2: 82, 3: 26, 4: 12, 5: 10, 6: 3, 7: 6, 8: 2, 9: 2, 10: 1, 11: 1, 12: 3,
          13: 1, 14: 1, 15: 1, 16: 1, 23: 1, 25: 1, 27: 1, 33: 1, 90: 1, 94: 1, 123: 1,
          745: 1, 3451: 1}
      - !!python/object/apply:collections.Counter
        - {2: 178, 3: 70, 4: 25, 5: 12, 6: 12, 7: 12, 8: 6, 9: 4, 10: 2, 11: 2, 12: 3,
          13: 3, 14: 4, 15: 2, 16: 3, 17: 1, 18: 2, 21: 2, 24: 2, 25: 1, 26: 1, 28: 1,
          32: 1, 46: 1, 49: 1, 62: 1, 74: 1, 122: 1, 3530: 1}
      - !!python/object/apply:collections.Counter
        - {2: 54, 3: 19, 4: 13, 5: 4, 6: 4, 7: 6, 8: 3, 9: 1, 10: 1, 11: 3, 14: 1,
          15: 1, 19: 1, 32: 1, 34: 1, 37: 1, 53: 1, 73: 1, 88: 1, 96: 1, 110: 1, 713: 1,
          3457: 1}
      - !!python/object/apply:collections.Counter
        - {2: 142, 3: 54, 4: 34, 5: 24, 6: 6, 7: 5, 8: 7, 9: 9, 10: 4, 11: 8, 12: 1,
          13: 4, 14: 1, 15: 2, 17: 1, 18: 2, 19: 2, 20: 3, 23: 1, 26: 1, 36: 2, 37: 2,
          38: 1, 45: 1, 66: 1, 71: 1, 77: 1, 3531: 1}
      - !!python/object/apply:collections.Counter
        - {2: 121, 3: 57, 4: 18, 5: 19, 6: 9, 7: 5, 8: 8, 9: 2, 10: 2, 11: 2, 12: 1,
          13: 2, 14: 2, 15: 1, 16: 1, 17: 1, 20: 3, 21: 1, 22: 1, 23: 1, 24: 2, 26: 1,
          31: 1, 33: 1, 35: 1, 64: 1, 107: 1, 151: 1, 217: 1, 3522: 1}
      - !!python/object/apply:collections.Counter
        - {2: 232, 3: 75, 4: 27, 5: 21, 6: 11, 7: 12, 8: 5, 9: 8, 10: 5, 11: 3, 12: 4,
          13: 1, 14: 2, 16: 2, 17: 4, 19: 1, 20: 2, 25: 2, 27: 1, 32: 1, 34: 1, 35: 1,
          38: 1, 40: 1, 66: 1, 76: 1, 3532: 1}
      - !!python/object/apply:collections.Counter
        - {2: 70, 3: 33, 4: 14, 5: 10, 6: 6, 7: 9, 8: 1, 9: 1, 10: 2, 12: 2, 15: 1,
          18: 2, 20: 2, 21: 1, 27: 1, 28: 1, 31: 1, 34: 1, 41: 1, 67: 1, 68: 1, 69: 1,
          87: 1, 618: 1, 3477: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 169}
      - !!python/object/apply:collections.Counter
        - {1: 277}
      - !!python/object/apply:collections.Counter
        - {1: 196}
      - !!python/object/apply:collections.Counter
        - {1: 160}
      - !!python/object/apply:collections.Counter
        - {1: 354}
      - !!python/object/apply:collections.Counter
        - {1: 120}
      - !!python/object/apply:collections.Counter
        - {1: 320}
      - !!python/object/apply:collections.Counter
        - {1: 267}
      - !!python/object/apply:collections.Counter
        - {1: 425}
      - !!python/object/apply:collections.Counter
        - {1: 164}
      height: [3, 3, 2, 2, 3, 3, 4, 3, 3, 2]
      max_size: [3508, 3525, 3509, 3451, 3530, 3457, 3531, 3522, 3532, 3477]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [170, 278, 197, 161, 355, 121, 321, 268, 426, 165]
      num_edges: [169, 277, 196, 160, 354, 120, 320, 267, 425, 164]
      sum_size: [5169, 5277, 5196, 5160, 5354, 5120, 5320, 5267, 5425, 5164]
      sum_weight: [169, 277, 196, 160, 354, 120, 320, 267, 425, 164]
      width: [139, 208, 163, 126, 295, 95, 268, 212, 347, 131]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 6248750.0, n: 5000,
    seed: None}
  Stats:
    edges: [6248749, 6248750, 6248749, 6248749, 6248750, 6248748, 6248750, 6248749,
      6248750, 6248749]
    randoms: [14994, 14883, 14994, 14994, 14893, 14994, 14856, 14994, 14722, 14994]
    total: [0.121390028030078, 0.124154462882871, 0.1235591091679, 0.111999552119073,
      0.109799406080128, 0.124071509354735, 0.108240016303967, 0.107667534549478,
      0.118920539054443, 0.110558618615528]
  Times:
    t_chordal: [8.563059530933629, 8.712110634744704, 8.3741204109715, 9.01705360675453,
      8.365565956418322, 8.427007893557288, 8.797695803609713, 8.959322047784667,
      8.122364988012691, 8.152356955516666]
    t_convert_nx: [13.531891193646743, 13.8096841245723, 12.93951185774597, 13.129532787296625,
      13.548603769230795, 12.858406862134302, 13.178072890548151, 13.08279274146389,
      12.914964099556528, 12.855863978062075]
    t_expand_cliques: [0.034822047613943, 0.044139811173295, 0.042320295519403, 0.030225124950789,
      0.030355187889768, 0.04421081666203, 0.029885459270645, 0.029630453981099, 0.041885728272177,
      0.029262795752402]
    t_merge_cliques: [0.086567980416135, 0.080014651709575, 0.081238813648497, 0.081774427168284,
      0.079444218190361, 0.079860692692705, 0.078354557033322, 0.078037080568379,
      0.077034810782266, 0.081295822863126]
- Output:
    clique_trees:
    - avg_size: [2500.5, 56.544444444444444, 35.71527777777778, 295.05882352941177,
        95.32075471698113, 37.75735294117647, 61.2289156626506, 99.01960784313725,
        43.36440677966102, 148.02941176470588]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1151: 1, 3850: 1}
      - !!python/object/apply:collections.Counter
        - {2: 36, 3: 15, 4: 9, 5: 6, 6: 2, 7: 1, 8: 4, 9: 1, 10: 2, 11: 1, 12: 2,
          13: 1, 14: 1, 16: 2, 19: 1, 26: 2, 28: 1, 33: 1, 280: 1, 4320: 1}
      - !!python/object/apply:collections.Counter
        - {2: 73, 3: 19, 4: 17, 5: 8, 6: 5, 7: 5, 8: 3, 9: 2, 10: 3, 11: 1, 12: 1,
          16: 1, 17: 1, 27: 1, 28: 1, 73: 1, 186: 1, 4325: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 3, 4: 1, 5: 1, 6: 2, 43: 1, 61: 1, 580: 1, 4290: 1}
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 7, 5: 2, 6: 1, 7: 3, 9: 2, 10: 1, 13: 1, 22: 1, 26: 1, 37: 1,
          44: 1, 46: 1, 59: 1, 348: 1, 4315: 1}
      - !!python/object/apply:collections.Counter
        - {2: 69, 3: 22, 4: 8, 5: 5, 6: 9, 7: 4, 8: 2, 9: 2, 12: 2, 14: 1, 16: 1,
          17: 1, 19: 1, 20: 1, 22: 2, 27: 1, 29: 1, 35: 1, 48: 1, 138: 1, 4327: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 17, 4: 1, 5: 3, 6: 3, 7: 3, 8: 1, 9: 1, 10: 1, 14: 1, 17: 1,
          21: 1, 22: 2, 35: 1, 47: 1, 69: 1, 81: 1, 211: 1, 4323: 1}
      - !!python/object/apply:collections.Counter
        - {2: 24, 3: 9, 4: 4, 5: 1, 6: 1, 7: 1, 9: 2, 10: 1, 22: 1, 23: 1, 26: 2,
          115: 1, 190: 1, 191: 1, 4320: 1}
      - !!python/object/apply:collections.Counter
        - {2: 67, 3: 12, 4: 6, 5: 4, 6: 3, 7: 4, 8: 1, 9: 5, 10: 2, 12: 1, 14: 3,
          15: 1, 16: 1, 20: 1, 47: 1, 49: 1, 52: 1, 53: 1, 56: 1, 95: 1, 4327: 1}
      - !!python/object/apply:collections.Counter
        - {2: 11, 3: 6, 4: 4, 5: 2, 6: 2, 7: 1, 9: 2, 15: 2, 52: 1, 197: 1, 339: 1,
          4312: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 89}
      - !!python/object/apply:collections.Counter
        - {1: 143}
      - !!python/object/apply:collections.Counter
        - {1: 16}
      - !!python/object/apply:collections.Counter
        - {1: 52}
      - !!python/object/apply:collections.Counter
        - {1: 135}
      - !!python/object/apply:collections.Counter
        - {1: 82}
      - !!python/object/apply:collections.Counter
        - {1: 50}
      - !!python/object/apply:collections.Counter
        - {1: 117}
      - !!python/object/apply:collections.Counter
        - {1: 33}
      height: [1, 1, 2, 1, 2, 2, 1, 2, 1, 3]
      max_size: [3850, 4320, 4325, 4290, 4315, 4327, 4323, 4320, 4327, 4312]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [1151, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 90, 144, 17, 53, 136, 83, 51, 118, 34]
      num_edges: [1, 89, 143, 16, 52, 135, 82, 50, 117, 33]
      sum_size: [5001, 5089, 5143, 5016, 5052, 5135, 5082, 5050, 5117, 5033]
      sum_weight: [1, 89, 143, 16, 52, 135, 82, 50, 117, 33]
      width: [1, 89, 141, 16, 49, 134, 82, 48, 117, 28]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 9373125.0, n: 5000,
    seed: None}
  Stats:
    edges: [8071150, 9370907, 9372372, 9370609, 9373089, 9373116, 9372665, 9373067,
      9371627, 9372845]
    randoms: [14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994]
    total: [0.125790661480892, 0.111764687809796, 0.112526631325522, 0.125150587963049,
      0.116536051842218, 0.109647836671002, 0.113653502089619, 0.111289838602488,
      0.116066323223095, 0.11260821936321]
  Times:
    t_chordal: [11.573625352509794, 12.50913052071951, 11.993641595015333, 13.202115076001519,
      13.93280798374792, 12.236992084594817, 13.56783294320121, 12.30546049278496,
      15.109136119229106, 12.31206844109829]
    t_convert_nx: [17.190940245808747, 19.78053398175905, 19.611195107721755, 18.873371610298705,
      19.79342898819573, 19.61149619830462, 19.47245823392268, 20.24162485137481,
      19.88959056118574, 19.704867050756093]
    t_expand_cliques: [0.042356139636354, 0.03080818925423, 0.029905600250686, 0.042658254336857,
      0.034171391547147, 0.030259262205163, 0.032474087263608, 0.029977629857285,
      0.032768691768297, 0.031854154725806]
    t_merge_cliques: [0.083434521844538, 0.080956498555565, 0.082621031074837, 0.082492333626192,
      0.08236466029507, 0.079388574465838, 0.081179414826011, 0.081312208745203, 0.083297631454798,
      0.080754064637404]
- Output:
    clique_trees:
    - avg_size: [1667.3333333333333, 715.1428571428571, 500.9, 834.1666666666666,
        2500.5, 625.875, 2500.5, 2500.5, 1667.3333333333333, 556.4444444444445]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 26: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 1, 5: 1, 18: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 4: 2, 5: 1, 6: 1, 8: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 6: 1, 8: 1, 12: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {66: 1, 4935: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 1, 11: 2, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {122: 1, 4879: 1}
      - !!python/object/apply:collections.Counter
        - {75: 1, 4926: 1}
      - !!python/object/apply:collections.Counter
        - {19: 1, 20: 1, 4963: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 4: 1, 9: 1, 11: 1, 4974: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 7}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [4974, 4974, 4974, 4974, 4935, 4974, 4879, 4926, 4963, 4974]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 66, 2, 122, 75, 19, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [3, 7, 10, 6, 2, 8, 2, 2, 3, 9]
      num_edges: [2, 6, 9, 5, 1, 7, 1, 1, 2, 8]
      sum_size: [5002, 5006, 5009, 5005, 5001, 5007, 5001, 5001, 5002, 5008]
      sum_weight: [2, 6, 9, 5, 1, 7, 1, 1, 2, 8]
      width: [2, 6, 9, 5, 1, 7, 1, 1, 2, 8]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 12372525.0, n: 5000,
    seed: None}
  Stats:
    edges: [12368177, 12368020, 12367920, 12367964, 12176790, 12367968, 11907262,
      12133050, 12313564, 12367953]
    randoms: [14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994, 14994]
    total: [0.112462794659905, 0.117662581233844, 0.115223474414734, 0.120132411582063,
      0.11333329464469, 0.116173514201591, 0.11505381226084, 0.116914292619867, 0.114227349334442,
      0.114927504419938]
  Times:
    t_chordal: [16.010441903343008, 16.126043277162807, 16.429047594501526, 16.2742853280472,
      15.875294561833016, 16.630563220317526, 15.525444373173514, 15.748710209189767,
      15.52748134313697, 15.501915270652034]
    t_convert_nx: [32.458621039267655, 30.476124233661267, 27.804978645440542, 30.050821154583446,
      26.791171491569457, 30.333090845037077, 28.974021890855738, 27.029590854766184,
      30.342298003892438, 31.079565064070493]
    t_expand_cliques: [0.032075022761092, 0.036156814256856, 0.033229544701271, 0.034538025658321,
      0.032397961186689, 0.034494329972858, 0.032602101967314, 0.033469188226491,
      0.031092552582322, 0.031482400026562]
    t_merge_cliques: [0.080387771898813, 0.081505766976989, 0.081993929713462, 0.085594385923741,
      0.080935333458001, 0.081679184228733, 0.082451710293526, 0.083445104393377,
      0.08313479675212, 0.083445104393377]
- Output:
    clique_trees:
    - avg_size: [4.219354838709678, 5.495495495495495, 7.743243243243243, 4.465277777777778,
        4.868217054263566, 5.301724137931035, 6.091836734693878, 4.158227848101266,
        7.160493827160494, 6.091836734693878]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 89, 3: 34, 4: 11, 5: 7, 6: 1, 7: 4, 8: 2, 9: 2, 12: 2, 14: 1, 41: 1,
          148: 1}
      - !!python/object/apply:collections.Counter
        - {2: 56, 3: 22, 4: 8, 5: 7, 6: 7, 7: 1, 9: 1, 12: 1, 13: 2, 14: 2, 20: 1,
          33: 1, 47: 1, 141: 1}
      - !!python/object/apply:collections.Counter
        - {2: 31, 3: 10, 4: 10, 5: 5, 6: 1, 7: 4, 8: 3, 11: 1, 13: 1, 14: 2, 15: 1,
          22: 1, 28: 1, 52: 1, 64: 1, 125: 1}
      - !!python/object/apply:collections.Counter
        - {2: 78, 3: 35, 4: 12, 5: 4, 6: 1, 7: 5, 8: 1, 10: 1, 11: 1, 15: 2, 16: 1,
          24: 1, 25: 1, 149: 1}
      - !!python/object/apply:collections.Counter
        - {2: 82, 3: 17, 4: 11, 5: 1, 6: 4, 7: 3, 8: 4, 10: 2, 20: 1, 25: 1, 32: 1,
          50: 1, 140: 1}
      - !!python/object/apply:collections.Counter
        - {2: 67, 3: 20, 4: 9, 5: 1, 6: 5, 7: 1, 8: 3, 9: 4, 13: 1, 24: 1, 28: 1,
          35: 1, 43: 1, 140: 1}
      - !!python/object/apply:collections.Counter
        - {2: 50, 3: 20, 4: 6, 5: 2, 6: 3, 7: 2, 8: 2, 9: 1, 11: 1, 12: 2, 14: 1,
          15: 2, 16: 1, 19: 1, 21: 1, 26: 1, 44: 1, 141: 1}
      - !!python/object/apply:collections.Counter
        - {2: 94, 3: 30, 4: 12, 5: 6, 6: 5, 7: 3, 9: 1, 10: 1, 13: 1, 14: 1, 16: 1,
          17: 1, 20: 1, 151: 1}
      - !!python/object/apply:collections.Counter
        - {2: 40, 3: 11, 4: 9, 5: 6, 6: 2, 7: 1, 8: 1, 9: 3, 17: 1, 18: 1, 19: 1,
          23: 1, 32: 1, 38: 1, 83: 1, 117: 1}
      - !!python/object/apply:collections.Counter
        - {2: 47, 3: 20, 4: 8, 5: 5, 6: 1, 7: 3, 8: 2, 10: 1, 11: 3, 12: 2, 14: 1,
          15: 1, 17: 2, 97: 1, 116: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 154}
      - !!python/object/apply:collections.Counter
        - {1: 110}
      - !!python/object/apply:collections.Counter
        - {1: 73}
      - !!python/object/apply:collections.Counter
        - {1: 143}
      - !!python/object/apply:collections.Counter
        - {1: 128}
      - !!python/object/apply:collections.Counter
        - {1: 115}
      - !!python/object/apply:collections.Counter
        - {1: 97}
      - !!python/object/apply:collections.Counter
        - {1: 157}
      - !!python/object/apply:collections.Counter
        - {1: 80}
      - !!python/object/apply:collections.Counter
        - {1: 97}
      height: [5, 6, 5, 4, 5, 5, 4, 6, 5, 4]
      max_size: [148, 141, 125, 149, 140, 140, 141, 151, 117, 116]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [155, 111, 74, 144, 129, 116, 98, 158, 81, 98]
      num_edges: [154, 110, 73, 143, 128, 115, 97, 157, 80, 97]
      sum_size: [654, 610, 573, 643, 628, 615, 597, 657, 580, 597]
      sum_weight: [154, 110, 73, 143, 128, 115, 97, 157, 80, 97]
      width: [80, 51, 27, 74, 45, 48, 35, 66, 26, 36]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 12475.0, n: 500,
    seed: None}
  Stats:
    edges: [12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475]
    randoms: [1365, 1410, 1487, 1367, 1379, 1400, 1412, 1347, 1443, 1451]
    total: [0.008129104364755, 0.008619656708943, 0.012135793901106, 0.013832415439461,
      0.008364310046833, 0.009330735715863, 0.012773136438754, 0.008115108090495,
      0.01200095174665, 0.011727170967221]
  Times:
    t_chordal: [0.021492132557689, 0.02233737097398, 0.035274707605883, 0.021369921187321,
      0.022525125872591, 0.024902785634088, 0.026480609527503, 0.023375826249569,
      0.026250524433569, 0.022139374899082]
    t_convert_nx: [0.025073130533009, 0.025313798175773, 0.034728511537197, 0.026330405608614,
      0.027563784606215, 0.043284672953156, 0.031410711792476, 0.030543625533437,
      0.030951224349694, 0.025373538370786]
    t_expand_cliques: [0.002818030341874, 0.002783893087581, 0.00311946229728, 0.00282212681239,
      0.002930683281041, 0.002962772300076, 0.003026608965604, 0.002800961714728,
      0.002756583284147, 0.003544812485769]
    t_merge_cliques: [0.005311074022881, 0.005835763621362, 0.009016331603826, 0.011010288627071,
      0.005433626765792, 0.006367963415787, 0.00974652747315, 0.005314146375767, 0.009244368462503,
      0.008182358481452]
- Output:
    clique_trees:
    - avg_size: [8.128571428571428, 30.352941176470587, 8.796875, 13.794871794871796,
        22.695652173913043, 50.9, 10.072727272727272, 9.910714285714286, 14.86111111111111,
        10.596153846153847]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 39, 3: 9, 4: 5, 5: 3, 6: 3, 7: 1, 8: 3, 9: 2, 10: 1, 15: 1, 19: 1, 35: 1,
          283: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 9: 1, 10: 1, 15: 1, 16: 1, 31: 1, 70: 1, 84: 1, 263: 1}
      - !!python/object/apply:collections.Counter
        - {2: 34, 3: 13, 4: 1, 5: 1, 6: 5, 8: 3, 9: 1, 10: 1, 12: 2, 20: 1, 49: 1,
          281: 1}
      - !!python/object/apply:collections.Counter
        - {2: 21, 3: 4, 4: 4, 5: 1, 6: 3, 7: 1, 11: 1, 12: 1, 16: 1, 165: 1, 234: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 3, 4: 2, 5: 1, 6: 3, 7: 1, 12: 1, 13: 1, 21: 1, 34: 1, 127: 1,
          254: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 6: 1, 7: 1, 23: 1, 24: 1, 66: 1, 133: 1, 244: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 11, 4: 3, 5: 5, 6: 2, 7: 1, 8: 3, 10: 2, 13: 2, 19: 1, 21: 1,
          28: 1, 283: 1}
      - !!python/object/apply:collections.Counter
        - {2: 33, 3: 7, 4: 4, 5: 1, 6: 3, 7: 1, 8: 1, 10: 1, 11: 1, 13: 1, 21: 1,
          87: 1, 272: 1}
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 4, 4: 4, 5: 3, 6: 1, 7: 3, 25: 1, 193: 1, 211: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 11, 4: 3, 5: 3, 6: 4, 7: 2, 9: 2, 10: 1, 11: 1, 14: 2, 16: 1,
          21: 1, 28: 1, 283: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 69}
      - !!python/object/apply:collections.Counter
        - {1: 16}
      - !!python/object/apply:collections.Counter
        - {1: 63}
      - !!python/object/apply:collections.Counter
        - {1: 38}
      - !!python/object/apply:collections.Counter
        - {1: 22}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 54}
      - !!python/object/apply:collections.Counter
        - {1: 55}
      - !!python/object/apply:collections.Counter
        - {1: 35}
      - !!python/object/apply:collections.Counter
        - {1: 51}
      height: [3, 2, 3, 3, 3, 2, 3, 4, 2, 3]
      max_size: [283, 263, 281, 234, 254, 244, 283, 272, 211, 283]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [70, 17, 64, 39, 23, 10, 55, 56, 36, 52]
      num_edges: [69, 16, 63, 38, 22, 9, 54, 55, 35, 51]
      sum_size: [569, 516, 563, 538, 522, 509, 554, 555, 535, 551]
      sum_weight: [69, 16, 63, 38, 22, 9, 54, 55, 35, 51]
      width: [57, 9, 47, 17, 17, 7, 45, 32, 21, 37]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 41167.5, n: 500,
    seed: None}
  Stats:
    edges: [41167, 41134, 41167, 41165, 41151, 41137, 41166, 41167, 41145, 41167]
    randoms: [1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494]
    total: [0.009662208455047, 0.010449072166497, 0.010184508445728, 0.009961250802653,
      0.009626364338039, 0.009549214143338, 0.009536241986706, 0.009635922769241,
      0.009640019239757, 0.013316260154553]
  Times:
    t_chordal: [0.058796299931282, 0.059031846985902, 0.062423041827353, 0.060273760297076,
      0.060400409510503, 0.05871914973658, 0.061005663029114, 0.056876420749852, 0.06254969104078,
      0.056612881146711]
    t_convert_nx: [0.085959313172098, 0.080025575630916, 0.078733139183389, 0.079788321713581,
      0.099868196061176, 0.076776391767323, 0.077495663715273, 0.076864807255942,
      0.078821896044551, 0.077668056849452]
    t_expand_cliques: [0.002965844652962, 0.002887670340632, 0.003359788567502, 0.003021829750003,
      0.002759997009576, 0.002839878184622, 0.002748390343117, 0.002985302887909,
      0.003003395632684, 0.003014660926601]
    t_merge_cliques: [0.006696363802084, 0.007561401825865, 0.006824719878226, 0.00693942105265,
      0.006866367328463, 0.006709335958716, 0.006787851643589, 0.006650619881332,
      0.006636623607072, 0.010301599227952]
- Output:
    clique_trees:
    - avg_size: [24.761904761904763, 167.33333333333334, 19.48148148148148, 28.72222222222222,
        63.375, 11.395833333333334, 167.33333333333334, 167.33333333333334, 9.60344827586207,
        20.192307692307693]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 10, 3: 1, 4: 1, 5: 2, 6: 2, 7: 2, 8: 1, 115: 1, 334: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 235: 1, 264: 1}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 3, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 12: 1, 102: 1, 338: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 2, 4: 2, 5: 3, 6: 1, 10: 1, 129: 1, 329: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 1, 11: 1, 12: 1, 160: 1, 315: 1}
      - !!python/object/apply:collections.Counter
        - {2: 23, 3: 6, 4: 4, 5: 3, 6: 2, 7: 1, 8: 4, 9: 2, 10: 1, 21: 1, 352: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 240: 1, 252: 1}
      - !!python/object/apply:collections.Counter
        - {34: 1, 178: 1, 290: 1}
      - !!python/object/apply:collections.Counter
        - {2: 36, 3: 8, 4: 3, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1, 11: 1, 13: 2, 20: 1, 352: 1}
      - !!python/object/apply:collections.Counter
        - {2: 11, 3: 4, 4: 2, 6: 2, 7: 1, 10: 1, 16: 1, 21: 1, 26: 1, 42: 1, 349: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 20}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 26}
      - !!python/object/apply:collections.Counter
        - {1: 17}
      - !!python/object/apply:collections.Counter
        - {1: 7}
      - !!python/object/apply:collections.Counter
        - {1: 47}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 57}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      height: [2, 2, 2, 2, 2, 2, 1, 1, 3, 2]
      max_size: [334, 264, 338, 329, 315, 352, 252, 290, 352, 349]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 3, 2, 2, 2, 2, 10, 34, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [21, 3, 27, 18, 8, 48, 3, 3, 58, 26]
      num_edges: [20, 2, 26, 17, 7, 47, 2, 2, 57, 25]
      sum_size: [520, 502, 526, 517, 507, 547, 502, 502, 557, 525]
      sum_weight: [20, 2, 26, 17, 7, 47, 2, 2, 57, 25]
      width: [18, 1, 22, 14, 6, 44, 2, 2, 43, 21]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 62375.0, n: 500,
    seed: None}
  Stats:
    edges: [62305, 62214, 62284, 62327, 62302, 62361, 60351, 58219, 62375, 62373]
    randoms: [1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1479, 1494]
    total: [0.009768375315898, 0.009530097280934, 0.009528731790762, 0.012285997819994,
      0.011116796860464, 0.010749821376818, 0.011093924900089, 0.013033603689007,
      0.009703514532741, 0.013466805445985]
  Times:
    t_chordal: [0.092225206197551, 0.088920037236917, 0.082709105190876, 0.085346549457541,
      0.082915976951892, 0.081308112274698, 0.085276226713699, 0.080642777188531,
      0.084102587911111, 0.085479684749284]
    t_convert_nx: [0.11713174692961, 0.13522244346956, 0.120888551764537, 0.125186432080007,
      0.114686495404613, 0.125254706588593, 0.12052976922192, 0.11328140601792, 0.141636833551186,
      0.125279285411684]
    t_expand_cliques: [0.002782868969953, 0.002819054459503, 0.002853191713796, 0.002769896813321,
      0.003798110912622, 0.00275453504889, 0.003078497592129, 0.003567343073602, 0.00305528425921,
      0.003114000336593]
    t_merge_cliques: [0.006985506345945, 0.006711042821431, 0.006675540076966, 0.009516101006673,
      0.007318685947842, 0.007995286327928, 0.00801542730796, 0.009466260615405, 0.006648230273531,
      0.010352805109392]
- Output:
    clique_trees:
    - avg_size: [250.5, 34.266666666666666, 100.8, 250.5, 20.192307692307693, 84.16666666666667,
        39.38461538461539, 250.5, 50.9, 27.263157894736842]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {86: 1, 415: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 3, 4: 1, 9: 1, 12: 1, 16: 1, 20: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 8: 1, 10: 1, 52: 1, 428: 1}
      - !!python/object/apply:collections.Counter
        - {75: 1, 426: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 5, 4: 1, 5: 3, 6: 1, 7: 2, 15: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 2, 17: 1, 47: 1, 430: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 1, 4: 2, 6: 1, 10: 1, 11: 1, 33: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {207: 1, 294: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 2, 4: 1, 6: 2, 9: 1, 18: 1, 27: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {2: 10, 4: 2, 5: 1, 6: 1, 8: 1, 13: 3, 432: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 14}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 12}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 18}
      height: [1, 2, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [415, 432, 428, 426, 432, 430, 431, 294, 431, 432]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [86, 2, 6, 75, 2, 3, 2, 207, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 15, 5, 2, 26, 6, 13, 2, 10, 19]
      num_edges: [1, 14, 4, 1, 25, 5, 12, 1, 9, 18]
      sum_size: [501, 514, 504, 501, 525, 505, 512, 501, 509, 518]
      sum_weight: [1, 14, 4, 1, 25, 5, 12, 1, 9, 18]
      width: [1, 12, 4, 1, 25, 5, 12, 1, 9, 18]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 93562.5, n: 500,
    seed: None}
  Stats:
    edges: [89560, 93529, 92792, 93300, 93321, 93467, 93328, 64392, 93248, 93405]
    randoms: [1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494]
    total: [0.009717852179544, 0.010093020604223, 0.009794319629161, 0.010798637650455,
      0.009623291985154, 0.011133182742525, 0.01040401099083, 0.010519394910339, 0.009977295312169,
      0.009990950213888]
  Times:
    t_chordal: [0.139148910458323, 0.116843287130836, 0.130752511392456, 0.133178646055048,
      0.127781204778806, 0.117507256726832, 0.11991666413482, 0.089266188995447, 0.117338960063169,
      0.117287071436643]
    t_convert_nx: [0.177270665072229, 0.193355797922475, 0.186129965306309, 0.195277725339162,
      0.187286194109207, 0.198677454494186, 0.185861987860109, 0.118921563172183,
      0.174953086878288, 0.173345563573639]
    t_expand_cliques: [0.002761362499748, 0.002923514457639, 0.002767165832978, 0.002871967203657,
      0.002770579558407, 0.002776382891637, 0.003236553079504, 0.003514430329448,
      0.003181592100093, 0.003030705436119]
    t_merge_cliques: [0.006956489679796, 0.007169506146584, 0.007027153796183, 0.007926670446799,
      0.006852712426746, 0.008356799850889, 0.007167457911326, 0.007004964580892,
      0.006795703212076, 0.006960244777769]
- Output:
    clique_trees:
    - avg_size: [250.5, 167.33333333333334, 250.5, 250.5, 167.33333333333334, 250.5,
        167.33333333333334, 250.5, 167.33333333333334, 250.5]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {31: 1, 470: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 496: 1}
      - !!python/object/apply:collections.Counter
        - {18: 1, 483: 1}
      - !!python/object/apply:collections.Counter
        - {13: 1, 488: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {21: 1, 480: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 494: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 496: 1}
      - !!python/object/apply:collections.Counter
        - {37: 1, 464: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [470, 496, 483, 488, 497, 480, 497, 494, 496, 464]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [31, 3, 18, 13, 2, 21, 2, 7, 3, 37]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 3, 2, 2, 3, 2, 3, 2, 3, 2]
      num_edges: [1, 2, 1, 1, 2, 1, 2, 1, 2, 1]
      sum_size: [501, 502, 501, 501, 502, 501, 502, 501, 502, 501]
      sum_weight: [1, 2, 1, 1, 2, 1, 2, 1, 2, 1]
      width: [1, 2, 1, 1, 2, 1, 2, 1, 2, 1]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 123502.5, n: 500,
    seed: None}
  Stats:
    edges: [110680, 122766, 116556, 118906, 123260, 115170, 123260, 121792, 122766,
      108082]
    randoms: [1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494, 1494]
    total: [0.009934282371761, 0.010570600791782, 0.010024404723096, 0.009739017277205,
      0.01053680491003, 0.010440196480381, 0.012444394679914, 0.011367705679518, 0.013353128389189,
      0.00987590766692]
  Times:
    t_chordal: [0.137954447930616, 0.157339970525895, 0.152789133156116, 0.152334083556392,
      0.157956830710965, 0.172847159660963, 0.147012085612136, 0.150533343392445,
      0.151269683967541, 0.136689321286525]
    t_convert_nx: [0.209924997038593, 0.232766575258479, 0.22949451943451, 0.232355904089335,
      0.234702498949426, 0.218319689241747, 0.239541454745437, 0.232609543888731,
      0.244769916612929, 0.214467982839885]
    t_expand_cliques: [0.002786624067925, 0.0029351211241, 0.002819395832047, 0.002887670340632,
      0.002772969166209, 0.002798230734385, 0.004149383259296, 0.002977451319422,
      0.002784234460124, 0.002770920930949]
    t_merge_cliques: [0.007147658303836, 0.007635479667682, 0.007205008891049, 0.006851346936573,
      0.007763835743821, 0.007641965745997, 0.008295011420618, 0.008390254360096,
      0.010568893929065, 0.007104986735971]
- Output:
    clique_trees:
    - avg_size: [2.8846153846153846, 3.5789473684210527, 2.5806451612903225, 3.3333333333333335,
        3.5789473684210527, 3.0416666666666665, 2.8846153846153846, 3.227272727272727,
        2.8846153846153846, 3.3333333333333335]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 4, 4: 1, 5: 1, 7: 1, 11: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 3, 4: 6, 5: 1, 6: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 23, 3: 7, 13: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 7, 4: 1, 5: 2, 7: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 4, 4: 1, 5: 3, 6: 2, 9: 1}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 3, 4: 3, 5: 1, 6: 1, 11: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 6, 4: 2, 5: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 4, 4: 2, 5: 2, 7: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 6, 4: 2, 5: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 4, 4: 6, 5: 1, 11: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 18}
      - !!python/object/apply:collections.Counter
        - {1: 30}
      - !!python/object/apply:collections.Counter
        - {1: 20}
      - !!python/object/apply:collections.Counter
        - {1: 18}
      - !!python/object/apply:collections.Counter
        - {1: 23}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 21}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 20}
      height: [4, 3, 3, 3, 4, 4, 3, 4, 4, 4]
      max_size: [11, 10, 13, 10, 9, 11, 12, 10, 12, 11]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [26, 19, 31, 21, 19, 24, 26, 22, 26, 21]
      num_edges: [25, 18, 30, 20, 18, 23, 25, 21, 25, 20]
      sum_size: [75, 68, 80, 70, 68, 73, 75, 71, 75, 70]
      sum_weight: [25, 18, 30, 20, 18, 23, 25, 21, 25, 20]
      width: [6, 6, 12, 9, 8, 8, 11, 7, 9, 10]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 122.5, n: 50, seed: None}
  Stats:
    edges: [122, 122, 122, 122, 122, 122, 122, 122, 122, 122]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.000830218024402, 0.000827828416601, 0.000763991751074, 0.000944577826283,
      0.000814514887427, 0.001438885268443, 0.000799835868081, 0.000806321946397,
      0.000788229201622, 0.000802225475882]
  Times:
    t_chordal: [0.00066909018414, 0.000639732145448, 0.000627442733902, 0.000697424105203,
      0.000671821164483, 0.00065509390988, 0.000654752537337, 0.000660214498024, 0.000647583713935,
      0.000646900968849]
    t_convert_nx: [0.000773208809733, 0.000654069792251, 0.000590574499266, 0.000611739596928,
      0.000529468814082, 0.000602181165726, 0.000590915871809, 0.000545171951057,
      0.00058169881315, 0.000537661755112]
    t_expand_cliques: [0.000290508034032, 0.000256712152282, 0.000255005289568, 0.000370047836534,
      0.000256029407196, 0.000708689399119, 0.000259101760083, 0.00025295705431, 0.000257736269911,
      0.000251932936681]
    t_merge_cliques: [0.00053970999037, 0.000571116264319, 0.000508986461506, 0.000574529989749,
      0.000558485480231, 0.000730195869324, 0.000540734107999, 0.000553364892087,
      0.000530492931711, 0.000550292539201]
- Output:
    clique_trees:
    - avg_size: [3.227272727272727, 3.0416666666666665, 3.5789473684210527, 2.75,
        3.227272727272727, 3.45, 2.8846153846153846, 2.8846153846153846, 3.0416666666666665,
        3.130434782608696]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 11, 3: 4, 4: 4, 5: 2, 11: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 3, 4: 1, 5: 1, 6: 1, 7: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 9, 3: 3, 5: 3, 6: 3, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 5, 4: 1, 6: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 3, 4: 1, 5: 3, 8: 1, 9: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 7, 4: 1, 6: 2, 7: 1, 9: 1}
      - !!python/object/apply:collections.Counter
        - {2: 17, 3: 6, 4: 1, 9: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 6, 4: 2, 5: 1, 12: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 3, 4: 2, 7: 1, 8: 1, 9: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 6, 4: 2, 5: 1, 6: 1, 11: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 21}
      - !!python/object/apply:collections.Counter
        - {1: 23}
      - !!python/object/apply:collections.Counter
        - {1: 18}
      - !!python/object/apply:collections.Counter
        - {1: 27}
      - !!python/object/apply:collections.Counter
        - {1: 21}
      - !!python/object/apply:collections.Counter
        - {1: 19}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 25}
      - !!python/object/apply:collections.Counter
        - {1: 23}
      - !!python/object/apply:collections.Counter
        - {1: 22}
      height: [6, 4, 3, 5, 4, 5, 8, 4, 3, 5]
      max_size: [11, 10, 8, 12, 9, 9, 10, 12, 9, 11]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [22, 24, 19, 28, 22, 20, 26, 26, 24, 23]
      num_edges: [21, 23, 18, 27, 21, 19, 25, 25, 23, 22]
      sum_size: [71, 73, 68, 77, 71, 69, 75, 75, 73, 72]
      sum_weight: [21, 23, 18, 27, 21, 19, 25, 25, 23, 22]
      width: [7, 5, 8, 13, 7, 7, 5, 9, 6, 5]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.1, edges_bound: 122.5, n: 50, seed: None}
  Stats:
    edges: [122, 122, 121, 122, 122, 122, 122, 122, 122, 122]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.000821342338286, 0.000890982337043, 0.000837386847803, 0.000769453711761,
      0.001338863113365, 0.000808711554197, 0.000783791358564, 0.000876303317697,
      0.00080085998571, 0.000785839593821]
  Times:
    t_chordal: [0.000704592928604, 0.000799494495538, 0.000648949204107, 0.000954819002571,
      0.000711420379463, 0.000676941752627, 0.000657824890223, 0.000670797046854,
      0.000671138419397, 0.000674210772284]
    t_convert_nx: [0.000704251556061, 0.00055370626463, 0.000517862147622, 0.000562923323289,
      0.000744192143584, 0.000553364892087, 0.000560875088031, 0.000808711554198,
      0.000543806460885, 0.000555071754802]
    t_expand_cliques: [0.000277877249944, 0.00026114999534, 0.000286070190974, 0.000251591564138,
      0.000518886265251, 0.000257394897368, 0.000253981171939, 0.000355368817189,
      0.000255688034653, 0.000253639799396]
    t_merge_cliques: [0.000543465088342, 0.000629832341703, 0.000551316656829, 0.000517862147622,
      0.000819976848114, 0.000551316656829, 0.000529810186625, 0.000520934500509,
      0.000545171951057, 0.000532199794425]
- Output:
    clique_trees:
    - avg_size: [8.0, 6.444444444444445, 6.444444444444445, 6.444444444444445, 5.083333333333333,
        5.454545454545454, 5.9, 5.083333333333333, 10.8, 7.125]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 3, 5: 2, 19: 1, 21: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 4, 4: 1, 13: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 4: 1, 5: 1, 15: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 1, 5: 1, 6: 1, 10: 1, 26: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 1, 4: 3, 7: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 2, 5: 1, 6: 2, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 2, 4: 2, 5: 1, 7: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 3, 5: 1, 8: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 1, 14: 1, 15: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 2, 5: 2, 12: 1, 25: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 11}
      - !!python/object/apply:collections.Counter
        - {1: 10}
      - !!python/object/apply:collections.Counter
        - {1: 9}
      - !!python/object/apply:collections.Counter
        - {1: 11}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 7}
      height: [2, 2, 2, 2, 1, 2, 2, 3, 1, 2]
      max_size: [21, 25, 24, 26, 27, 27, 27, 27, 20, 25]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [7, 9, 9, 9, 12, 11, 10, 12, 5, 8]
      num_edges: [6, 8, 8, 8, 11, 10, 9, 11, 4, 7]
      sum_size: [56, 58, 58, 58, 61, 60, 59, 61, 54, 57]
      sum_weight: [6, 8, 8, 8, 11, 10, 9, 11, 4, 7]
      width: [3, 7, 7, 4, 11, 8, 7, 7, 4, 6]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.33, edges_bound: 404.25, n: 50,
    seed: None}
  Stats:
    edges: [404, 398, 402, 402, 399, 402, 403, 404, 390, 394]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.001004659393838, 0.001616057618223, 0.00087425508244, 0.000878351552955,
      0.000857527827836, 0.000926485081508, 0.000846603906463, 0.000838069592889,
      0.0008906409645, 0.000851041749521]
  Times:
    t_chordal: [0.001035724295245, 0.001004318021296, 0.001041527628475, 0.000982470178548,
      0.00155153820761, 0.001009779981982, 0.000953794884942, 0.001378120955802, 0.000942529591025,
      0.000923071356079]
    t_convert_nx: [0.001009097236896, 0.000934678022538, 0.001046306844076, 0.000901223513331,
      0.000934336649995, 0.001003976648753, 0.000928874689308, 0.00112379841132, 0.00092443684625,
      0.000881423905841]
    t_expand_cliques: [0.000279584112658, 0.000261832740426, 0.000253981171939, 0.000270708426542,
      0.000264905093312, 0.000319524700181, 0.000248860583795, 0.000247495093623,
      0.000270708426542, 0.000249543328881]
    t_merge_cliques: [0.00072507528118, 0.001354224877797, 0.000620273910501, 0.000607643126413,
      0.000592622734524, 0.000606960381327, 0.000597743322668, 0.000590574499266,
      0.000619932537958, 0.00060149842064]
- Output:
    clique_trees:
    - avg_size: [10.8, 17.333333333333332, 6.444444444444445, 13.25, 9.166666666666666,
        17.333333333333332, 17.333333333333332, 10.8, 13.25, 13.25]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 1, 11: 1, 33: 1}
      - !!python/object/apply:collections.Counter
        - {9: 1, 11: 1, 32: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 4: 1, 5: 2, 34: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 1, 15: 1, 32: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 3, 7: 1, 34: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 15: 1, 31: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 24: 1, 26: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 6: 1, 8: 1, 34: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 8: 1, 10: 1, 33: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 19: 1, 30: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 8}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 5}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      height: [2, 1, 1, 1, 1, 1, 2, 1, 1, 2]
      max_size: [33, 32, 34, 32, 34, 31, 26, 34, 33, 30]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [3, 9, 2, 2, 2, 6, 2, 3, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [5, 3, 9, 4, 6, 3, 3, 5, 4, 4]
      num_edges: [4, 2, 8, 3, 5, 2, 2, 4, 3, 3]
      sum_size: [54, 52, 58, 53, 55, 52, 52, 54, 53, 53]
      sum_weight: [4, 2, 8, 3, 5, 2, 2, 4, 3, 3]
      width: [2, 2, 8, 3, 5, 2, 1, 4, 3, 2]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.5, edges_bound: 612.5, n: 50, seed: None}
  Stats:
    edges: [595, 587, 592, 608, 601, 585, 602, 610, 602, 608]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.001189683312106, 0.000983152923634, 0.000862989788523, 0.001186952331762,
      0.000893713317387, 0.000921364493364, 0.00087425508244, 0.000870158611925, 0.00088244802347,
      0.000898492532988]
  Times:
    t_chordal: [0.001237816840659, 0.001237475468116, 0.00120538644908, 0.001176711155474,
      0.001807567614806, 0.001190366057191, 0.00120880017451, 0.001221772331141, 0.001231672134886,
      0.001229282527085]
    t_convert_nx: [0.001426254484355, 0.001450833307446, 0.00121118978231, 0.001370269387315,
      0.001274002330209, 0.001229623899628, 0.001379486445974, 0.002069741727775,
      0.001329646054706, 0.001416013308067]
    t_expand_cliques: [0.000439346462749, 0.00026114999534, 0.000260467250254, 0.000254663917025,
      0.0002751462696, 0.000276853132315, 0.000253298426853, 0.000253298426853, 0.000260125877711,
      0.000281632347916]
    t_merge_cliques: [0.000750336849357, 0.000722002928294, 0.000602522538269, 0.000932288414738,
      0.000618567047786, 0.000644511361049, 0.000620956655587, 0.000616860185072,
      0.000622322145759, 0.000616860185072]
- Output:
    clique_trees:
    - avg_size: [8.0, 10.8, 17.333333333333332, 17.333333333333332, 25.5, 25.5, 10.8,
        10.8, 17.333333333333332, 17.333333333333332]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 4: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 8: 1, 42: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 7: 1, 41: 1}
      - !!python/object/apply:collections.Counter
        - {9: 1, 42: 1}
      - !!python/object/apply:collections.Counter
        - {21: 1, 30: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 4: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 4: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 8: 1, 42: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 42: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 6}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 4}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      height: [1, 1, 2, 1, 1, 1, 1, 1, 1, 1]
      max_size: [43, 43, 42, 41, 42, 30, 43, 43, 42, 42]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 4, 9, 21, 2, 2, 2, 5]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [7, 5, 3, 3, 2, 2, 5, 5, 3, 3]
      num_edges: [6, 4, 2, 2, 1, 1, 4, 4, 2, 2]
      sum_size: [56, 54, 52, 52, 51, 51, 54, 54, 52, 52]
      sum_weight: [6, 4, 2, 2, 1, 1, 4, 4, 2, 2]
      width: [6, 4, 1, 2, 1, 1, 4, 4, 2, 2]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.75, edges_bound: 918.75, n: 50,
    seed: None}
  Stats:
    edges: [911, 914, 890, 847, 897, 645, 914, 914, 890, 881]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.001012510962326, 0.000996807825351, 0.000868793121753, 0.000861965670894,
      0.001135063705237, 0.00107941998074, 0.000895420180101, 0.000861965670894, 0.000965060178859,
      0.001019338413184]
  Times:
    t_chordal: [0.00155734154084, 0.001536859188264, 0.001444005856587, 0.002221311136835,
      0.001473705267822, 0.001241913311174, 0.001503404679057, 0.001491115267511,
      0.001502721933971, 0.002331915840744]
    t_convert_nx: [0.001778209576114, 0.001687063107152, 0.001559048403554, 0.001542321148951,
      0.001900762319026, 0.00137675546563, 0.001718128008559, 0.001636198598256, 0.001755678988281,
      0.002182736039485]
    t_expand_cliques: [0.000272415289257, 0.000316110974752, 0.00025876038754, 0.000248519211252,
      0.000499428030304, 0.000250226073967, 0.000273098034343, 0.000257736269911,
      0.000252274309224, 0.000256370779739]
    t_merge_cliques: [0.000740095673069, 0.000680696850599, 0.000610032734213, 0.000613446459642,
      0.000635635674933, 0.000829193906773, 0.000622322145759, 0.000604229400983,
      0.000712785869635, 0.000762967633445]
- Output:
    clique_trees:
    - avg_size: [25.5, 25.5, 25.5, 25.5, 25.5, 25.5, 25.5, 25.5, 25.5, 25.5]
      avg_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 41: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 48: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {14: 1, 37: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 48: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 44: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_size: [49, 49, 49, 41, 48, 49, 37, 48, 49, 44]
      max_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_size: [2, 2, 2, 10, 3, 2, 14, 3, 2, 7]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      num_edges: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      sum_size: [51, 51, 51, 51, 51, 51, 51, 51, 51, 51]
      sum_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      width: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: TreeMVA, edge_density: 0.99, edges_bound: 1212.75, n: 50,
    seed: None}
  Stats:
    edges: [1177, 1177, 1177, 865, 1131, 1177, 757, 1131, 1177, 967]
    randoms: [144, 144, 144, 144, 144, 144, 144, 144, 144, 144]
    total: [0.001024800373871, 0.000901906258417, 0.001134380960151, 0.001654974088117,
      0.00088005841567, 0.000895420180101, 0.000914878415048, 0.00090224763096, 0.000876303317697,
      0.000893371944844]
  Times:
    t_chordal: [0.002194001333401, 0.002791403283526, 0.001758409968624, 0.001449809189817,
      0.002044138787056, 0.00197006094524, 0.001488725659711, 0.001697987028526, 0.001778550948657,
      0.001538566050979]
    t_convert_nx: [0.002310067997997, 0.002130164667874, 0.002253058783328, 0.001817808791094,
      0.002074179570833, 0.002092272315608, 0.001483263699024, 0.002099782511553,
      0.00210524447224, 0.001779575066286]
    t_expand_cliques: [0.00028094960283, 0.000273098034343, 0.000496355677418, 0.00025534666211,
      0.000257736269911, 0.000268660191285, 0.000270025681456, 0.000265246465855,
      0.000255005289568, 0.000268660191285]
    t_merge_cliques: [0.000743850771041, 0.000628808224074, 0.000638025282733, 0.001399627426007,
      0.000622322145759, 0.000626759988817, 0.000644852733592, 0.000637001165105,
      0.00062129802813, 0.000624711753559]
