- Output:
    clique_trees:
    - avg_size: [3.590909090909091, 3.16, 3.625, 3.761904761904762, 3.28, 3.782608695652174,
        3.68, 3.608695652173913, 3.8421052631578947, 3.739130434782609]
      avg_weight: [1.380952380952381, 1.2083333333333333, 1.608695652173913, 1.45,
        1.3333333333333333, 1.6818181818181819, 1.75, 1.5, 1.2777777777777777, 1.6363636363636365]
      degrees_var: [11.776859504132233, 116.0000000000001, 15.555555555555557, 19.72108843537415,
        7.3792, 4.493383742911154, 104.00000000000007, 56.000000000000014, 8.792243767313018,
        64.00000000000001]
      diameter: [9, 7, 8, 7, 8, 7, 6, 8, 5, 6]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 9, 4: 4, 5: 1, 6: 1, 7: 1, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 5, 4: 4, 5: 1, 7: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 9, 4: 5, 5: 2, 6: 1, 7: 2}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 9, 4: 4, 5: 2, 6: 2, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 11, 4: 4, 7: 1, 10: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 8, 4: 7, 5: 2, 6: 2, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 7, 4: 3, 5: 5, 6: 1, 7: 2}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 11, 4: 7, 8: 2}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 3, 4: 6, 5: 2, 6: 2, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 6, 4: 8, 5: 4, 8: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 13, 2: 8}
      - !!python/object/apply:collections.Counter
        - {1: 20, 2: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 8, 3: 3}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 7, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 17, 2: 6, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 9, 3: 3}
      - !!python/object/apply:collections.Counter
        - {1: 15, 2: 4, 3: 1, 4: 4}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 9, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 14, 2: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 10, 3: 2}
      height: [3, 4, 3, 2, 1, 1, 4, 4, 2, 4]
      max_clique_edge_distribution: [0.22950819672131148, 0.36885245901639346, 0.1721311475409836,
        0.22950819672131148, 0.36885245901639346, 0.1721311475409836, 0.1721311475409836,
        0.22950819672131148, 0.22950819672131148, 0.22950819672131148]
      max_size: [8, 10, 7, 8, 10, 7, 7, 8, 8, 8]
      max_weight: [2, 3, 3, 3, 3, 3, 4, 3, 3, 3]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [22, 25, 24, 21, 25, 23, 25, 23, 19, 23]
      num_edges: [21, 24, 23, 20, 24, 22, 24, 22, 18, 22]
      sum_size: [79, 79, 87, 79, 82, 87, 92, 83, 73, 86]
      sum_weight: [29, 29, 37, 29, 32, 37, 42, 33, 23, 36]
      width: [2, 9, 3, 4, 2, 1, 7, 4, 2, 4]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: MVA2, edge_density: 0.1, edges_bound: 122.5, n: 50, seed: None}
  Stats:
    actual_edge_density: [0.099591836734694, 0.099591836734694, 0.099591836734694,
      0.099591836734694, 0.099591836734694, 0.099591836734694, 0.099591836734694,
      0.099591836734694, 0.099591836734694, 0.099591836734694]
    edges: [122, 122, 122, 122, 122, 122, 122, 122, 122, 122]
    randoms: [161, 175, 179, 162, 170, 192, 186, 189, 168, 180]
    total: [0.011590272664305, 0.014300086059959, 0.013884294586552, 0.011886242456952,
      0.013225787400836, 0.015793931287899, 0.014691298727057, 0.015561115372575,
      0.013195746637568, 0.014239321788805]
  Times:
    t_expand_cliques: [0.005497118305646, 0.005786260652096, 0.00594499877618, 0.005442498736069,
      0.005687262682237, 0.007153115380768, 0.006251551110433, 0.007091668364994,
      0.005451374416125, 0.0060426312568]
    t_merge_cliques: [0.006093154358659, 0.008513825407863, 0.007939295810372, 0.006443743720883,
      0.007538524718598, 0.00864081590713, 0.008439747616624, 0.008469447007582, 0.007744372221443,
      0.008196690532005]
- Output:
    clique_trees:
    - avg_size: [11.2, 8.714285714285714, 8.285714285714286, 7.0, 13.5, 7.0, 9.833333333333334,
        9.5, 7.375, 13.5]
      avg_weight: [1.5, 1.8333333333333333, 1.3333333333333333, 2.2222222222222223,
        1.3333333333333333, 1.625, 1.8, 1.4, 1.2857142857142858, 1.3333333333333333]
      degrees_var: [9.64, 25.999999999999996, 36.0, 65.00000000000001, 5.0, 30.0,
        17.0, 25.0, 37.0, 9.0]
      diameter: [2, 3, 2, 3, 3, 4, 2, 2, 3, 2]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {6: 1, 7: 2, 13: 1, 23: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 11: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 2, 5: 1, 6: 1, 12: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 2, 5: 3, 7: 1, 8: 1, 26: 1}
      - !!python/object/apply:collections.Counter
        - {8: 1, 12: 1, 16: 1, 18: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 4: 2, 5: 2, 6: 1, 9: 1, 26: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 6: 2, 9: 1, 11: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 5: 1, 6: 1, 7: 1, 12: 1, 24: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 2, 4: 1, 5: 1, 20: 2}
      - !!python/object/apply:collections.Counter
        - {7: 1, 10: 1, 16: 1, 21: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 2}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 2, 3: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 2}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1}
      height: [1, 2, 1, 2, 2, 2, 2, 1, 2, 1]
      max_clique_edge_distribution: [0.655440414507772, 0.7425742574257426, 0.746268656716418,
        0.8145363408521303, 0.4180327868852459, 0.8084577114427861, 0.7022900763358778,
        0.7095115681233933, 0.472636815920398, 0.5316455696202531]
      max_size: [23, 25, 25, 26, 18, 26, 24, 24, 20, 21]
      max_weight: [2, 3, 2, 6, 2, 4, 4, 2, 2, 2]
      min_size: [6, 3, 2, 3, 8, 2, 3, 3, 2, 7]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [5, 7, 7, 10, 4, 9, 6, 6, 8, 4]
      num_edges: [4, 6, 6, 9, 3, 8, 5, 5, 7, 3]
      sum_size: [56, 61, 58, 70, 54, 63, 59, 57, 59, 54]
      sum_weight: [6, 11, 8, 20, 4, 13, 9, 7, 9, 4]
      width: [3, 5, 6, 8, 2, 5, 4, 5, 6, 3]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: MVA2, edge_density: 0.33, edges_bound: 404.25, n: 50, seed: None}
  Stats:
    actual_edge_density: [0.315102040816327, 0.329795918367347, 0.328163265306122,
      0.325714285714286, 0.298775510204082, 0.328163265306122, 0.320816326530612,
      0.317551020408163, 0.328163265306122, 0.322448979591837]
    edges: [386, 404, 402, 399, 366, 402, 393, 389, 402, 395]
    randoms: [160, 173, 169, 172, 184, 172, 165, 159, 164, 178]
    total: [0.014626437988184, 0.015701419391927, 0.014553725686184, 0.013283820693512,
      0.017035843751163, 0.014416835389931, 0.013867908715679, 0.013579449113849,
      0.013653185532778, 0.016232936078376]
  Times:
    t_expand_cliques: [0.005142432475704, 0.005742223624125, 0.005653466823561, 0.005906423705166,
      0.006151870395954, 0.005684190331449, 0.005733689316378, 0.005163938931225,
      0.005341111160041, 0.006024197152067]
    t_merge_cliques: [0.00948400551248, 0.009959195767803, 0.008900258862623, 0.007377396988345,
      0.010883973355208, 0.008732645058482, 0.008134219399301, 0.008415510182624,
      0.008312074372737, 0.010208738926309]
- Output:
    clique_trees:
    - avg_size: [13.25, 17.333333333333332, 17.333333333333332, 13.5, 17.333333333333332,
        17.333333333333332, 7.222222222222222, 11.6, 17.666666666666668, 13.5]
      avg_weight: [1.0, 1.0, 1.0, 1.3333333333333333, 1.0, 1.0, 1.875, 2.0, 1.5, 1.3333333333333333]
      degrees_var: [9.0, 1.9999999999999998, 4.0, 9.0, 1.9999999999999998, 4.0, 34.0,
        16.0, 4.0, 9.0]
      diameter: [2, 2, 2, 2, 2, 2, 3, 2, 2, 2]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 8: 1, 10: 1, 33: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 22: 1, 28: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 19: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 1, 17: 1, 31: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 20: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {14: 1, 18: 1, 20: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 3, 4: 3, 8: 1, 34: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 6: 1, 9: 1, 33: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 14: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 1, 17: 1, 31: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 5, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 1}
      height: [1, 2, 1, 1, 2, 1, 2, 1, 1, 1]
      max_clique_edge_distribution: [0.8770764119601329, 0.6196721311475409, 0.6963979416809606,
        0.7660626029654036, 0.6370235934664247, 0.4377880184331797, 0.9211822660098522,
        0.8888888888888888, 0.7504621072088724, 0.7660626029654036]
      max_size: [33, 28, 29, 31, 27, 20, 34, 33, 29, 31]
      max_weight: [1, 1, 1, 2, 1, 1, 3, 3, 2, 2]
      min_size: [2, 2, 4, 2, 5, 14, 2, 5, 10, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [4, 3, 3, 4, 3, 3, 9, 5, 3, 4]
      num_edges: [3, 2, 2, 3, 2, 2, 8, 4, 2, 3]
      sum_size: [53, 52, 52, 54, 52, 52, 65, 58, 53, 54]
      sum_weight: [3, 2, 2, 4, 2, 2, 15, 8, 3, 4]
      width: [3, 1, 2, 3, 1, 2, 5, 4, 2, 3]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: MVA2, edge_density: 0.5, edges_bound: 612.5, n: 50, seed: None}
  Stats:
    actual_edge_density: [0.491428571428571, 0.497959183673469, 0.475918367346939,
      0.495510204081633, 0.449795918367347, 0.354285714285714, 0.497142857142857,
      0.484897959183673, 0.441632653061225, 0.495510204081633]
    edges: [602, 610, 583, 607, 551, 434, 609, 594, 541, 607]
    randoms: [171, 158, 165, 158, 173, 164, 185, 190, 175, 160]
    total: [0.015594911231251, 0.01463531366824, 0.015803148340265, 0.013809875423003,
      0.016472238067587, 0.014751721625901, 0.016437759464291, 0.016635755404009,
      0.015481916996688, 0.016374946959277]
  Times:
    t_expand_cliques: [0.005635032718829, 0.005284784728915, 0.00599381501649, 0.005290588058182,
      0.00570467267004, 0.005301511972097, 0.006166890777588, 0.00678682289229, 0.005895841163561,
      0.005334966458464]
    t_merge_cliques: [0.009959878512422, 0.009350528939326, 0.009809333323775, 0.008519287364821,
      0.010767565397547, 0.009450209653804, 0.010270868686703, 0.009848932511718,
      0.009586075833128, 0.011039980500814]
- Output:
    clique_trees:
    - avg_size: [26.0, 11.0, 17.666666666666668, 13.25, 25.5, 11.6, 26.0, 25.5, 25.5,
        11.6]
      avg_weight: [2.0, 1.25, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0]
      degrees_var: [1.0, 16.0, 4.0, 9.0, 1.0, 16.0, 1.0, 1.0, 1.0, 16.0]
      diameter: [1, 2, 2, 2, 1, 2, 1, 1, 1, 2]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {11: 1, 41: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 1, 5: 1, 43: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 7: 1, 41: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 5: 1, 42: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 41: 1}
      - !!python/object/apply:collections.Counter
        - {4: 4, 42: 1}
      - !!python/object/apply:collections.Counter
        - {12: 1, 40: 1}
      - !!python/object/apply:collections.Counter
        - {12: 1, 39: 1}
      - !!python/object/apply:collections.Counter
        - {22: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 5: 2, 42: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 2, 3: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9382151029748284, 0.9847328244274809, 0.9647058823529412,
        0.9817559863169898, 0.9479768786127167, 0.9784090909090909, 0.9230769230769231,
        0.9182156133828996, 0.6373626373626373, 0.9761904761904762]
      max_size: [41, 43, 41, 42, 41, 42, 40, 39, 29, 42]
      max_weight: [2, 2, 2, 1, 1, 3, 2, 1, 1, 3]
      min_size: [11, 2, 5, 3, 10, 4, 12, 12, 22, 3]
      min_weight: [2, 1, 1, 1, 1, 1, 2, 1, 1, 1]
      num: [2, 5, 3, 4, 2, 5, 2, 2, 2, 5]
      num_edges: [1, 4, 2, 3, 1, 4, 1, 1, 1, 4]
      sum_size: [52, 55, 53, 53, 51, 58, 52, 51, 51, 58]
      sum_weight: [2, 5, 3, 3, 1, 8, 2, 1, 1, 8]
      width: [1, 4, 2, 3, 1, 4, 1, 1, 1, 4]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: MVA2, edge_density: 0.75, edges_bound: 918.75, n: 50, seed: None}
  Stats:
    actual_edge_density: [0.713469387755102, 0.748571428571429, 0.693877551020408,
      0.715918367346939, 0.706122448979592, 0.718367346938775, 0.689795918367347,
      0.658775510204082, 0.52, 0.72]
    edges: [874, 917, 850, 877, 865, 880, 845, 807, 637, 882]
    randoms: [166, 161, 176, 166, 169, 170, 168, 168, 174, 194]
    total: [0.01576764562004, 0.014289162146044, 0.016293358977221, 0.014857888414267,
      0.014936745417845, 0.015593204369702, 0.018147693364371, 0.016779473146459,
      0.017615152560992, 0.017698447404597]
  Times:
    t_expand_cliques: [0.005481756551703, 0.005377637997196, 0.005775336738181, 0.005735054805617,
      0.00611466081418, 0.005601236860153, 0.005891061951223, 0.005839856104744, 0.006947267877924,
      0.006594288909531]
    t_merge_cliques: [0.010285889068337, 0.008911524148848, 0.01051802223904, 0.00912283360865,
      0.008822084603665, 0.009991967509549, 0.012256631413148, 0.010939617041715,
      0.010667884683068, 0.011104158495067]
- Output:
    clique_trees:
    - avg_size: [25.5, 25.5, 26.0, 25.5, 26.0, 26.5, 26.0, 26.5, 25.5, 26.0]
      avg_weight: [1.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 3.0, 1.0, 2.0]
      degrees_var: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      diameter: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 1, 47: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 48: 1}
      - !!python/object/apply:collections.Counter
        - {23: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 47: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 49: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 48: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9944802207911684, 0.9973474801061007, 0.6170212765957447,
        0.9944802207911684, 0.99830220713073, 0.9974554707379135, 0.99830220713073,
        0.9974554707379135, 0.9991503823279524, 0.9955869373345102]
      max_size: [47, 48, 29, 47, 49, 49, 49, 49, 49, 48]
      max_weight: [1, 1, 2, 1, 2, 3, 2, 3, 1, 2]
      min_size: [4, 3, 23, 4, 3, 4, 3, 4, 2, 4]
      min_weight: [1, 1, 2, 1, 2, 3, 2, 3, 1, 2]
      num: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      num_edges: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      sum_size: [51, 51, 52, 51, 52, 53, 52, 53, 51, 52]
      sum_weight: [1, 1, 2, 1, 2, 3, 2, 3, 1, 2]
      width: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: MVA2, edge_density: 0.99, edges_bound: 1212.75, n: 50, seed: None}
  Stats:
    actual_edge_density: [0.88734693877551, 0.923265306122449, 0.537142857142857,
      0.88734693877551, 0.961632653061224, 0.962448979591837, 0.961632653061224, 0.962448979591837,
      0.960816326530612, 0.924897959183673]
    edges: [1087, 1131, 658, 1087, 1178, 1179, 1178, 1179, 1177, 1133]
    randoms: [174, 195, 177, 206, 184, 171, 185, 184, 171, 170]
    total: [0.016228839610658, 0.018422498073807, 0.016881543467107, 0.019482117723606,
      0.015945159221166, 0.01617558553032, 0.01788483668578, 0.017035502378853, 0.016452779845925,
      0.016787666081896]
  Times:
    t_expand_cliques: [0.006300708723053, 0.007345649363528, 0.005844293944772, 0.007107030118938,
      0.006557420700066, 0.005723789519392, 0.006142653343588, 0.007615674860626,
      0.006560151678545, 0.005567782373787]
    t_merge_cliques: [0.009928130887606, 0.011076848710278, 0.011037249522335, 0.012375087604669,
      0.0093877385211, 0.010451796010928, 0.011742183342192, 0.009419827518227, 0.00989262816738,
      0.011219883708109]
