- Graphs: {}
  Output:
    clique_trees:
    - avg_size: [3.4893617021276597, 3.5217391304347827, 3.511111111111111, 3.5, 3.5348837209302326,
        3.5681818181818183, 3.4782608695652173, 3.5217391304347827, 3.4791666666666665,
        3.5217391304347827]
      avg_weight: [2.4782608695652173, 2.488888888888889, 2.4545454545454546, 2.466666666666667,
        2.4285714285714284, 2.488372093023256, 2.4444444444444446, 2.466666666666667,
        2.4893617021276597, 2.488888888888889]
      degrees_var: [188.08284291534648, 114.36105860113419, 112.8691358024691, 175.6805293005672,
        35.634937804218495, 76.599173553719, 20.40264650283554, 153.34026465028364,
        60.69270833333332, 110.87145557655951]
      diameter: [7, 8, 8, 7, 9, 5, 10, 9, 10, 10]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 4, 3: 4, 4: 35}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 4, 3: 8, 4: 32}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 1, 3: 2, 4: 36}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 2, 3: 1, 4: 37}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 1, 3: 6, 4: 32}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 3, 3: 7, 4: 32}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 2, 3: 2, 4: 36}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 4, 3: 5, 4: 34}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 9, 3: 4, 4: 34}
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 4, 3: 8, 4: 32}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 5, 2: 5, 3: 33}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 3, 2: 11, 3: 29}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 2, 2: 5, 3: 32}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 3, 2: 3, 3: 34}
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 2, 2: 11, 3: 26}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 3, 2: 10, 3: 28}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 2, 2: 6, 3: 32}
      - !!python/object/apply:collections.Counter
        - {0: 3, 1: 3, 2: 9, 3: 30}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 7, 2: 7, 3: 32}
      - !!python/object/apply:collections.Counter
        - {0: 2, 1: 3, 2: 11, 3: 29}
      height: [4, 4, 6, 5, 4, 5, 2, 5, 3, 4]
      max_clique_edge_distribution: [0.04918032786885246, 0.04918032786885246, 0.04918032786885246,
        0.04918032786885246, 0.04918032786885246, 0.04918032786885246, 0.04918032786885246,
        0.04918032786885246, 0.04918032786885246, 0.04918032786885246]
      max_size: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
      max_weight: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
      min_size: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      num: [47, 46, 45, 46, 43, 44, 46, 46, 48, 46]
      num_edges: [46, 45, 44, 45, 42, 43, 45, 45, 47, 45]
      sum_size: [164, 162, 158, 161, 152, 157, 160, 162, 167, 162]
      sum_weight: [114, 112, 108, 111, 102, 107, 110, 111, 117, 112]
      width: [12, 7, 6, 10, 4, 5, 4, 8, 6, 8]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: DECR, edge_density: 0.1, edges_bound: 122, edges_removed: 22,
    k: 3, n: 50, seed: null}
  Stats:
    actual_edge_density: [0.09959183673469388, 0.09959183673469388, 0.09959183673469388,
      0.09959183673469388, 0.09959183673469388, 0.09959183673469388, 0.09959183673469388,
      0.09959183673469388, 0.09959183673469388, 0.09959183673469388]
    edges: [122, 122, 122, 122, 122, 122, 122, 122, 122, 122]
    randoms: [94, 97, 93, 94, 100, 92, 103, 99, 97, 94]
    total: [0.00235751878146388, 0.002105585844782684, 0.002080665649148907, 0.00211070643292661,
      0.0023984834866152965, 0.002102854864439254, 0.0024732440735166263, 0.0023906319181279424,
      0.002171129373024945, 0.00225135192061314]
  Times:
    t_edges_remove: [0.0011374533130375974, 0.00094526057136888, 0.0009602809632577314,
      0.0008056392013111435, 0.0011449635089820255, 0.0009486742967981625, 0.001124822528949243,
      0.0009148784150482502, 0.0010309450796439183, 0.0009210231208209643]
    t_init_k_tree: [0.0012200654684262828, 0.001160325273413804, 0.0011203846858911758,
      0.0013050672316154664, 0.001253519977633271, 0.0011541805676410916, 0.0013484215445673832,
      0.0014757535030796923, 0.0011401842933810268, 0.0013303287997921756]
    t_stats: [0.0010616686085074818, 0.0009500397869698779, 0.0011494013520400945,
      0.0008271456715156361, 0.0007452162612128048, 0.0011538391950981636, 0.0008175872403136421,
      0.0009845184138056531, 0.0007056170462331132, 0.0017666029096547325]
  Verify: {}
- Graphs: {}
  Output:
    clique_trees:
    - avg_size: [10.0, 10.0, 9.975609756097562, 10.0, 10.0, 9.975609756097562, 10.0,
        10.0, 9.975609756097562, 10.0]
      avg_weight: [8.974358974358974, 8.974358974358974, 8.975, 8.974358974358974,
        8.974358974358974, 8.975, 8.974358974358974, 8.974358974358974, 8.975, 8.974358974358974]
      degrees_var: [102.99999999999999, 110.99999999999997, 105.99999999999999, 114.99999999999997,
        124.99999999999994, 150.00000000000003, 84.6825, 116.99999999999999, 96.0,
        94.99999999999999]
      diameter: [9, 9, 12, 11, 8, 8, 11, 12, 12, 11]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {9: 1, 10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {9: 1, 10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      - !!python/object/apply:collections.Counter
        - {9: 1, 10: 40}
      - !!python/object/apply:collections.Counter
        - {10: 40}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 39}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 39}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 39}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 38}
      height: [6, 6, 8, 9, 5, 4, 6, 8, 7, 7]
      max_clique_edge_distribution: [0.11138613861386139, 0.11138613861386139, 0.11138613861386139,
        0.11138613861386139, 0.11138613861386139, 0.11138613861386139, 0.11138613861386139,
        0.11138613861386139, 0.11138613861386139, 0.11138613861386139]
      max_size: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
      max_weight: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      min_size: [10, 10, 9, 10, 10, 9, 10, 10, 9, 10]
      min_weight: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      num: [40, 40, 41, 40, 40, 41, 40, 40, 41, 40]
      num_edges: [39, 39, 40, 39, 39, 40, 39, 39, 40, 39]
      sum_size: [400, 400, 409, 400, 400, 409, 400, 400, 409, 400]
      sum_weight: [350, 350, 359, 350, 350, 359, 350, 350, 359, 350]
      width: [5, 6, 5, 6, 7, 8, 4, 6, 4, 5]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: DECR, edge_density: 0.33, edges_bound: 404, edges_removed: 1,
    k: 9, n: 50, seed: null}
  Stats:
    actual_edge_density: [0.32979591836734695, 0.32979591836734695, 0.32979591836734695,
      0.32979591836734695, 0.32979591836734695, 0.32979591836734695, 0.32979591836734695,
      0.32979591836734695, 0.32979591836734695, 0.32979591836734695]
    edges: [404, 404, 404, 404, 404, 404, 404, 404, 404, 404]
    randoms: [80, 80, 80, 80, 80, 80, 80, 80, 80, 80]
    total: [0.003728812286407465, 0.00359397013195073, 0.006826768113483157, 0.0037076471887458953,
      0.0038558028723768567, 0.004323141883645895, 0.005091912850320776, 0.00402341679095472,
      0.004076329535108628, 0.003941487380651892]
  Times:
    t_edges_remove: [0.00024920195633777037, 0.00026524646585540657, 0.0002901666614891843,
      0.00025637077973926503, 0.0002638809756836946, 0.0006359770474756998, 0.0006383666552762096,
      0.00035912391516072784, 0.00025807764245390497, 0.0002686601912847003]
    t_init_k_tree: [0.003479610330069695, 0.0033287236660953234, 0.006536601451993973,
      0.0034512764090066303, 0.003591921896693162, 0.0036871648361701953, 0.0044535461950445665,
      0.0036642928757939924, 0.0038182518926547226, 0.003672827189367192]
    t_stats: [0.0014586848759332652, 0.0010490378244191328, 0.0011709078222445837,
      0.0010186556680985004, 0.001066447824108474, 0.006786827525960534, 0.001442981738958557,
      0.0010927335099139707, 0.0010794199807397653, 0.0010896611570276188]
  Verify: {}
- Graphs: {}
  Output:
    clique_trees:
    - avg_size: [15.485714285714286, 15.485714285714286, 15.485714285714286, 15.5,
        15.545454545454545, 15.470588235294118, 15.5, 15.485714285714286, 15.485714285714286,
        15.485714285714286]
      avg_weight: [14.470588235294118, 14.470588235294118, 14.470588235294118, 14.454545454545455,
        14.46875, 14.424242424242424, 14.454545454545455, 14.470588235294118, 14.470588235294118,
        14.470588235294118]
      degrees_var: [98.22204081632648, 117.99999999999991, 90.66612244897956, 77.22837370242215,
        55.41046831955922, 78.7993079584775, 99.0, 75.55510204081634, 79.3330612244898,
        97.33306122448974]
      diameter: [10, 9, 5, 9, 10, 8, 8, 9, 9, 10]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 13: 1, 15: 1, 16: 32}
      - !!python/object/apply:collections.Counter
        - {1: 1, 13: 1, 16: 33}
      - !!python/object/apply:collections.Counter
        - {4: 1, 14: 1, 15: 4, 16: 29}
      - !!python/object/apply:collections.Counter
        - {2: 1, 14: 1, 15: 1, 16: 31}
      - !!python/object/apply:collections.Counter
        - {4: 1, 15: 3, 16: 29}
      - !!python/object/apply:collections.Counter
        - {7: 1, 14: 3, 15: 3, 16: 27}
      - !!python/object/apply:collections.Counter
        - {1: 1, 14: 1, 16: 32}
      - !!python/object/apply:collections.Counter
        - {3: 1, 14: 1, 15: 3, 16: 30}
      - !!python/object/apply:collections.Counter
        - {1: 1, 14: 1, 15: 1, 16: 32}
      - !!python/object/apply:collections.Counter
        - {1: 1, 15: 3, 16: 31}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1, 12: 1, 14: 1, 15: 31}
      - !!python/object/apply:collections.Counter
        - {0: 1, 12: 1, 15: 32}
      - !!python/object/apply:collections.Counter
        - {3: 1, 13: 1, 14: 4, 15: 28}
      - !!python/object/apply:collections.Counter
        - {1: 1, 13: 1, 14: 2, 15: 29}
      - !!python/object/apply:collections.Counter
        - {3: 1, 13: 1, 14: 3, 15: 27}
      - !!python/object/apply:collections.Counter
        - {6: 1, 13: 2, 14: 6, 15: 24}
      - !!python/object/apply:collections.Counter
        - {0: 1, 13: 1, 14: 1, 15: 30}
      - !!python/object/apply:collections.Counter
        - {2: 1, 13: 1, 14: 3, 15: 29}
      - !!python/object/apply:collections.Counter
        - {0: 1, 13: 1, 14: 1, 15: 31}
      - !!python/object/apply:collections.Counter
        - {0: 1, 14: 3, 15: 30}
      height: [6, 6, 6, 5, 4, 4, 4, 6, 5, 5]
      max_clique_edge_distribution: [0.19607843137254902, 0.19607843137254902, 0.19607843137254902,
        0.19607843137254902, 0.19607843137254902, 0.19607843137254902, 0.19607843137254902,
        0.19607843137254902, 0.19607843137254902, 0.19607843137254902]
      max_size: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16]
      max_weight: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
      min_size: [2, 1, 4, 2, 4, 7, 1, 3, 1, 1]
      min_weight: [1, 0, 3, 1, 3, 6, 0, 2, 0, 0]
      num: [35, 35, 35, 34, 33, 34, 34, 35, 35, 35]
      num_edges: [34, 34, 34, 33, 32, 33, 33, 34, 34, 34]
      sum_size: [542, 542, 542, 527, 513, 526, 527, 542, 542, 542]
      sum_weight: [492, 492, 492, 477, 463, 476, 477, 492, 492, 492]
      width: [6, 7, 6, 4, 5, 6, 5, 4, 5, 6]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: DECR, edge_density: 0.5, edges_bound: 612, edges_removed: 18,
    k: 15, n: 50, seed: null}
  Stats:
    actual_edge_density: [0.4995918367346939, 0.4995918367346939, 0.4995918367346939,
      0.4995918367346939, 0.4995918367346939, 0.4995918367346939, 0.4995918367346939,
      0.4995918367346939, 0.4995918367346939, 0.4995918367346939]
    edges: [612, 612, 612, 612, 612, 612, 612, 612, 612, 612]
    randoms: [68, 68, 68, 68, 68, 68, 68, 68, 68, 68]
    total: [0.014881453263879962, 0.014509015819545001, 0.031609390612459876, 0.01659787440972421,
      0.016258208729510393, 0.01733899420042187, 0.015288027962507778, 0.015278469531305766,
      0.013067740943301043, 0.01321555525438911]
  Times:
    t_edges_remove: [0.00808677416943207, 0.006850664191488137, 0.008479011221256855,
      0.008908457880260845, 0.009351559440981982, 0.010092337859136713, 0.006274427339024946,
      0.007157558107580841, 0.005438747353936069, 0.00639561459176452]
    t_init_k_tree: [0.006794679094447892, 0.007658351628056864, 0.02313037939120302,
      0.0076894165294633665, 0.00690664928852841, 0.007246656341285157, 0.009013600623482831,
      0.008120911423724925, 0.007628993589364974, 0.006819940662624591]
    t_stats: [0.0008640139061519003, 0.0008643552786948283, 0.000786863711450092,
      0.00086537939632364, 0.0008766446902402636, 0.0009288746893083288, 0.0008336317498312817,
      0.0007984703779096436, 0.0008312421420307858, 0.0008404592006898692]
  Verify: {}
- Graphs: {}
  Output:
    clique_trees:
    - avg_size: [25.72, 25.72, 25.75, 25.72, 25.818181818181817, 25.72, 25.75, 25.75,
        25.782608695652176, 25.75]
      avg_weight: [24.708333333333332, 24.708333333333332, 24.695652173913043, 24.708333333333332,
        24.666666666666668, 24.708333333333332, 24.695652173913043, 24.695652173913043,
        24.681818181818183, 24.695652173913043]
      degrees_var: [40.30719999999999, 63.99999999999999, 26.597222222222225, 47.460800000000006,
        59.00000000000001, 56.00000000000001, 55.319444444444464, 50.47916666666668,
        43.33081285444235, 67.00000000000003]
      diameter: [10, 10, 6, 8, 8, 10, 10, 6, 7, 7]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {20: 1, 25: 1, 26: 23}
      - !!python/object/apply:collections.Counter
        - {19: 1, 26: 24}
      - !!python/object/apply:collections.Counter
        - {21: 1, 25: 1, 26: 22}
      - !!python/object/apply:collections.Counter
        - {21: 1, 25: 2, 26: 22}
      - !!python/object/apply:collections.Counter
        - {22: 1, 26: 21}
      - !!python/object/apply:collections.Counter
        - {19: 1, 26: 24}
      - !!python/object/apply:collections.Counter
        - {21: 1, 25: 1, 26: 22}
      - !!python/object/apply:collections.Counter
        - {22: 1, 25: 2, 26: 21}
      - !!python/object/apply:collections.Counter
        - {21: 1, 26: 22}
      - !!python/object/apply:collections.Counter
        - {20: 1, 26: 23}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {19: 1, 24: 1, 25: 22}
      - !!python/object/apply:collections.Counter
        - {18: 1, 25: 23}
      - !!python/object/apply:collections.Counter
        - {20: 1, 24: 2, 25: 20}
      - !!python/object/apply:collections.Counter
        - {20: 1, 24: 2, 25: 21}
      - !!python/object/apply:collections.Counter
        - {21: 1, 24: 3, 25: 17}
      - !!python/object/apply:collections.Counter
        - {18: 1, 25: 23}
      - !!python/object/apply:collections.Counter
        - {20: 1, 24: 2, 25: 20}
      - !!python/object/apply:collections.Counter
        - {21: 1, 24: 3, 25: 19}
      - !!python/object/apply:collections.Counter
        - {20: 1, 24: 2, 25: 19}
      - !!python/object/apply:collections.Counter
        - {19: 1, 24: 1, 25: 21}
      height: [6, 6, 4, 5, 4, 6, 6, 4, 3, 4]
      max_clique_edge_distribution: [0.3540305010893246, 0.3540305010893246, 0.3540305010893246,
        0.3540305010893246, 0.3540305010893246, 0.3540305010893246, 0.3540305010893246,
        0.3540305010893246, 0.3540305010893246, 0.3540305010893246]
      max_size: [26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
      max_weight: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25]
      min_size: [20, 19, 21, 21, 22, 19, 21, 22, 21, 20]
      min_weight: [19, 18, 20, 20, 21, 18, 20, 21, 20, 19]
      num: [25, 25, 24, 25, 22, 25, 24, 24, 23, 24]
      num_edges: [24, 24, 23, 24, 21, 24, 23, 23, 22, 23]
      sum_size: [643, 643, 618, 643, 568, 643, 618, 618, 593, 618]
      sum_weight: [593, 593, 568, 593, 518, 593, 568, 568, 543, 568]
      width: [3, 4, 2, 4, 5, 4, 4, 4, 4, 4]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: DECR, edge_density: 0.75, edges_bound: 918, edges_removed: 7,
    k: 25, n: 50, seed: null}
  Stats:
    actual_edge_density: [0.7493877551020408, 0.7493877551020408, 0.7493877551020408,
      0.7493877551020408, 0.7493877551020408, 0.7493877551020408, 0.7493877551020408,
      0.7493877551020408, 0.7493877551020408, 0.7493877551020408]
    edges: [918, 918, 918, 918, 918, 918, 918, 918, 918, 918]
    randoms: [48, 48, 48, 48, 48, 48, 48, 48, 48, 48]
    total: [0.023840775653037105, 0.023994393297354977, 0.03016879848130183, 0.02314505841054898,
      0.033738531162704644, 0.02562410581729535, 0.02491473367309005, 0.026929173048910793,
      0.02523323425564228, 0.024013168787216044]
  Times:
    t_edges_remove: [0.010308768051353334, 0.010243907268196961, 0.012145693704851357,
      0.010801027258256213, 0.020058367877389904, 0.012046012922316218, 0.011476262148168659,
      0.0133609799576766, 0.011836068808415257, 0.010829019806776419]
    t_init_k_tree: [0.013532007601683771, 0.013750486029158016, 0.01802310477645047,
      0.012344031152292767, 0.01368016328531474, 0.013578092894979132, 0.013438471524921392,
      0.013568193091234193, 0.013397165447227022, 0.013184148980439625]
    t_stats: [0.0008114425345409626, 0.0007028860658896408, 0.0006738693997407341,
      0.0006588490078519027, 0.0006752348899125016, 0.0007179064577785277, 0.0008687931217528644,
      0.0006335874396752317, 0.0006086672440414054, 0.0006916207719730449]
  Verify: {}
- Graphs: {}
  Output:
    clique_trees:
    - avg_size: [45.4, 45.4, 45.4, 45.4, 45.4, 45.4, 45.4, 45.4, 45.4, 45.4]
      avg_weight: [44.25, 44.25, 44.25, 44.25, 44.25, 44.25, 44.25, 44.25, 44.25,
        44.25]
      degrees_var: [5.280000000000001, 5.280000000000001, 10.000000000000002, 16.0,
        16.0, 3.2800000000000007, 16.0, 16.0, 3.2800000000000007, 16.0]
      diameter: [3, 3, 3, 2, 2, 4, 2, 2, 4, 2]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {44: 1, 45: 1, 46: 3}
      - !!python/object/apply:collections.Counter
        - {44: 1, 45: 1, 46: 3}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      - !!python/object/apply:collections.Counter
        - {44: 1, 45: 1, 46: 3}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      - !!python/object/apply:collections.Counter
        - {44: 1, 45: 1, 46: 3}
      - !!python/object/apply:collections.Counter
        - {43: 1, 46: 4}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {43: 1, 44: 1, 45: 2}
      - !!python/object/apply:collections.Counter
        - {43: 1, 44: 1, 45: 2}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      - !!python/object/apply:collections.Counter
        - {43: 1, 44: 1, 45: 2}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      - !!python/object/apply:collections.Counter
        - {43: 1, 44: 1, 45: 2}
      - !!python/object/apply:collections.Counter
        - {42: 1, 45: 3}
      height: [1, 1, 2, 1, 1, 2, 1, 1, 2, 1]
      max_clique_edge_distribution: [0.8539603960396039, 0.8539603960396039, 0.8539603960396039,
        0.8539603960396039, 0.8539603960396039, 0.8539603960396039, 0.8539603960396039,
        0.8539603960396039, 0.8539603960396039, 0.8539603960396039]
      max_size: [46, 46, 46, 46, 46, 46, 46, 46, 46, 46]
      max_weight: [45, 45, 45, 45, 45, 45, 45, 45, 45, 45]
      min_size: [44, 44, 43, 43, 43, 44, 43, 43, 44, 43]
      min_weight: [43, 43, 42, 42, 42, 43, 42, 42, 43, 42]
      num: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      num_edges: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
      sum_size: [227, 227, 227, 227, 227, 227, 227, 227, 227, 227]
      sum_weight: [177, 177, 177, 177, 177, 177, 177, 177, 177, 177]
      width: [2, 2, 3, 4, 4, 1, 4, 4, 1, 4]
    nodes: [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]
  Parameters: {Algorithm: DECR, edge_density: 0.99, edges_bound: 1212, edges_removed: 3,
    k: 45, n: 50, seed: null}
  Stats:
    actual_edge_density: [0.9893877551020408, 0.9893877551020408, 0.9893877551020408,
      0.9893877551020408, 0.9893877551020408, 0.9893877551020408, 0.9893877551020408,
      0.9893877551020408, 0.9893877551020408, 0.9893877551020408]
    edges: [1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212]
    randoms: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
    total: [0.027009395596498953, 0.026216045806733423, 0.024252129567265968, 0.026328698745899604,
      0.025117508963589552, 0.029017690266547103, 0.027755977347883598, 0.024905857986973867,
      0.026864653638297264, 0.024633784070259956]
  Times:
    t_edges_remove: [0.017848663407013965, 0.016950170874026393, 0.016414557354171633,
      0.016805428915824705, 0.017235216947371623, 0.01933977867452552, 0.01979107317627693,
      0.017415803022580723, 0.01764281576362814, 0.01653642735199712]
    t_init_k_tree: [0.009160732189484988, 0.00926587493270703, 0.007837572213094335,
      0.009523269830074899, 0.007882292016217929, 0.009677911592021582, 0.007964904171606668,
      0.007490054964393145, 0.009221837874669125, 0.008097356718262838]
    t_stats: [0.00040042999285505587, 0.00039735763996873175, 0.00038165450299398884,
      0.0003877992087666371, 0.0004383223451202012, 0.0004181813650874222, 0.00036970646399148155,
      0.000383361365708601, 0.00036322038567582204, 0.0003710719541633045]
  Verify: {}
