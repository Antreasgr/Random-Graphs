- Output:
    clique_trees:
    - avg_size: [6.131059245960503, 6.02943722943723, 5.199780861943024, 5.29058561897702,
        14.606132075471699, 11.147697654213728, 7.2229437229437226, 6.043836805555555,
        5.166304347826087, 10.313846153846153]
      avg_weight: [1.6434665469241132, 1.7011693373754873, 1.5480453050785532, 1.5847237671486838,
        2.8170011806375443, 2.4617391304347827, 1.8126691932864103, 1.7042987407729049,
        1.5436752446538602, 2.623556581986143]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 841, 3: 630, 4: 351, 5: 167, 6: 69, 7: 38, 8: 29, 9: 20, 10: 17, 11: 9,
          12: 5, 13: 2, 14: 8, 15: 5, 16: 7, 17: 3, 18: 2, 19: 1, 20: 1, 21: 4, 28: 1,
          29: 1, 31: 1, 33: 1, 35: 2, 46: 1, 55: 1, 60: 1, 73: 1, 89: 2, 100: 1, 141: 1,
          158: 1, 201: 1, 340: 1, 1808: 1, 2542: 1}
      - !!python/object/apply:collections.Counter
        - {2: 803, 3: 655, 4: 393, 5: 162, 6: 77, 7: 50, 8: 35, 9: 19, 10: 14, 11: 9,
          12: 12, 13: 6, 14: 9, 15: 3, 16: 7, 17: 8, 18: 6, 19: 4, 20: 3, 21: 2, 23: 4,
          24: 1, 25: 1, 26: 1, 27: 2, 28: 1, 31: 1, 32: 2, 33: 4, 34: 1, 36: 2, 38: 1,
          40: 1, 46: 1, 47: 1, 48: 1, 50: 1, 57: 1, 61: 1, 69: 1, 90: 1, 214: 1, 1381: 1,
          2823: 1}
      - !!python/object/apply:collections.Counter
        - {2: 979, 3: 779, 4: 471, 5: 199, 6: 94, 7: 51, 8: 44, 9: 22, 10: 19, 11: 11,
          12: 5, 13: 7, 14: 7, 15: 8, 16: 4, 17: 5, 19: 2, 20: 3, 21: 2, 22: 1, 23: 2,
          25: 3, 27: 1, 28: 1, 29: 1, 31: 1, 33: 4, 41: 1, 44: 1, 45: 1, 60: 1, 62: 1,
          69: 1, 81: 1, 133: 1, 176: 1, 195: 2, 3132: 1}
      - !!python/object/apply:collections.Counter
        - {2: 913, 3: 803, 4: 440, 5: 207, 6: 106, 7: 71, 8: 25, 9: 30, 10: 18, 11: 7,
          12: 10, 13: 4, 14: 6, 15: 6, 16: 7, 17: 1, 18: 2, 19: 1, 20: 4, 21: 2, 22: 2,
          24: 3, 25: 1, 26: 1, 30: 3, 31: 1, 32: 1, 34: 1, 35: 1, 36: 1, 37: 3, 38: 1,
          39: 1, 40: 1, 42: 2, 47: 1, 55: 1, 57: 2, 59: 1, 66: 1, 76: 1, 91: 1, 103: 1,
          115: 1, 127: 1, 3142: 1}
      - !!python/object/apply:collections.Counter
        - {3: 286, 4: 188, 5: 135, 6: 62, 7: 30, 8: 26, 9: 17, 10: 13, 11: 7, 12: 7,
          13: 10, 14: 7, 16: 7, 18: 5, 19: 4, 20: 2, 21: 4, 22: 3, 23: 1, 25: 1, 26: 1,
          29: 2, 30: 2, 34: 1, 36: 2, 45: 1, 48: 1, 57: 1, 58: 1, 67: 1, 68: 1, 73: 1,
          85: 1, 86: 1, 90: 1, 143: 1, 147: 1, 164: 1, 175: 1, 176: 1, 179: 1, 182: 1,
          183: 1, 241: 1, 258: 1, 309: 1, 412: 1, 532: 1, 1481: 1, 2614: 1}
      - !!python/object/apply:collections.Counter
        - {3: 363, 4: 272, 5: 184, 6: 88, 7: 39, 8: 27, 9: 45, 10: 26, 11: 15, 12: 9,
          13: 9, 14: 6, 15: 6, 16: 4, 17: 4, 18: 4, 19: 3, 20: 1, 21: 2, 22: 1, 23: 2,
          24: 2, 25: 1, 26: 1, 27: 1, 28: 1, 29: 3, 30: 2, 32: 1, 33: 3, 34: 2, 39: 1,
          40: 2, 41: 1, 42: 2, 52: 1, 53: 1, 54: 1, 61: 1, 84: 1, 86: 1, 89: 1, 99: 2,
          105: 1, 123: 1, 124: 1, 194: 1, 268: 1, 305: 1, 311: 1, 1602: 1, 2644: 1}
      - !!python/object/apply:collections.Counter
        - {2: 602, 3: 533, 4: 274, 5: 140, 6: 83, 7: 49, 8: 23, 9: 24, 10: 20, 11: 8,
          12: 12, 13: 6, 14: 8, 15: 5, 16: 5, 17: 2, 18: 5, 19: 2, 20: 2, 21: 2, 22: 3,
          24: 4, 25: 1, 27: 1, 28: 2, 29: 1, 30: 1, 31: 2, 32: 1, 33: 2, 35: 1, 36: 2,
          38: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 50: 1, 53: 1, 62: 1, 76: 1,
          78: 1, 86: 1, 104: 1, 105: 1, 123: 1, 133: 1, 331: 1, 347: 1, 489: 1, 530: 1,
          3019: 1}
      - !!python/object/apply:collections.Counter
        - {2: 771, 3: 705, 4: 345, 5: 181, 6: 83, 7: 43, 8: 34, 9: 25, 10: 18, 11: 18,
          12: 6, 13: 5, 14: 5, 15: 4, 16: 1, 17: 1, 18: 5, 19: 5, 20: 3, 21: 3, 22: 4,
          23: 3, 24: 1, 26: 1, 27: 1, 28: 1, 29: 3, 30: 2, 31: 1, 32: 1, 34: 2, 36: 2,
          39: 1, 40: 1, 43: 2, 45: 1, 46: 1, 50: 1, 54: 2, 57: 1, 74: 1, 77: 1, 92: 1,
          109: 1, 118: 1, 135: 1, 165: 1, 221: 1, 252: 1, 267: 1, 3108: 1}
      - !!python/object/apply:collections.Counter
        - {2: 966, 3: 819, 4: 457, 5: 199, 6: 105, 7: 52, 8: 35, 9: 18, 10: 12, 11: 13,
          12: 16, 13: 7, 14: 7, 15: 3, 16: 5, 17: 4, 18: 4, 19: 4, 20: 2, 21: 3, 22: 2,
          23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 30: 2, 31: 1, 33: 1, 34: 1, 35: 2,
          37: 2, 40: 1, 43: 1, 55: 1, 65: 1, 78: 1, 81: 1, 86: 1, 87: 1, 95: 1, 96: 1,
          156: 1, 3142: 1}
      - !!python/object/apply:collections.Counter
        - {3: 403, 4: 330, 5: 166, 6: 125, 7: 71, 8: 36, 9: 35, 10: 17, 11: 14, 12: 13,
          13: 11, 14: 9, 15: 6, 16: 6, 17: 6, 18: 4, 19: 3, 20: 4, 21: 1, 22: 3, 23: 2,
          24: 1, 26: 1, 27: 1, 28: 1, 30: 1, 32: 1, 36: 1, 37: 1, 39: 2, 40: 1, 41: 1,
          46: 3, 51: 1, 52: 1, 53: 1, 55: 1, 59: 2, 74: 1, 108: 1, 110: 1, 115: 1,
          142: 1, 165: 1, 171: 1, 180: 1, 187: 1, 358: 1, 359: 1, 381: 1, 608: 1,
          2996: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 1197, 2: 709, 3: 254, 4: 54, 5: 11, 6: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1140, 2: 824, 3: 260, 4: 70, 5: 11, 6: 3, 7: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1615, 2: 802, 3: 272, 4: 40, 5: 6, 6: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1571, 2: 784, 3: 252, 4: 74, 5: 13, 6: 3}
      - !!python/object/apply:collections.Counter
        - {2: 372, 3: 310, 4: 127, 5: 24, 6: 14}
      - !!python/object/apply:collections.Counter
        - {2: 763, 3: 277, 4: 85, 5: 18, 6: 6, 8: 1}
      - !!python/object/apply:collections.Counter
        - {1: 726, 2: 817, 3: 246, 4: 42, 5: 14, 6: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1112, 2: 867, 3: 238, 4: 68, 5: 15, 6: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1664, 2: 780, 3: 241, 4: 60, 5: 12, 6: 2}
      - !!python/object/apply:collections.Counter
        - {2: 782, 3: 323, 4: 122, 5: 48, 6: 21, 7: 3}
      height: [7, 8, 4, 8, 4, 5, 6, 2, 9, 10]
      max_clique_edge_distribution: [0.645986798679868, 0.7967302730273027, 0.9807272727272728,
        0.987000900090009, 0.6831065106510651, 0.6988790879087908, 0.9112253225322532,
        0.9657521752175218, 0.987000900090009, 0.8973917391739173]
      max_size: [2542, 2823, 3132, 3142, 2614, 2644, 3019, 3108, 3142, 2996]
      max_weight: [6, 7, 6, 6, 6, 8, 6, 6, 6, 7]
      min_size: [2, 2, 2, 2, 3, 3, 2, 2, 2, 3]
      min_weight: [1, 1, 1, 1, 2, 2, 1, 1, 1, 2]
      num: [2228, 2310, 2738, 2698, 848, 1151, 1848, 2304, 2760, 1300]
      num_edges: [2227, 2309, 2737, 2697, 847, 1150, 1847, 2303, 2759, 1299]
      sum_size: [13660, 13928, 14237, 14274, 12386, 12831, 13348, 13925, 14259, 13408]
      sum_weight: [3660, 3928, 4237, 4274, 2386, 2831, 3348, 3925, 4259, 3408]
      width: [314, 552, 3, 770, 137, 234, 57, 2, 867, 67]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 4999500.0,
    n: 10000, seed: None}
  Stats:
    edges: [4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500, 4999500,
      4999500, 4999500]
    randoms: [24386, 24738, 24585, 24661, 25135, 24822, 24691, 24740, 24635, 25521]
    total: [0.213877066968076, 0.213803330498804, 0.191692972265869, 0.277635899555909,
      0.323058930117968, 0.270579729093578, 0.245417158954321, 0.253810144294762,
      0.235825273243117, 0.202069673453266]
  Times:
    t_expand_cliques: [0.132384613520196, 0.118903470427409, 0.100744840751416, 0.150583183783711,
      0.194119448301006, 0.126969762244265, 0.13537845072168, 0.163943822368847, 0.144883627806978,
      0.113737479735272]
    t_merge_cliques: [0.081492453447879, 0.094899860071395, 0.090948131514454, 0.127052715772198,
      0.128939481816962, 0.143609966849313, 0.110038708232642, 0.089866321925916,
      0.090941645436139, 0.088332193717994]
- Output:
    clique_trees:
    - avg_size: [12.240796019900497, 11.33125, 11.247551202137133, 12.492957746478874,
        11.96168582375479, 12.122687439143135, 11.628703703703703, 12.128780487804878,
        11.9302103250478, 12.1181640625]
      avg_weight: [2.2928286852589643, 2.4048257372654156, 2.3449197860962565, 2.4350453172205437,
        2.3854266538830298, 2.387914230019493, 2.371640407784986, 2.375, 2.3722488038277514,
        2.3548387096774195]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 381, 4: 261, 5: 122, 6: 69, 7: 36, 8: 27, 9: 17, 10: 15, 11: 8, 12: 7,
          13: 8, 14: 6, 15: 2, 16: 3, 17: 1, 19: 4, 20: 5, 21: 2, 22: 1, 23: 1, 24: 1,
          26: 3, 27: 2, 29: 1, 31: 2, 35: 1, 38: 1, 39: 1, 40: 1, 43: 1, 46: 1, 62: 1,
          69: 1, 73: 1, 75: 1, 82: 2, 102: 1, 104: 1, 122: 1, 133: 2, 158: 1, 192: 1,
          5727: 1}
      - !!python/object/apply:collections.Counter
        - {3: 389, 4: 294, 5: 148, 6: 83, 7: 48, 8: 29, 9: 23, 10: 18, 11: 10, 12: 13,
          13: 9, 14: 4, 15: 5, 16: 3, 17: 2, 18: 3, 19: 5, 20: 1, 21: 6, 23: 3, 24: 1,
          26: 2, 28: 2, 29: 2, 30: 3, 39: 1, 40: 4, 45: 1, 49: 1, 52: 1, 70: 1, 71: 1,
          87: 1, 104: 1, 524: 1, 5714: 1}
      - !!python/object/apply:collections.Counter
        - {3: 395, 4: 277, 5: 149, 6: 92, 7: 51, 8: 27, 9: 29, 10: 10, 11: 6, 12: 9,
          13: 6, 14: 9, 15: 4, 16: 5, 17: 7, 18: 2, 19: 2, 20: 3, 21: 7, 22: 4, 23: 1,
          24: 1, 25: 2, 27: 3, 28: 2, 30: 1, 31: 2, 34: 1, 36: 1, 38: 1, 40: 1, 46: 1,
          47: 2, 50: 2, 51: 1, 52: 1, 73: 1, 95: 1, 112: 1, 116: 1, 154: 1, 5734: 1}
      - !!python/object/apply:collections.Counter
        - {3: 332, 4: 241, 5: 152, 6: 64, 7: 53, 8: 17, 9: 29, 10: 9, 11: 12, 12: 9,
          13: 12, 14: 6, 15: 4, 16: 4, 17: 3, 18: 1, 19: 4, 20: 4, 21: 5, 23: 2, 24: 1,
          25: 2, 26: 2, 27: 2, 28: 1, 31: 2, 32: 2, 34: 1, 35: 1, 37: 1, 41: 1, 42: 1,
          43: 2, 50: 1, 52: 1, 56: 2, 61: 1, 69: 1, 91: 1, 119: 1, 158: 1, 206: 1,
          222: 1, 5727: 1}
      - !!python/object/apply:collections.Counter
        - {3: 387, 4: 286, 5: 131, 6: 67, 7: 48, 8: 24, 9: 15, 10: 15, 11: 13, 12: 9,
          13: 8, 14: 3, 15: 5, 16: 5, 17: 2, 18: 2, 19: 1, 20: 1, 21: 1, 22: 2, 23: 1,
          25: 1, 26: 1, 28: 1, 30: 1, 31: 1, 35: 1, 52: 1, 64: 1, 73: 1, 90: 1, 105: 1,
          130: 1, 135: 1, 217: 2, 218: 1, 376: 1, 5712: 1}
      - !!python/object/apply:collections.Counter
        - {3: 333, 4: 264, 5: 161, 6: 75, 7: 40, 8: 24, 9: 21, 10: 17, 11: 14, 12: 9,
          13: 12, 14: 8, 15: 5, 16: 3, 17: 3, 18: 3, 19: 2, 20: 2, 21: 3, 23: 1, 25: 1,
          27: 1, 28: 1, 29: 1, 30: 2, 32: 2, 35: 1, 36: 3, 38: 1, 39: 2, 41: 1, 44: 2,
          56: 1, 57: 1, 64: 1, 65: 1, 84: 1, 145: 1, 165: 1, 410: 1, 5720: 1}
      - !!python/object/apply:collections.Counter
        - {3: 385, 4: 289, 5: 153, 6: 62, 7: 55, 8: 14, 9: 20, 10: 9, 11: 9, 12: 8,
          13: 7, 14: 3, 15: 5, 16: 4, 17: 6, 18: 5, 19: 7, 20: 1, 21: 1, 22: 4, 23: 1,
          24: 3, 25: 6, 26: 2, 27: 1, 30: 3, 31: 1, 32: 1, 33: 3, 39: 1, 42: 1, 48: 1,
          52: 1, 55: 1, 59: 1, 75: 1, 77: 1, 85: 1, 104: 1, 495: 1, 5716: 1}
      - !!python/object/apply:collections.Counter
        - {3: 377, 4: 289, 5: 134, 6: 65, 7: 42, 8: 32, 9: 17, 10: 12, 11: 14, 12: 7,
          13: 3, 14: 1, 15: 3, 16: 8, 17: 2, 20: 2, 21: 1, 23: 1, 24: 1, 26: 1, 27: 1,
          30: 3, 46: 1, 54: 1, 58: 1, 62: 1, 81: 1, 191: 1, 272: 1, 1130: 1, 5619: 1}
      - !!python/object/apply:collections.Counter
        - {3: 352, 4: 248, 5: 145, 6: 77, 7: 56, 8: 27, 9: 20, 10: 16, 11: 13, 12: 12,
          13: 11, 14: 5, 15: 7, 16: 5, 17: 4, 18: 2, 19: 4, 20: 4, 21: 3, 22: 2, 23: 2,
          24: 1, 25: 3, 26: 2, 27: 1, 28: 3, 29: 1, 32: 1, 33: 1, 34: 1, 37: 1, 38: 2,
          39: 1, 46: 1, 48: 1, 53: 1, 59: 1, 67: 1, 69: 1, 76: 1, 81: 2, 85: 1, 128: 1,
          129: 1, 5734: 1}
      - !!python/object/apply:collections.Counter
        - {3: 352, 4: 276, 5: 142, 6: 71, 7: 37, 8: 25, 9: 19, 10: 12, 11: 13, 12: 6,
          13: 5, 14: 9, 15: 6, 16: 2, 17: 3, 18: 2, 20: 3, 21: 4, 22: 3, 23: 2, 25: 1,
          26: 1, 27: 1, 28: 3, 29: 1, 30: 2, 31: 2, 33: 1, 34: 1, 37: 1, 41: 1, 42: 2,
          45: 1, 46: 1, 51: 1, 52: 1, 53: 1, 63: 1, 73: 1, 74: 1, 81: 1, 91: 1, 95: 1,
          102: 1, 122: 1, 274: 1, 5728: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 752, 3: 217, 4: 28, 5: 7}
      - !!python/object/apply:collections.Counter
        - {2: 760, 3: 280, 4: 64, 5: 15}
      - !!python/object/apply:collections.Counter
        - {2: 809, 3: 248, 4: 56, 5: 9}
      - !!python/object/apply:collections.Counter
        - {2: 683, 3: 221, 4: 61, 5: 23, 6: 5}
      - !!python/object/apply:collections.Counter
        - {2: 718, 3: 258, 4: 59, 5: 6, 6: 2}
      - !!python/object/apply:collections.Counter
        - {2: 723, 3: 226, 4: 62, 5: 12, 6: 3}
      - !!python/object/apply:collections.Counter
        - {2: 755, 3: 255, 4: 61, 5: 8}
      - !!python/object/apply:collections.Counter
        - {2: 713, 3: 243, 4: 64, 5: 3, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 747, 3: 226, 4: 57, 5: 11, 6: 4}
      - !!python/object/apply:collections.Counter
        - {2: 721, 3: 252, 4: 39, 5: 11}
      height: [6, 3, 3, 6, 6, 3, 3, 7, 2, 5]
      max_clique_edge_distribution: [0.9938206547927521, 0.9893135374143475, 0.9962518069988817,
        0.9938206547927521, 0.9886210439225741, 0.9913924725805914, 0.9900062733546082,
        0.9566878506032421, 0.9962518069988817, 0.9941677804144051]
      max_size: [5727, 5714, 5734, 5727, 5712, 5720, 5716, 5619, 5734, 5728]
      max_weight: [5, 5, 5, 6, 6, 6, 5, 6, 6, 5]
      min_size: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
      min_weight: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      num: [1005, 1120, 1123, 994, 1044, 1027, 1080, 1025, 1046, 1024]
      num_edges: [1004, 1119, 1122, 993, 1043, 1026, 1079, 1024, 1045, 1023]
      sum_size: [12302, 12691, 12631, 12418, 12488, 12450, 12559, 12432, 12479, 12409]
      sum_weight: [2302, 2691, 2631, 2418, 2488, 2450, 2559, 2432, 2479, 2409]
      width: [433, 3, 3, 464, 466, 17, 4, 443, 3, 483]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 16498350.0,
    n: 10000, seed: None}
  Stats:
    edges: [16498350, 16498350, 16498350, 16498350, 16498350, 16498350, 16498350,
      16498350, 16498350, 16498350]
    randoms: [24418, 24847, 24637, 24462, 24675, 24458, 24637, 24710, 24491, 24510]
    total: [0.207201185518567, 0.20857008941571, 0.206923649641165, 0.214443062644254,
      0.206200281222701, 0.189050066038519, 0.248803574580171, 0.219141031580033,
      0.225477930094414, 0.2278125769155]
  Times:
    t_expand_cliques: [0.109718159414832, 0.097710380217325, 0.10717903044053, 0.110351064109423,
      0.097494632770195, 0.092577844034395, 0.106259031437338, 0.099545257635565,
      0.107835148468041, 0.129994322974611]
    t_merge_cliques: [0.097483026103735, 0.110859709198385, 0.099744619200635, 0.10409199853483,
      0.108705648452506, 0.096472222004124, 0.142544543142833, 0.119595773944468,
      0.117642781626373, 0.09781825394089]
- Output:
    clique_trees:
    - avg_size: [13.53615127919911, 15.531088082901555, 32.618768328445746, 13.578125,
        23.74896265560166, 12.826903023983316, 13.6013437849944, 13.640311804008908,
        13.840728100113767, 23.25409836065574]
      avg_weight: [2.415367483296214, 2.5810635538262, 3.302941176470588, 2.4201117318435754,
        3.008316008316008, 2.4018789144050103, 2.405829596412556, 2.5072463768115942,
        2.4669703872437356, 2.7679671457905544]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 307, 4: 241, 5: 122, 6: 82, 7: 32, 8: 22, 9: 16, 10: 9, 11: 9, 12: 9,
          13: 6, 14: 3, 15: 6, 17: 3, 18: 5, 19: 2, 20: 3, 21: 2, 22: 1, 23: 2, 24: 2,
          27: 1, 30: 2, 31: 1, 34: 1, 35: 1, 36: 2, 48: 1, 59: 1, 69: 1, 71: 1, 80: 1,
          81: 1, 7067: 1}
      - !!python/object/apply:collections.Counter
        - {3: 255, 4: 203, 5: 102, 6: 70, 7: 35, 8: 13, 9: 21, 10: 12, 11: 6, 12: 6,
          13: 7, 14: 3, 15: 3, 16: 4, 17: 2, 18: 3, 19: 2, 20: 1, 21: 1, 22: 1, 23: 1,
          26: 3, 27: 1, 28: 1, 29: 1, 35: 1, 38: 1, 39: 1, 46: 1, 48: 1, 49: 1, 51: 1,
          62: 1, 68: 1, 76: 1, 77: 1, 112: 1, 126: 1, 181: 1, 7063: 1}
      - !!python/object/apply:collections.Counter
        - {4: 112, 5: 84, 6: 45, 7: 18, 8: 10, 9: 14, 10: 6, 11: 8, 12: 4, 13: 3,
          14: 4, 15: 3, 16: 2, 17: 1, 19: 1, 20: 2, 22: 2, 23: 4, 24: 2, 28: 1, 30: 2,
          31: 1, 32: 1, 40: 1, 44: 1, 49: 2, 54: 1, 57: 1, 76: 1, 192: 1, 443: 1,
          872: 1, 6998: 1}
      - !!python/object/apply:collections.Counter
        - {3: 315, 4: 241, 5: 129, 6: 63, 7: 34, 8: 28, 9: 8, 10: 11, 11: 12, 12: 11,
          13: 13, 14: 2, 15: 6, 16: 1, 18: 1, 19: 3, 20: 2, 21: 1, 22: 1, 23: 1, 24: 1,
          27: 2, 29: 1, 30: 2, 34: 1, 58: 1, 66: 1, 89: 1, 118: 1, 247: 1, 7063: 1}
      - !!python/object/apply:collections.Counter
        - {3: 85, 4: 139, 5: 90, 6: 35, 7: 27, 8: 14, 9: 11, 10: 7, 11: 12, 12: 4,
          13: 6, 14: 4, 15: 3, 16: 2, 17: 5, 18: 3, 19: 4, 20: 1, 23: 1, 26: 2, 27: 2,
          28: 1, 29: 1, 30: 1, 32: 1, 33: 1, 37: 1, 39: 1, 41: 1, 45: 1, 49: 2, 50: 1,
          52: 1, 58: 1, 60: 1, 63: 1, 70: 1, 74: 1, 79: 1, 81: 1, 88: 1, 109: 1, 243: 1,
          256: 1, 7056: 1}
      - !!python/object/apply:collections.Counter
        - {3: 329, 4: 284, 5: 139, 6: 67, 7: 35, 8: 21, 9: 17, 10: 15, 11: 3, 12: 3,
          13: 5, 14: 4, 16: 4, 17: 3, 18: 4, 19: 2, 20: 2, 21: 2, 23: 1, 24: 1, 26: 2,
          28: 2, 29: 2, 32: 1, 38: 3, 43: 1, 44: 1, 47: 1, 67: 1, 71: 1, 80: 1, 90: 1,
          7067: 1}
      - !!python/object/apply:collections.Counter
        - {3: 337, 4: 252, 5: 133, 6: 55, 7: 38, 8: 16, 9: 16, 10: 12, 11: 7, 12: 2,
          13: 5, 14: 2, 15: 1, 16: 1, 18: 2, 19: 2, 20: 2, 21: 1, 22: 1, 23: 1, 27: 1,
          31: 2, 34: 1, 85: 1, 842: 1, 7019: 1}
      - !!python/object/apply:collections.Counter
        - {3: 291, 4: 251, 5: 107, 6: 60, 7: 40, 8: 23, 9: 21, 10: 13, 11: 12, 12: 17,
          13: 9, 14: 5, 15: 9, 16: 4, 17: 8, 18: 4, 19: 2, 20: 2, 21: 4, 24: 1, 25: 1,
          26: 2, 28: 1, 30: 1, 34: 2, 35: 1, 37: 1, 40: 1, 46: 1, 47: 1, 50: 1, 52: 1,
          7068: 1}
      - !!python/object/apply:collections.Counter
        - {3: 346, 4: 239, 5: 121, 6: 59, 7: 24, 8: 19, 9: 10, 10: 10, 11: 8, 12: 5,
          13: 5, 14: 2, 15: 1, 16: 3, 17: 1, 19: 4, 20: 2, 21: 1, 24: 1, 25: 1, 26: 1,
          27: 1, 28: 1, 29: 1, 31: 1, 32: 1, 34: 1, 40: 1, 47: 1, 48: 1, 52: 1, 67: 1,
          92: 1, 106: 1, 116: 1, 364: 1, 7057: 1}
      - !!python/object/apply:collections.Counter
        - {3: 148, 4: 144, 5: 83, 6: 32, 7: 23, 8: 3, 9: 10, 10: 8, 11: 2, 12: 3,
          13: 3, 14: 2, 15: 1, 18: 1, 21: 2, 22: 1, 23: 3, 24: 2, 26: 1, 35: 1, 37: 1,
          46: 1, 53: 1, 56: 1, 61: 1, 63: 1, 68: 1, 74: 1, 93: 1, 99: 1, 110: 1, 142: 1,
          188: 1, 867: 1, 7009: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 591, 3: 254, 4: 40, 5: 13}
      - !!python/object/apply:collections.Counter
        - {2: 424, 3: 263, 4: 69, 5: 13, 6: 2}
      - !!python/object/apply:collections.Counter
        - {3: 257, 4: 65, 5: 16, 6: 2}
      - !!python/object/apply:collections.Counter
        - {2: 598, 3: 235, 4: 47, 5: 13, 6: 2}
      - !!python/object/apply:collections.Counter
        - {2: 103, 3: 294, 4: 66, 5: 13, 6: 5}
      - !!python/object/apply:collections.Counter
        - {2: 643, 3: 255, 4: 51, 5: 8, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 617, 3: 202, 4: 61, 5: 11, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 550, 3: 265, 4: 59, 5: 22, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 557, 3: 242, 4: 69, 5: 10}
      - !!python/object/apply:collections.Counter
        - {2: 182, 3: 241, 4: 60, 5: 3, 6: 1}
      height: [5, 6, 6, 1, 1, 3, 3, 5, 6, 5]
      max_clique_edge_distribution: [0.9988083208320833, 0.9976778877887789, 0.9793980598059806,
        0.9976778877887789, 0.9957011701170116, 0.9988083208320833, 0.9852853685368537,
        0.9990910291029103, 0.9959834383438344, 0.9824796879687969]
      max_size: [7067, 7063, 6998, 7063, 7056, 7067, 7019, 7068, 7057, 7009]
      max_weight: [5, 6, 6, 6, 6, 6, 7, 8, 5, 6]
      min_size: [3, 3, 4, 3, 3, 3, 3, 3, 3, 3]
      min_weight: [2, 2, 3, 2, 2, 2, 2, 2, 2, 2]
      num: [899, 772, 341, 896, 482, 959, 893, 898, 879, 488]
      num_edges: [898, 771, 340, 895, 481, 958, 892, 897, 878, 487]
      sum_size: [12169, 11990, 11123, 12166, 11447, 12301, 12146, 12249, 12166, 11348]
      sum_weight: [2169, 1990, 1123, 2166, 1447, 2301, 2146, 2249, 2166, 1348]
      width: [532, 468, 167, 1, 1, 5, 59, 565, 516, 303]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 24997500.0,
    n: 10000, seed: None}
  Stats:
    edges: [24997500, 24997500, 24997500, 24997500, 24997500, 24997500, 24997500,
      24997500, 24997500, 24997500]
    randoms: [24458, 24614, 24671, 24345, 24946, 24400, 24473, 24687, 24499, 24510]
    total: [0.247050626572236, 0.19798993019273, 0.307219585498633, 0.266867302689231,
      0.207825555899582, 0.23488513325989, 0.281363346352141, 0.254411301342859, 0.228532531608536,
      0.239557840627498]
  Times:
    t_expand_cliques: [0.131565660789711, 0.095453566336026, 0.142932683724144, 0.149793930464462,
      0.105317867336485, 0.13467112681273, 0.154766704297298, 0.120517821182919, 0.127561360861158,
      0.12549435011373]
    t_merge_cliques: [0.115484965782525, 0.102536363856704, 0.164286901774489, 0.11707337222477,
      0.102507688563097, 0.10021400644716, 0.126596642054842, 0.133893480159941, 0.100971170747378,
      0.114063490513768]
- Output:
    clique_trees:
    - avg_size: [51.40865384615385, 40.835205992509366, 26.514423076923077, 47.392070484581495,
        36.57807308970099, 36.70431893687708, 22.98580121703854, 45.48101265822785,
        49.40092165898618, 43.927125506072876]
      avg_weight: [3.347826086956522, 3.3947368421052633, 2.4819277108433737, 3.353982300884956,
        3.3666666666666667, 3.493333333333333, 2.707317073170732, 3.3008474576271185,
        3.3333333333333335, 3.4552845528455283]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 59, 5: 39, 6: 24, 7: 15, 8: 13, 9: 9, 10: 4, 11: 8, 12: 4, 13: 6, 14: 3,
          16: 2, 17: 2, 18: 2, 19: 2, 21: 1, 25: 1, 26: 1, 27: 2, 30: 1, 33: 2, 37: 1,
          39: 1, 42: 1, 55: 1, 63: 1, 65: 1, 213: 1, 8656: 1}
      - !!python/object/apply:collections.Counter
        - {4: 96, 5: 67, 6: 31, 7: 20, 8: 12, 9: 10, 10: 6, 12: 2, 13: 3, 15: 1, 16: 2,
          17: 2, 18: 2, 20: 1, 22: 1, 23: 1, 28: 1, 36: 1, 47: 1, 52: 1, 53: 1, 59: 1,
          66: 1, 98: 1, 274: 1, 8654: 1}
      - !!python/object/apply:collections.Counter
        - {3: 174, 4: 106, 5: 48, 6: 23, 7: 12, 8: 9, 9: 9, 10: 5, 11: 5, 12: 3, 13: 1,
          14: 3, 17: 2, 19: 3, 21: 1, 23: 2, 27: 1, 32: 1, 35: 1, 37: 1, 40: 1, 49: 1,
          50: 1, 53: 1, 134: 1, 8658: 1}
      - !!python/object/apply:collections.Counter
        - {4: 74, 5: 51, 6: 21, 7: 8, 8: 18, 9: 7, 10: 5, 11: 1, 12: 6, 13: 2, 14: 2,
          15: 5, 16: 3, 17: 3, 18: 1, 19: 1, 21: 2, 22: 1, 24: 1, 25: 3, 27: 1, 31: 1,
          32: 1, 35: 1, 38: 1, 40: 1, 41: 1, 43: 1, 63: 1, 103: 1, 147: 1, 8657: 1}
      - !!python/object/apply:collections.Counter
        - {4: 96, 5: 81, 6: 29, 7: 22, 8: 16, 9: 8, 10: 9, 11: 6, 12: 4, 13: 3, 14: 3,
          15: 2, 16: 4, 17: 2, 19: 3, 20: 1, 21: 1, 31: 1, 32: 1, 38: 1, 46: 2, 47: 1,
          59: 1, 66: 1, 73: 1, 86: 1, 8658: 1}
      - !!python/object/apply:collections.Counter
        - {4: 97, 5: 77, 6: 43, 7: 21, 8: 10, 9: 13, 10: 5, 11: 4, 12: 4, 13: 4, 14: 3,
          15: 3, 16: 2, 17: 3, 19: 1, 20: 1, 21: 2, 23: 1, 31: 1, 53: 2, 55: 1, 66: 1,
          293: 1, 8654: 1}
      - !!python/object/apply:collections.Counter
        - {3: 157, 4: 148, 5: 79, 6: 36, 7: 23, 8: 9, 9: 6, 10: 3, 11: 3, 12: 1, 13: 1,
          14: 5, 15: 3, 16: 1, 17: 1, 18: 2, 20: 1, 21: 1, 24: 2, 26: 2, 28: 1, 30: 1,
          32: 1, 36: 1, 37: 1, 39: 1, 41: 1, 56: 1, 8659: 1}
      - !!python/object/apply:collections.Counter
        - {4: 64, 5: 57, 6: 34, 7: 16, 8: 15, 9: 9, 10: 3, 11: 4, 12: 6, 13: 3, 14: 2,
          15: 2, 16: 2, 18: 1, 19: 1, 20: 2, 21: 1, 22: 1, 23: 2, 24: 1, 26: 1, 28: 1,
          30: 1, 32: 1, 33: 1, 39: 1, 41: 1, 51: 1, 59: 1, 262: 1, 8655: 1}
      - !!python/object/apply:collections.Counter
        - {4: 60, 5: 48, 6: 30, 7: 17, 8: 8, 9: 10, 10: 3, 11: 5, 12: 2, 13: 1, 14: 4,
          15: 3, 16: 4, 17: 2, 18: 2, 19: 2, 20: 1, 21: 1, 23: 1, 24: 2, 27: 1, 31: 1,
          35: 1, 38: 1, 39: 1, 50: 1, 56: 1, 64: 1, 75: 1, 209: 1, 8656: 1}
      - !!python/object/apply:collections.Counter
        - {4: 77, 5: 49, 6: 32, 7: 18, 8: 14, 9: 14, 10: 10, 11: 7, 12: 3, 13: 1,
          14: 1, 15: 2, 16: 2, 17: 4, 20: 2, 23: 1, 24: 1, 25: 1, 27: 1, 32: 1, 33: 1,
          47: 1, 122: 1, 127: 1, 216: 1, 8655: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {3: 160, 4: 34, 5: 5, 6: 4, 7: 4}
      - !!python/object/apply:collections.Counter
        - {3: 187, 4: 57, 5: 19, 6: 2, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 241, 3: 151, 4: 21, 5: 1, 6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 170, 4: 39, 5: 10, 6: 7}
      - !!python/object/apply:collections.Counter
        - {3: 212, 4: 71, 5: 12, 6: 5}
      - !!python/object/apply:collections.Counter
        - {3: 189, 4: 80, 5: 25, 6: 6}
      - !!python/object/apply:collections.Counter
        - {2: 223, 3: 204, 4: 55, 5: 6, 6: 4}
      - !!python/object/apply:collections.Counter
        - {3: 167, 4: 67, 5: 2}
      - !!python/object/apply:collections.Counter
        - {3: 152, 4: 56, 5: 8}
      - !!python/object/apply:collections.Counter
        - {3: 161, 4: 61, 5: 21, 6: 3}
      height: [2, 5, 2, 3, 1, 5, 4, 1, 1, 1]
      max_clique_edge_distribution: [0.9990024068009368, 0.9985406807347401, 0.9994641063677653,
        0.9992332032794321, 0.9994640264026403, 0.9985406807347401, 0.9996949294929492,
        0.9987714771477147, 0.999002300230023, 0.9987714771477147]
      max_size: [8656, 8654, 8658, 8657, 8658, 8654, 8659, 8655, 8656, 8655]
      max_weight: [7, 7, 6, 6, 6, 6, 6, 5, 5, 6]
      min_size: [4, 4, 3, 4, 4, 4, 3, 4, 4, 4]
      min_weight: [3, 3, 2, 3, 3, 3, 2, 3, 3, 3]
      num: [208, 267, 416, 227, 301, 301, 493, 237, 217, 247]
      num_edges: [207, 266, 415, 226, 300, 300, 492, 236, 216, 246]
      sum_size: [10693, 10903, 11030, 10758, 11010, 11048, 11332, 10779, 10720, 10850]
      sum_weight: [693, 903, 1030, 758, 1010, 1048, 1332, 779, 720, 850]
      width: [201, 201, 411, 221, 1, 202, 418, 1, 1, 1]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 37496250.0,
    n: 10000, seed: None}
  Stats:
    edges: [37496246, 37496250, 37496247, 37496248, 37496250, 37496250, 37496250,
      37496250, 37496250, 37496250]
    randoms: [24751, 24840, 24312, 24882, 24839, 24588, 24513, 24652, 24591, 24651]
    total: [0.339670118056866, 0.25139015433794, 0.237756076345921, 0.279750702459349,
      0.239252994946661, 0.216262578298064, 0.188298022326446, 0.21816470610726, 0.222866771513551,
      0.226302344785587]
  Times:
    t_expand_cliques: [0.144155480172913, 0.115302331472055, 0.124517683268412, 0.109733179806721,
      0.127796566543235, 0.113268775233834, 0.09510912144021, 0.107156158480155, 0.111562595264274,
      0.116492356156705]
    t_merge_cliques: [0.195514637883953, 0.136087822865885, 0.113238393077509, 0.170017522652628,
      0.111456428403425, 0.10299380306423, 0.093188900886236, 0.111008547627105, 0.111304176249277,
      0.109809988628882]
- Output:
    clique_trees:
    - avg_size: [592.4705882352941, 1433.2857142857142, 298.20588235294116, 719.0714285714286,
        1115.6666666666667, 838.6666666666666, 592.5294117647059, 1004.5, 361.85714285714283,
        5002.5]
      avg_weight: [4.5, 5.5, 4.212121212121212, 5.153846153846154, 5.125, 5.818181818181818,
        4.5625, 5.0, 4.888888888888889, 5.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {5: 8, 6: 3, 7: 1, 9: 1, 10: 1, 14: 1, 25: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 8: 2, 11: 1, 16: 1, 34: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {5: 22, 6: 2, 7: 7, 9: 1, 10: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {6: 5, 7: 2, 9: 1, 10: 1, 11: 1, 12: 2, 20: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {6: 3, 8: 2, 9: 1, 10: 1, 39: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 7: 1, 8: 3, 9: 2, 10: 1, 11: 1, 19: 1, 20: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {5: 5, 6: 6, 7: 1, 8: 2, 9: 1, 31: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {6: 3, 7: 1, 8: 2, 10: 1, 11: 1, 34: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {5: 10, 6: 5, 7: 3, 8: 5, 9: 2, 10: 1, 14: 1, 9949: 1}
      - !!python/object/apply:collections.Counter
        - {60: 1, 9945: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {4: 8, 5: 8}
      - !!python/object/apply:collections.Counter
        - {5: 3, 6: 3}
      - !!python/object/apply:collections.Counter
        - {4: 27, 5: 5, 6: 1}
      - !!python/object/apply:collections.Counter
        - {5: 11, 6: 2}
      - !!python/object/apply:collections.Counter
        - {5: 7, 6: 1}
      - !!python/object/apply:collections.Counter
        - {5: 6, 6: 3, 8: 2}
      - !!python/object/apply:collections.Counter
        - {4: 7, 5: 9}
      - !!python/object/apply:collections.Counter
        - {5: 9}
      - !!python/object/apply:collections.Counter
        - {4: 10, 5: 11, 6: 5, 7: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9999900983728677, 0.99998508701183, 0.999994927917524,
        0.9999912097702253, 0.999983066315944, 0.9999900579584649, 0.9999881584852173,
        0.9999859963276431, 0.9999935336090467, 0.9999644072698152]
      max_size: [9949, 9949, 9949, 9949, 9949, 9949, 9949, 9949, 9949, 9945]
      max_weight: [5, 6, 6, 6, 6, 8, 5, 5, 7, 5]
      min_size: [5, 7, 5, 6, 6, 6, 5, 6, 5, 60]
      min_weight: [4, 5, 4, 5, 5, 5, 4, 5, 4, 5]
      num: [17, 7, 34, 14, 9, 12, 17, 10, 28, 2]
      num_edges: [16, 6, 33, 13, 8, 11, 16, 9, 27, 1]
      sum_size: [10072, 10033, 10139, 10067, 10041, 10064, 10073, 10045, 10132, 10005]
      sum_weight: [72, 33, 139, 67, 41, 64, 73, 45, 132, 5]
      width: [16, 6, 33, 13, 8, 11, 16, 9, 27, 1]
    nodes: [10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 49495050.0,
    n: 10000, seed: None}
  Stats:
    edges: [49486816, 49487064, 49486577, 49486761, 49487164, 49486818, 49486912,
      49487019, 49486646, 49448300]
    randoms: [24449, 24351, 24589, 24545, 24439, 24544, 24264, 24915, 24968, 24634]
    total: [0.205485105745268, 0.198921535862382, 0.239001062009979, 0.21103138545023,
      0.240381572573583, 0.252428268240987, 0.215010423810597, 0.224882917752087,
      0.252831770586727, 0.232453536636612]
  Times:
    t_expand_cliques: [0.101904824652287, 0.101404713876896, 0.122972631139117, 0.103409594821517,
      0.11235116583844, 0.113764789538706, 0.101458650738678, 0.122028394685376, 0.101565841717157,
      0.122318219974321]
    t_merge_cliques: [0.103580281092981, 0.097516821985487, 0.116028430870863, 0.107621790628713,
      0.128030406735142, 0.138663478702281, 0.113551773071919, 0.102854523066711,
      0.15126592886957, 0.110135316662291]
- Output:
    clique_trees:
    - avg_size: [5.203636363636364, 5.174377224199288, 4.828282828282828, 4.996376811594203,
        5.0, 4.780327868852459, 4.965034965034965, 5.088652482269503, 7.116402116402116,
        5.017241379310345]
      avg_weight: [1.572992700729927, 1.6214285714285714, 1.4662162162162162, 1.3781818181818182,
        1.8512658227848102, 1.506578947368421, 1.4736842105263157, 1.5480427046263345,
        1.8351063829787233, 1.57439446366782]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 79, 3: 90, 4: 47, 5: 23, 6: 6, 7: 7, 8: 5, 9: 3, 10: 3, 12: 1, 14: 2,
          15: 1, 16: 3, 17: 1, 18: 1, 24: 1, 52: 1, 304: 1}
      - !!python/object/apply:collections.Counter
        - {2: 87, 3: 93, 4: 39, 5: 22, 6: 14, 7: 4, 8: 6, 9: 2, 10: 3, 13: 2, 14: 2,
          15: 1, 20: 1, 25: 1, 26: 1, 28: 1, 57: 1, 302: 1}
      - !!python/object/apply:collections.Counter
        - {2: 100, 3: 90, 4: 50, 5: 22, 6: 14, 7: 4, 8: 3, 9: 3, 10: 1, 11: 1, 12: 1,
          13: 2, 16: 1, 17: 1, 19: 1, 21: 1, 54: 1, 305: 1}
      - !!python/object/apply:collections.Counter
        - {2: 100, 3: 76, 4: 45, 5: 21, 6: 8, 7: 11, 8: 3, 9: 1, 11: 2, 12: 1, 15: 1,
          16: 1, 20: 2, 21: 1, 37: 1, 40: 1, 305: 1}
      - !!python/object/apply:collections.Counter
        - {2: 91, 3: 86, 4: 59, 5: 31, 6: 16, 7: 13, 8: 3, 9: 4, 10: 3, 11: 1, 12: 3,
          14: 1, 17: 1, 21: 1, 22: 1, 23: 1, 26: 1, 307: 1}
      - !!python/object/apply:collections.Counter
        - {2: 101, 3: 92, 4: 45, 5: 23, 6: 15, 7: 9, 8: 1, 9: 3, 10: 4, 11: 4, 13: 1,
          14: 3, 15: 1, 17: 2, 309: 1}
      - !!python/object/apply:collections.Counter
        - {2: 99, 3: 76, 4: 51, 5: 22, 6: 13, 7: 3, 8: 3, 9: 1, 10: 7, 11: 2, 12: 2,
          13: 3, 14: 1, 19: 1, 55: 1, 305: 1}
      - !!python/object/apply:collections.Counter
        - {2: 76, 3: 92, 4: 54, 5: 26, 6: 11, 7: 5, 8: 2, 9: 5, 11: 2, 12: 2, 13: 3,
          22: 1, 37: 1, 51: 1, 304: 1}
      - !!python/object/apply:collections.Counter
        - {2: 66, 3: 39, 4: 32, 5: 12, 6: 10, 7: 8, 8: 2, 9: 2, 10: 2, 11: 1, 12: 2,
          13: 1, 14: 1, 15: 2, 20: 1, 28: 1, 32: 1, 34: 1, 36: 1, 38: 1, 39: 1, 175: 1,
          244: 1}
      - !!python/object/apply:collections.Counter
        - {2: 97, 3: 77, 4: 46, 5: 33, 6: 14, 7: 3, 8: 4, 9: 3, 10: 4, 12: 2, 13: 1,
          15: 1, 19: 1, 25: 1, 35: 1, 41: 1, 305: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 146, 2: 104, 3: 19, 4: 5}
      - !!python/object/apply:collections.Counter
        - {1: 146, 2: 102, 3: 24, 4: 8}
      - !!python/object/apply:collections.Counter
        - {1: 192, 2: 74, 3: 26, 4: 4}
      - !!python/object/apply:collections.Counter
        - {1: 191, 2: 66, 3: 16, 4: 2}
      - !!python/object/apply:collections.Counter
        - {1: 145, 2: 107, 3: 38, 4: 18, 5: 8}
      - !!python/object/apply:collections.Counter
        - {1: 184, 2: 89, 3: 28, 4: 3}
      - !!python/object/apply:collections.Counter
        - {1: 184, 2: 76, 3: 17, 4: 7, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 162, 2: 90, 3: 24, 4: 4, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 75, 2: 82, 3: 21, 4: 7, 5: 3}
      - !!python/object/apply:collections.Counter
        - {1: 168, 2: 83, 3: 31, 4: 7}
      height: [1, 1, 7, 2, 8, 9, 1, 2, 1, 1]
      max_clique_edge_distribution: [0.922042042042042, 0.9099299299299299, 0.9281281281281282,
        0.9281281281281282, 0.9403603603603604, 0.9526726726726726, 0.9281281281281282,
        0.922042042042042, 0.5935135135135136, 0.9281281281281282]
      max_size: [304, 302, 305, 305, 307, 309, 305, 304, 244, 305]
      max_weight: [4, 4, 4, 4, 5, 4, 5, 5, 5, 4]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [275, 281, 297, 276, 317, 305, 286, 282, 189, 290]
      num_edges: [274, 280, 296, 275, 316, 304, 285, 281, 188, 289]
      sum_size: [1431, 1454, 1434, 1379, 1585, 1458, 1420, 1435, 1345, 1455]
      sum_weight: [431, 454, 434, 379, 585, 458, 420, 435, 345, 455]
      width: [1, 1, 98, 12, 88, 80, 2, 9, 5, 2]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 49950.0,
    n: 1000, seed: None}
  Stats:
    edges: [49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950, 49950]
    randoms: [2444, 2510, 2448, 2389, 2623, 2477, 2458, 2456, 2480, 2481]
    total: [0.013841291125577, 0.022430224305657, 0.020458115125159, 0.034835361143134,
      0.022076903723726, 0.022448658422975, 0.016525844803166, 0.016856976169807,
      0.015923322264898, 0.015995693243998]
  Times:
    t_expand_cliques: [0.009186676502748, 0.015907619127923, 0.009661867082504, 0.020797780805373,
      0.015757073836491, 0.014665364444206, 0.007850885742269, 0.011192240192452,
      0.010641947653252, 0.009007114545167]
    t_merge_cliques: [0.004654614622829, 0.006522605177734, 0.010796248042655, 0.014037580337761,
      0.006319829887234, 0.007783293978769, 0.008674959060898, 0.005664735977355,
      0.005281374611646, 0.006988578698831]
- Output:
    clique_trees:
    - avg_size: [13.533333333333333, 8.712328767123287, 6.63265306122449, 7.605882352941176,
        12.875, 6.373134328358209, 7.211111111111111, 14.975308641975309, 7.2, 22.48]
      avg_weight: [2.449438202247191, 1.8758620689655172, 1.5384615384615385, 1.7337278106508875,
        2.4842105263157896, 1.405, 1.664804469273743, 2.6625, 1.6536312849162011,
        2.5306122448979593]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 29, 4: 19, 5: 18, 6: 8, 7: 4, 8: 1, 9: 1, 10: 2, 11: 2, 15: 1, 19: 1,
          21: 1, 37: 1, 204: 1, 534: 1}
      - !!python/object/apply:collections.Counter
        - {2: 33, 3: 32, 4: 38, 5: 12, 6: 8, 7: 3, 8: 2, 9: 4, 10: 3, 11: 2, 12: 1,
          13: 1, 15: 2, 17: 1, 21: 2, 41: 1, 570: 1}
      - !!python/object/apply:collections.Counter
        - {2: 74, 3: 52, 4: 41, 5: 8, 6: 5, 7: 4, 8: 2, 9: 1, 10: 2, 11: 1, 13: 1,
          14: 1, 19: 1, 24: 1, 37: 1, 571: 1}
      - !!python/object/apply:collections.Counter
        - {2: 56, 3: 45, 4: 27, 5: 14, 6: 9, 7: 5, 8: 2, 9: 2, 10: 2, 13: 2, 17: 1,
          20: 1, 25: 1, 33: 1, 34: 1, 570: 1}
      - !!python/object/apply:collections.Counter
        - {3: 29, 4: 28, 5: 10, 6: 7, 7: 6, 8: 3, 9: 1, 10: 1, 11: 2, 12: 2, 13: 1,
          18: 1, 19: 1, 21: 1, 87: 1, 99: 1, 557: 1}
      - !!python/object/apply:collections.Counter
        - {2: 86, 3: 62, 4: 28, 5: 7, 6: 6, 7: 3, 8: 2, 9: 2, 13: 1, 19: 1, 35: 1,
          48: 1, 570: 1}
      - !!python/object/apply:collections.Counter
        - {2: 39, 3: 58, 4: 34, 5: 19, 6: 8, 7: 8, 8: 5, 9: 2, 10: 3, 12: 1, 19: 1,
          20: 1, 572: 1}
      - !!python/object/apply:collections.Counter
        - {3: 24, 4: 15, 5: 14, 6: 10, 7: 1, 8: 3, 9: 4, 12: 1, 13: 1, 16: 1, 17: 1,
          20: 1, 23: 1, 37: 1, 59: 1, 135: 1, 552: 1}
      - !!python/object/apply:collections.Counter
        - {2: 44, 3: 55, 4: 32, 5: 19, 6: 11, 7: 6, 8: 1, 9: 3, 11: 3, 12: 2, 13: 1,
          15: 1, 20: 1, 572: 1}
      - !!python/object/apply:collections.Counter
        - {3: 16, 4: 9, 5: 8, 6: 6, 7: 1, 9: 3, 13: 1, 19: 1, 31: 1, 39: 1, 47: 1,
          291: 1, 490: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 62, 3: 15, 4: 11, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 50, 2: 68, 3: 23, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 116, 2: 56, 3: 20, 4: 3}
      - !!python/object/apply:collections.Counter
        - {1: 70, 2: 77, 3: 19, 4: 3}
      - !!python/object/apply:collections.Counter
        - {2: 65, 3: 19, 4: 6, 5: 5}
      - !!python/object/apply:collections.Counter
        - {1: 131, 2: 57, 3: 12}
      - !!python/object/apply:collections.Counter
        - {1: 79, 2: 83, 3: 15, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 45, 3: 20, 4: 12, 5: 3}
      - !!python/object/apply:collections.Counter
        - {1: 93, 2: 64, 3: 15, 4: 5, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 25, 3: 22, 4: 2}
      height: [1, 2, 7, 4, 2, 4, 1, 1, 1, 4]
      max_clique_edge_distribution: [0.8633542633542634, 0.9838019838019838, 0.9872599872599873,
        0.9838019838019838, 0.9394000060666727, 0.9838019838019838, 0.9907240573907241,
        0.9225953225953226, 0.9907240573907241, 0.7268221362097625]
      max_size: [534, 570, 571, 570, 557, 570, 572, 552, 572, 490]
      max_weight: [5, 5, 4, 4, 5, 3, 4, 5, 5, 4]
      min_size: [3, 2, 2, 2, 3, 2, 2, 3, 2, 3]
      min_weight: [2, 1, 1, 1, 2, 1, 1, 2, 1, 2]
      num: [90, 146, 196, 170, 96, 201, 180, 81, 180, 50]
      num_edges: [89, 145, 195, 169, 95, 200, 179, 80, 179, 49]
      sum_size: [1218, 1272, 1300, 1293, 1236, 1281, 1298, 1213, 1296, 1124]
      sum_weight: [218, 272, 300, 293, 236, 281, 298, 213, 296, 124]
      width: [1, 2, 108, 99, 2, 128, 1, 1, 1, 21]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 164835.0,
    n: 1000, seed: None}
  Stats:
    edges: [164835, 164835, 164835, 164835, 164835, 164835, 164835, 164835, 164835,
      164834]
    randoms: [2442, 2431, 2385, 2453, 2462, 2363, 2420, 2470, 2406, 2419]
    total: [0.016934126364509, 0.019504320240217, 0.015773118346009, 0.01575809795412,
      0.02365336212697, 0.014917297380887, 0.025627860915267, 0.020621632573222, 0.021264778444099,
      0.015343671687005]
  Times:
    t_expand_cliques: [0.010477064715017, 0.01297898408214, 0.009094164543614, 0.007815382997804,
      0.017051899891819, 0.008916309448748, 0.018625627314719, 0.014299413078187,
      0.013472267406671, 0.007816407115433]
    t_merge_cliques: [0.006457061649491, 0.006525336158077, 0.006678953802395, 0.007942714956316,
      0.00660146223515, 0.006000987932139, 0.007002233600548, 0.006322219495035, 0.007792511037428,
      0.007527264571572]
- Output:
    clique_trees:
    - avg_size: [22.03921568627451, 48.68181818181818, 13.136842105263158, 14.226190476190476,
        31.2, 13.813953488372093, 13.840909090909092, 10.585585585585585, 12.56701030927835,
        13.483516483516484]
      avg_weight: [2.48, 3.380952380952381, 2.6382978723404253, 2.3493975903614457,
        2.7058823529411766, 2.211764705882353, 2.5057471264367814, 1.5909090909090908,
        2.28125, 2.522222222222222]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 11, 4: 7, 5: 4, 6: 3, 7: 4, 8: 4, 9: 2, 10: 3, 11: 3, 12: 1, 13: 3,
          14: 1, 16: 1, 19: 1, 31: 1, 50: 1, 703: 1}
      - !!python/object/apply:collections.Counter
        - {4: 5, 5: 6, 6: 4, 7: 2, 8: 1, 14: 1, 16: 1, 310: 1, 635: 1}
      - !!python/object/apply:collections.Counter
        - {3: 27, 4: 30, 5: 13, 6: 6, 7: 8, 8: 1, 9: 1, 17: 3, 18: 1, 20: 1, 22: 1,
          25: 1, 33: 1, 704: 1}
      - !!python/object/apply:collections.Counter
        - {3: 27, 4: 27, 5: 8, 6: 5, 7: 2, 9: 1, 10: 5, 11: 1, 14: 1, 16: 1, 17: 1,
          19: 1, 22: 2, 38: 1, 704: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 7, 5: 3, 6: 5, 7: 2, 8: 1, 9: 3, 23: 1, 26: 1, 220: 1, 671: 1}
      - !!python/object/apply:collections.Counter
        - {3: 34, 4: 16, 5: 12, 6: 6, 7: 2, 8: 5, 9: 3, 10: 1, 11: 1, 14: 1, 19: 2,
          26: 1, 42: 1, 704: 1}
      - !!python/object/apply:collections.Counter
        - {3: 28, 4: 26, 5: 14, 6: 6, 7: 2, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1,
          15: 3, 24: 1, 70: 1, 702: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 28, 4: 9, 5: 9, 6: 6, 7: 4, 8: 3, 9: 2, 10: 1, 12: 1, 13: 1,
          16: 1, 17: 1, 18: 1, 29: 1, 705: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 23, 4: 29, 5: 10, 6: 6, 7: 4, 8: 5, 9: 2, 11: 1, 13: 1, 19: 1,
          38: 1, 54: 1, 703: 1}
      - !!python/object/apply:collections.Counter
        - {3: 29, 4: 25, 5: 12, 6: 6, 7: 4, 8: 3, 11: 3, 12: 1, 13: 3, 14: 1, 25: 1,
          31: 1, 34: 1, 704: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 31, 3: 14, 4: 5}
      - !!python/object/apply:collections.Counter
        - {3: 15, 4: 4, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 49, 3: 30, 4: 15}
      - !!python/object/apply:collections.Counter
        - {2: 58, 3: 21, 4: 4}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 20, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 69, 3: 14, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 56, 3: 20, 4: 9, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 52, 2: 52, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 56, 3: 22, 4: 4, 6: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 56, 3: 26, 4: 4, 5: 3, 6: 1}
      height: [1, 2, 5, 3, 2, 2, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.988, 0.8066901239119632, 0.9908148148148148,
        0.9908148148148148, 0.9001337476574138, 0.9908148148148148, 0.9851891891891892,
        0.9938684213688118, 0.988, 0.9908148148148148]
      max_size: [703, 635, 704, 704, 671, 704, 702, 705, 703, 704]
      max_weight: [4, 5, 4, 4, 4, 4, 5, 4, 7, 6]
      min_size: [3, 4, 3, 3, 3, 3, 3, 2, 2, 3]
      min_weight: [2, 3, 2, 2, 2, 2, 2, 1, 1, 2]
      num: [51, 22, 95, 84, 35, 86, 88, 111, 97, 91]
      num_edges: [50, 21, 94, 83, 34, 85, 87, 110, 96, 90]
      sum_size: [1124, 1071, 1248, 1195, 1092, 1188, 1218, 1175, 1219, 1227]
      sum_weight: [124, 71, 248, 195, 92, 188, 218, 175, 219, 227]
      width: [2, 18, 57, 61, 22, 2, 1, 110, 1, 1]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 249750.0,
    n: 1000, seed: None}
  Stats:
    edges: [249750, 249532, 249750, 249750, 249724, 249750, 249750, 249691, 249750,
      249750]
    randoms: [2393, 2437, 2524, 2465, 2419, 2385, 2476, 2402, 2424, 2455]
    total: [0.030178356912504, 0.021280822953617, 0.024701034461216, 0.023717198792497,
      0.022250662348077, 0.018744766332201, 0.020992021782299, 0.019203229657354,
      0.022100458429188, 0.015263107766874]
  Times:
    t_expand_cliques: [0.014592652092563, 0.010981271960922, 0.017281984985753, 0.015615745603719,
      0.013390679368912, 0.009751306688751, 0.007918477505768, 0.012229671350412,
      0.009912434529014, 0.00811920456101]
    t_merge_cliques: [0.015585704819941, 0.010299550992694, 0.007419049475464, 0.008101453188778,
      0.008859982979165, 0.00899345964345, 0.013073544276531, 0.006973558306942, 0.012188023900174,
      0.007143903205864]
- Output:
    clique_trees:
    - avg_size: [30.333333333333332, 58.5, 21.245283018867923, 20.87037037037037,
        80.6923076923077, 20.87272727272727, 48.59090909090909, 26.682926829268293,
        46.73913043478261, 74.85714285714286]
      avg_weight: [2.6285714285714286, 3.1176470588235294, 2.423076923076923, 2.3962264150943398,
        4.083333333333333, 2.740740740740741, 3.2857142857142856, 2.35, 3.409090909090909,
        3.6923076923076925]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 15, 4: 5, 5: 4, 6: 4, 8: 2, 9: 1, 10: 1, 11: 1, 32: 1, 41: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {4: 10, 5: 2, 6: 2, 24: 1, 37: 1, 68: 1, 862: 1}
      - !!python/object/apply:collections.Counter
        - {3: 21, 4: 13, 5: 5, 6: 4, 7: 1, 8: 2, 10: 2, 11: 1, 14: 2, 15: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {3: 15, 4: 21, 5: 6, 6: 6, 7: 1, 8: 1, 15: 1, 16: 1, 21: 1, 865: 1}
      - !!python/object/apply:collections.Counter
        - {5: 7, 7: 1, 10: 1, 19: 1, 58: 1, 59: 1, 861: 1}
      - !!python/object/apply:collections.Counter
        - {3: 13, 4: 15, 5: 10, 6: 3, 7: 5, 8: 1, 9: 3, 10: 1, 11: 1, 12: 1, 13: 1,
          865: 1}
      - !!python/object/apply:collections.Counter
        - {4: 5, 5: 5, 6: 4, 7: 1, 8: 1, 16: 3, 31: 1, 42: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {3: 18, 4: 10, 5: 6, 6: 2, 7: 1, 8: 1, 10: 1, 70: 1, 863: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3, 5: 4, 6: 2, 7: 2, 8: 1, 9: 1, 10: 1, 11: 2, 12: 1, 13: 2, 14: 1,
          22: 1, 30: 1, 864: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 4, 6: 2, 7: 1, 17: 1, 18: 1, 29: 1, 75: 1, 862: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 16, 4: 3}
      - !!python/object/apply:collections.Counter
        - {3: 15, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 38, 3: 9, 4: 4, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 33, 3: 19, 4: 1}
      - !!python/object/apply:collections.Counter
        - {4: 11, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 25, 3: 20, 4: 8, 6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 15, 4: 6}
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 10, 4: 2}
      - !!python/object/apply:collections.Counter
        - {3: 16, 4: 3, 5: 3}
      - !!python/object/apply:collections.Counter
        - {3: 5, 4: 7, 5: 1}
      height: [2, 1, 1, 1, 1, 1, 1, 2, 1, 1]
      max_clique_edge_distribution: [0.9957240189414477, 0.9912571721639901, 0.9982635642347661,
        0.9981062477797158, 0.9903832006955126, 0.9983675803051636, 0.9952110194602386,
        0.9929443987656035, 0.9967063050731457, 0.9906406084405375]
      max_size: [864, 862, 865, 865, 861, 865, 864, 863, 864, 862]
      max_weight: [4, 4, 7, 4, 5, 6, 4, 4, 5, 5]
      min_size: [3, 4, 3, 3, 5, 3, 4, 3, 4, 4]
      min_weight: [2, 3, 2, 2, 4, 2, 3, 2, 3, 3]
      num: [36, 18, 53, 54, 13, 55, 22, 41, 23, 14]
      num_edges: [35, 17, 52, 53, 12, 54, 21, 40, 22, 13]
      sum_size: [1092, 1053, 1126, 1127, 1049, 1148, 1069, 1094, 1075, 1048]
      sum_weight: [92, 53, 126, 127, 49, 148, 69, 94, 75, 48]
      width: [34, 17, 52, 53, 12, 54, 21, 39, 22, 13]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 374625.0,
    n: 1000, seed: None}
  Stats:
    edges: [374417, 374364, 374330, 374389, 373825, 374291, 374610, 374596, 374048,
      374597]
    randoms: [2456, 2408, 2411, 2398, 2611, 2503, 2491, 2419, 2525, 2472]
    total: [0.026838026579949, 0.030673688472293, 0.019239415146905, 0.024858065830964,
      0.024078712315458, 0.025405286017278, 0.01791113458237, 0.028638766743896, 0.029822988095315,
      0.015644079524782]
  Times:
    t_expand_cliques: [0.011982859001875, 0.022493378226098, 0.011964083512014, 0.014198025432937,
      0.010633071967135, 0.014809423657322, 0.009668694533362, 0.01954084710231, 0.015837979129165,
      0.008582447101764]
    t_merge_cliques: [0.014855167578074, 0.008180310246195, 0.007275331634891, 0.010660040398027,
      0.013445640348323, 0.010595862359956, 0.008242440049008, 0.009097919641586,
      0.01398500896615, 0.007061632423018]
- Output:
    clique_trees:
    - avg_size: [169.5, 502.0, 202.4, 336.3333333333333, 253.25, 203.6, 203.2, 502.5,
        253.0, 253.25]
      avg_weight: [3.4, 4.0, 3.0, 4.5, 4.333333333333333, 4.5, 4.0, 5.0, 4.0, 4.333333333333333]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 3, 994: 1}
      - !!python/object/apply:collections.Counter
        - {13: 1, 991: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3, 6: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 10: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {6: 2, 7: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 2, 7: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {5: 3, 7: 1, 994: 1}
      - !!python/object/apply:collections.Counter
        - {12: 1, 993: 1}
      - !!python/object/apply:collections.Counter
        - {6: 3, 994: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 1, 8: 1, 994: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {3: 3, 4: 2}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 4}
      - !!python/object/apply:collections.Counter
        - {4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 2}
      - !!python/object/apply:collections.Counter
        - {4: 4}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9999574504297507, 0.999853246014712, 0.9999574504297507,
        0.999920982251398, 0.9999412420220849, 0.9999412420220849, 0.9999452940747404,
        0.9998863138063762, 0.9999452940747404, 0.9999371900022692]
      max_size: [994, 991, 994, 994, 994, 994, 994, 993, 994, 994]
      max_weight: [4, 4, 3, 5, 5, 5, 4, 5, 4, 5]
      min_size: [4, 13, 4, 5, 6, 5, 5, 12, 6, 5]
      min_weight: [3, 4, 3, 4, 4, 4, 4, 5, 4, 4]
      num: [6, 2, 5, 3, 4, 5, 5, 2, 4, 4]
      num_edges: [5, 1, 4, 2, 3, 4, 4, 1, 3, 3]
      sum_size: [1017, 1004, 1012, 1009, 1013, 1018, 1016, 1005, 1012, 1013]
      sum_weight: [17, 4, 12, 9, 13, 18, 16, 5, 12, 13]
      width: [5, 1, 4, 2, 3, 4, 4, 1, 3, 3]
    nodes: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 494505.0,
    n: 1000, seed: None}
  Stats:
    edges: [493542, 490617, 493542, 493560, 493550, 493550, 493548, 492584, 493548,
      493552]
    randoms: [2374, 2451, 2430, 2398, 2460, 2486, 2500, 2599, 2376, 2400]
    total: [0.015805548737587, 0.024393116427496, 0.020236564344799, 0.020674545317375,
      0.018723259861997, 0.019082383777157, 0.028451694590372, 0.019180016324436,
      0.016605725978212, 0.018483957709404]
  Times:
    t_expand_cliques: [0.00857732651362, 0.013662411913082, 0.012095511941041, 0.013241158195108,
      0.007970366132294, 0.011938821943837, 0.012350175858066, 0.011002095686041,
      0.00981411923665, 0.008893778860915]
    t_merge_cliques: [0.007228222223967, 0.010730704514413, 0.008141052403758, 0.007433387122267,
      0.010752893729703, 0.00714356183332, 0.016101518732306, 0.008177920638394, 0.006791606741562,
      0.009590178848489]
- Output:
    clique_trees:
    - avg_size: [3.0476190476190474, 3.657142857142857, 4.71875, 2.765957446808511,
        2.811320754716981, 3.5526315789473686, 2.72, 3.046511627906977, 3.159090909090909,
        5.037037037037037]
      avg_weight: [0.6829268292682927, 0.8235294117647058, 1.6451612903225807, 0.6521739130434783,
        0.9423076923076923, 0.9459459459459459, 0.7346938775510204, 0.7380952380952381,
        0.9069767441860465, 1.3846153846153846]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {1: 13, 2: 16, 3: 5, 4: 3, 5: 2, 9: 1, 10: 1, 27: 1}
      - !!python/object/apply:collections.Counter
        - {1: 9, 2: 12, 3: 6, 4: 2, 5: 1, 6: 1, 10: 1, 11: 1, 15: 1, 22: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 9, 4: 6, 5: 5, 6: 2, 7: 2, 16: 1, 21: 1}
      - !!python/object/apply:collections.Counter
        - {1: 14, 2: 20, 3: 8, 4: 2, 5: 1, 11: 1, 28: 1}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 22, 3: 9, 4: 8, 5: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 13, 3: 8, 4: 3, 5: 1, 7: 1, 9: 2, 10: 1, 25: 1}
      - !!python/object/apply:collections.Counter
        - {1: 15, 2: 19, 3: 10, 4: 3, 5: 1, 7: 1, 29: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 17, 3: 8, 4: 4, 5: 2, 9: 1, 28: 1}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 18, 3: 11, 4: 3, 5: 3, 8: 1, 28: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 6, 3: 7, 4: 2, 5: 4, 6: 2, 9: 2, 10: 1, 14: 1, 20: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 19, 2: 3, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 12, 1: 18, 2: 2, 3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 17, 2: 8, 3: 6}
      - !!python/object/apply:collections.Counter
        - {0: 20, 1: 22, 2: 4}
      - !!python/object/apply:collections.Counter
        - {0: 18, 1: 22, 2: 9, 3: 3}
      - !!python/object/apply:collections.Counter
        - {0: 9, 1: 22, 2: 5, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 21, 1: 21, 2: 6, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 15, 1: 23, 2: 4}
      - !!python/object/apply:collections.Counter
        - {0: 13, 1: 22, 2: 7, 3: 1}
      - !!python/object/apply:collections.Counter
        - {0: 1, 1: 15, 2: 9, 3: 1}
      height: [2, 4, 5, 6, 1, 1, 2, 1, 5, 1]
      max_clique_edge_distribution: [0.7090909090909091, 0.4666666666666667, 0.42424242424242425,
        0.7636363636363637, 0.8202020202020202, 0.6060606060606061, 0.8202020202020202,
        0.7636363636363637, 0.7636363636363637, 0.3838383838383838]
      max_size: [27, 22, 21, 28, 29, 25, 29, 28, 28, 20]
      max_weight: [3, 3, 3, 2, 3, 3, 3, 2, 3, 3]
      min_size: [1, 1, 2, 1, 1, 1, 1, 1, 1, 1]
      min_weight: [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
      num: [42, 35, 32, 47, 53, 38, 50, 43, 44, 27]
      num_edges: [41, 34, 31, 46, 52, 37, 49, 42, 43, 26]
      sum_size: [128, 128, 151, 130, 149, 135, 136, 131, 139, 136]
      sum_weight: [28, 28, 51, 30, 49, 35, 36, 31, 39, 36]
      width: [1, 8, 13, 22, 2, 1, 6, 1, 17, 1]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 495.0,
    n: 100, seed: None}
  Stats:
    edges: [495, 495, 495, 495, 495, 495, 495, 495, 495, 495]
    randoms: [226, 227, 253, 228, 247, 233, 234, 229, 237, 238]
    total: [0.00129038821227, 0.001058254883078, 0.002013756630735, 0.004391075019689,
      0.001587040952074, 0.002702305049822, 0.001040162138303, 0.001358662720855,
      0.004927029912086, 0.001417037425696]
  Times:
    t_expand_cliques: [0.000731561359496, 0.000684451948572, 0.00082646292643, 0.002280368586762,
      0.000904978611303, 0.00087425508244, 0.0007506782219, 0.000773550182276, 0.000743509398498,
      0.000723027045922]
    t_merge_cliques: [0.000558826852774, 0.000373802934507, 0.001187293704305, 0.002110706432927,
      0.000682062340771, 0.001828049967382, 0.000289483916403, 0.000585112538579,
      0.004183520513588, 0.000694010379774]
- Output:
    clique_trees:
    - avg_size: [7.055555555555555, 7.0588235294117645, 9.5, 7.052631578947368, 8.066666666666666,
        5.458333333333333, 6.777777777777778, 6.809523809523809, 11.272727272727273,
        7.411764705882353]
      avg_weight: [1.588235294117647, 1.25, 1.2727272727272727, 1.8888888888888888,
        1.5, 1.3478260869565217, 1.2941176470588236, 2.15, 2.4, 1.625]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 6, 4: 2, 6: 1, 7: 3, 11: 1, 55: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 7, 6: 2, 23: 1, 52: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 4, 4: 1, 6: 1, 17: 2, 52: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 5, 4: 3, 5: 2, 6: 2, 8: 1, 15: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 2, 4: 1, 6: 4, 8: 1, 15: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 4, 4: 4, 5: 1, 18: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 5, 4: 1, 5: 2, 9: 1, 16: 1, 54: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 5, 4: 4, 5: 6, 7: 1, 8: 2, 55: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 2, 5: 2, 6: 2, 8: 1, 12: 1, 20: 1, 51: 1}
      - !!python/object/apply:collections.Counter
        - {2: 7, 3: 3, 4: 1, 7: 1, 8: 2, 9: 1, 13: 1, 54: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 3, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 4}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 3}
      - !!python/object/apply:collections.Counter
        - {1: 4, 2: 12, 3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 5, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 17, 2: 4, 3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 12, 2: 5}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 8, 3: 6, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 10, 2: 2, 3: 4}
      height: [2, 3, 2, 4, 3, 4, 2, 3, 2, 3]
      max_clique_edge_distribution: [0.9093692590324556, 0.8125, 0.8129981606376456,
        0.87630128597673, 0.87630128597673, 0.87630128597673, 0.8779141104294479,
        0.9104843654199878, 0.7953836556456644, 0.8779141104294479]
      max_size: [55, 52, 52, 54, 54, 54, 54, 55, 51, 54]
      max_weight: [5, 2, 2, 3, 3, 3, 2, 4, 5, 3]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 3, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 2, 1]
      num: [18, 17, 12, 19, 15, 24, 18, 21, 11, 17]
      num_edges: [17, 16, 11, 18, 14, 23, 17, 20, 10, 16]
      sum_size: [127, 120, 114, 134, 121, 131, 122, 143, 124, 126]
      sum_weight: [27, 20, 14, 34, 21, 31, 22, 43, 24, 26]
      width: [13, 8, 7, 9, 11, 10, 14, 14, 9, 14]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 1633.5,
    n: 100, seed: None}
  Stats:
    edges: [1633, 1632, 1631, 1633, 1633, 1633, 1630, 1631, 1603, 1630]
    randoms: [241, 224, 222, 263, 228, 237, 226, 264, 247, 246]
    total: [0.001332035662507, 0.001367879779514, 0.002311774860711, 0.002009318787677,
      0.002545615052617, 0.001836584280955, 0.002862408772455, 0.003456055624608,
      0.004942050303975, 0.001579872128673]
  Times:
    t_expand_cliques: [0.000751019594443, 0.000696058615031, 0.000714834104892, 0.000807004691483,
      0.000706299791319, 0.000803249593511, 0.000726782143895, 0.002350008585519,
      0.003372077979047, 0.000761943515816]
    t_merge_cliques: [0.000581016068064, 0.000671821164483, 0.001596940755819, 0.001202314096194,
      0.001839315261298, 0.001033334687444, 0.00213562662856, 0.001106047039088, 0.001569972324928,
      0.000817928612857]
- Output:
    clique_trees:
    - avg_size: [10.166666666666666, 15.0, 9.5, 19.333333333333332, 16.285714285714285,
        26.5, 35.333333333333336, 9.75, 10.272727272727273, 13.333333333333334]
      avg_weight: [2.0, 2.857142857142857, 1.2727272727272727, 3.2, 2.3333333333333335,
        2.0, 3.0, 1.5454545454545454, 1.3, 2.5]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 5, 4: 2, 5: 1, 6: 1, 18: 1, 68: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 1, 5: 1, 6: 1, 9: 1, 11: 1, 14: 1, 68: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 1, 4: 2, 6: 1, 7: 1, 11: 1, 69: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 7: 2, 31: 1, 63: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 1, 5: 1, 6: 1, 8: 1, 21: 1, 67: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 11: 1, 27: 1, 64: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 44: 1, 55: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 3, 4: 1, 6: 1, 7: 1, 8: 2, 69: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 4, 7: 1, 18: 1, 68: 1}
      - !!python/object/apply:collections.Counter
        - {3: 3, 5: 2, 8: 1, 10: 1, 15: 1, 68: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 8, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 4, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 8, 2: 3}
      - !!python/object/apply:collections.Counter
        - {3: 4, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 6}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 3}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 2, 4: 1}
      height: [1, 2, 1, 1, 2, 2, 2, 1, 1, 3]
      max_clique_edge_distribution: [0.9222672064777327, 0.9207760711398545, 0.9559902200488998,
        0.7958435207823961, 0.8940558026688233, 0.8316831683168316, 0.607113654946852,
        0.9575510204081633, 0.9241379310344827, 0.9230145867098866]
      max_size: [68, 68, 69, 63, 67, 64, 55, 69, 68, 68]
      max_weight: [4, 4, 2, 4, 3, 3, 3, 2, 2, 4]
      min_size: [2, 3, 2, 4, 3, 4, 7, 2, 2, 3]
      min_weight: [1, 2, 1, 3, 2, 1, 3, 1, 1, 2]
      num: [12, 8, 12, 6, 7, 4, 3, 12, 11, 9]
      num_edges: [11, 7, 11, 5, 6, 3, 2, 11, 10, 8]
      sum_size: [122, 120, 114, 116, 114, 106, 106, 117, 113, 120]
      sum_weight: [22, 20, 14, 16, 14, 6, 6, 17, 13, 20]
      width: [5, 6, 11, 5, 4, 2, 1, 11, 10, 6]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 2475.0,
    n: 100, seed: None}
  Stats:
    edges: [2470, 2474, 2454, 2454, 2473, 2424, 2446, 2450, 2465, 2468]
    randoms: [235, 248, 225, 261, 236, 221, 246, 225, 217, 261]
    total: [0.001397237818206, 0.00267875034436, 0.001369586642229, 0.003714816012147,
      0.003920663655533, 0.002013415258192, 0.007251435556886, 0.001569972324928,
      0.003438986997461, 0.002795499754041]
  Times:
    t_expand_cliques: [0.000841824690861, 0.001850239182672, 0.000705958418776, 0.002524791327499,
      0.001715055655673, 0.000706299791319, 0.000741461163241, 0.00074487488867, 0.000718589202864,
      0.001439226640986]
    t_merge_cliques: [0.000555413127345, 0.000828511161687, 0.000663628223453, 0.001190024684649,
      0.002205607999861, 0.001307115466873, 0.006509974393646, 0.000825097436258,
      0.002720397794597, 0.001356273113055]
- Output:
    clique_trees:
    - avg_size: [12.666666666666666, 12.88888888888889, 14.375, 11.2, 12.444444444444445,
        19.0, 27.5, 16.857142857142858, 16.285714285714285, 13.444444444444445]
      avg_weight: [1.75, 2.0, 2.142857142857143, 1.3333333333333333, 1.5, 2.8, 3.3333333333333335,
        3.0, 2.3333333333333335, 2.625]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 2, 3: 2, 4: 2, 5: 2, 86: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 2, 5: 1, 6: 1, 7: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 2, 4: 1, 5: 1, 6: 2, 86: 1}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 3, 4: 1, 5: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 2, 4: 2, 6: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 6: 2, 8: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 15: 1, 85: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 2, 6: 1, 8: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 1, 5: 1, 6: 1, 7: 1, 86: 1}
      - !!python/object/apply:collections.Counter
        - {3: 3, 4: 2, 5: 1, 6: 1, 7: 1, 86: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 2, 2: 6}
      - !!python/object/apply:collections.Counter
        - {1: 3, 2: 2, 3: 3}
      - !!python/object/apply:collections.Counter
        - {1: 1, 2: 4, 3: 2}
      - !!python/object/apply:collections.Counter
        - {1: 7, 2: 1, 3: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 2, 3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 4}
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 6}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 2}
      - !!python/object/apply:collections.Counter
        - {2: 4, 3: 3, 4: 1}
      height: [1, 1, 1, 1, 1, 2, 1, 2, 1, 1]
      max_clique_edge_distribution: [0.9907834101382489, 0.9881048932143822, 0.9883720930232558,
        0.9932065217391305, 0.9915897992403689, 0.9846443965517241, 0.9693184903611186,
        0.9846443965517241, 0.9870375371320551, 0.9870375371320551]
      max_size: [86, 86, 86, 86, 86, 86, 85, 86, 86, 86]
      max_weight: [2, 3, 3, 3, 3, 3, 4, 3, 3, 4]
      min_size: [2, 2, 2, 2, 2, 4, 5, 4, 3, 3]
      min_weight: [1, 1, 1, 1, 1, 2, 3, 3, 2, 2]
      num: [9, 9, 8, 10, 9, 6, 4, 7, 7, 9]
      num_edges: [8, 8, 7, 9, 8, 5, 3, 6, 6, 8]
      sum_size: [114, 116, 115, 112, 112, 114, 110, 118, 114, 121]
      sum_weight: [14, 16, 15, 12, 12, 14, 10, 18, 14, 21]
      width: [8, 8, 7, 9, 8, 4, 3, 3, 6, 8]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 3712.5,
    n: 100, seed: None}
  Stats:
    edges: [3689, 3699, 3698, 3680, 3686, 3712, 3683, 3712, 3703, 3703]
    randoms: [231, 240, 231, 216, 221, 250, 247, 260, 252, 252]
    total: [0.002890742693518, 0.001665898009491, 0.001450833307446, 0.001219041350797,
      0.001302336251272, 0.001321111741133, 0.001415330562981, 0.001559389776097,
      0.002598869169314, 0.001275367820381]
  Times:
    t_expand_cliques: [0.000745557633756, 0.001057572137992, 0.000867086259038, 0.000663969595996,
      0.000680696850599, 0.000738730182897, 0.000787887829079, 0.000795739397566,
      0.000924095473707, 0.000737364692725]
    t_merge_cliques: [0.002145185059762, 0.000608325871499, 0.000583747048408, 0.000555071754802,
      0.000621639400673, 0.000582381558236, 0.000627442733903, 0.000763650378531,
      0.001674773695607, 0.000538003127655]
- Output:
    clique_trees:
    - avg_size: [51.5, 51.5, 51.0, 51.0, 52.0, 50.5, 51.0, 51.5, 51.5, 51.5]
      avg_weight: [3.0, 3.0, 2.0, 2.0, 4.0, 1.0, 2.0, 3.0, 3.0, 3.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 98: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 99: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 97: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 97: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9993819530284301, 0.9985294117647059, 0.9995878837832268,
        0.9995878837832268, 0.9991761071060762, 0.9997938994229184, 0.9995878837832268,
        0.9993819530284301, 0.9974293059125964, 0.9974293059125964]
      max_size: [99, 98, 99, 99, 99, 99, 99, 99, 97, 97]
      max_weight: [3, 3, 2, 2, 4, 1, 2, 3, 3, 3]
      min_size: [4, 5, 3, 3, 5, 2, 3, 4, 6, 6]
      min_weight: [3, 3, 2, 2, 4, 1, 2, 3, 3, 3]
      num: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      num_edges: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      sum_size: [103, 103, 102, 102, 104, 101, 102, 103, 103, 103]
      sum_weight: [3, 3, 2, 2, 4, 1, 2, 3, 3, 3]
      width: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    nodes: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 4900.5,
    n: 100, seed: None}
  Stats:
    edges: [4854, 4760, 4853, 4853, 4855, 4852, 4853, 4854, 4668, 4668]
    randoms: [234, 234, 243, 216, 241, 215, 218, 250, 250, 247]
    total: [0.002287196037621, 0.003058697984639, 0.001401334288721, 0.001304043113987,
      0.001343642328966, 0.001509208012287, 0.001390410367348, 0.003325309940666,
      0.001431375072499, 0.002070765845404]
  Times:
    t_expand_cliques: [0.00073087861441, 0.002332939958373, 0.000750336849357, 0.000673186654655,
      0.000724733908637, 0.000931264297109, 0.000709372144205, 0.002332257213287,
      0.000775939790076, 0.001315649780446]
    t_merge_cliques: [0.001556317423211, 0.000725758026266, 0.000650997439365, 0.000630856459332,
      0.000618908420329, 0.000577943715178, 0.000681038223142, 0.000993052727379,
      0.000655435282423, 0.000755116064958]
- Output:
    clique_trees:
    - avg_size: [5.486821705426356, 5.307339449541284, 5.073806078147612, 5.101139601139601,
        10.631921824104234, 5.08100147275405, 11.452898550724637, 5.024064171122995,
        5.1109467455621305, 6.059233449477352]
      avg_weight: [1.6133540372670807, 1.4869831546707504, 1.4579710144927536, 1.5420827389443652,
        2.496732026143791, 1.40117994100295, 2.403636363636364, 1.6840696117804552,
        1.4148148148148147, 1.706806282722513]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 206, 3: 196, 4: 113, 5: 46, 6: 27, 7: 10, 8: 12, 9: 8, 10: 4, 11: 4,
          12: 4, 13: 2, 14: 3, 15: 1, 16: 2, 17: 1, 33: 1, 50: 1, 59: 1, 80: 1, 228: 1,
          743: 1}
      - !!python/object/apply:collections.Counter
        - {2: 223, 3: 198, 4: 91, 5: 50, 6: 28, 7: 16, 8: 5, 9: 5, 10: 5, 11: 5, 12: 4,
          13: 2, 14: 3, 16: 2, 17: 2, 19: 2, 20: 2, 22: 4, 24: 1, 29: 1, 34: 1, 36: 1,
          47: 1, 51: 1, 778: 1}
      - !!python/object/apply:collections.Counter
        - {2: 228, 3: 225, 4: 101, 5: 50, 6: 23, 7: 23, 8: 6, 9: 5, 10: 5, 11: 3,
          12: 2, 13: 2, 14: 2, 15: 2, 16: 1, 17: 1, 18: 1, 20: 1, 23: 3, 25: 1, 28: 1,
          29: 1, 30: 1, 31: 1, 77: 1, 778: 1}
      - !!python/object/apply:collections.Counter
        - {2: 227, 3: 184, 4: 151, 5: 53, 6: 18, 7: 16, 8: 10, 9: 5, 10: 6, 11: 3,
          12: 4, 13: 7, 14: 1, 15: 1, 16: 1, 17: 4, 18: 2, 19: 2, 21: 2, 22: 1, 26: 1,
          29: 1, 42: 1, 781: 1}
      - !!python/object/apply:collections.Counter
        - {3: 97, 4: 74, 5: 41, 6: 18, 7: 16, 8: 9, 9: 11, 10: 6, 11: 3, 12: 3, 13: 2,
          14: 2, 15: 1, 16: 2, 17: 1, 19: 2, 22: 1, 24: 1, 26: 4, 27: 1, 33: 1, 36: 1,
          38: 1, 41: 1, 43: 1, 48: 1, 49: 2, 71: 1, 189: 1, 374: 1, 648: 1}
      - !!python/object/apply:collections.Counter
        - {2: 240, 3: 205, 4: 100, 5: 55, 6: 20, 7: 16, 8: 6, 9: 7, 10: 6, 11: 4,
          12: 1, 13: 1, 14: 1, 16: 5, 19: 1, 20: 2, 21: 2, 23: 1, 29: 1, 37: 2, 40: 1,
          69: 1, 778: 1}
      - !!python/object/apply:collections.Counter
        - {3: 94, 4: 61, 5: 41, 6: 21, 7: 8, 8: 11, 9: 4, 10: 4, 11: 4, 12: 1, 13: 3,
          14: 1, 15: 2, 16: 1, 18: 1, 21: 2, 23: 1, 25: 1, 26: 1, 28: 2, 29: 1, 36: 2,
          38: 1, 40: 1, 41: 1, 66: 1, 101: 1, 131: 1, 228: 1, 370: 1, 623: 1}
      - !!python/object/apply:collections.Counter
        - {2: 247, 3: 215, 4: 116, 5: 76, 6: 29, 7: 19, 8: 13, 9: 8, 10: 5, 11: 1,
          12: 1, 13: 1, 14: 1, 16: 2, 20: 3, 21: 1, 22: 2, 23: 1, 24: 1, 27: 1, 38: 1,
          40: 1, 47: 1, 58: 1, 778: 1}
      - !!python/object/apply:collections.Counter
        - {2: 240, 3: 218, 4: 104, 5: 43, 6: 20, 7: 12, 8: 7, 9: 5, 10: 4, 11: 4,
          12: 2, 13: 3, 14: 3, 15: 1, 16: 3, 17: 1, 23: 1, 41: 1, 51: 1, 97: 1, 140: 1,
          764: 1}
      - !!python/object/apply:collections.Counter
        - {2: 185, 3: 196, 4: 84, 5: 31, 6: 21, 7: 7, 8: 7, 9: 1, 10: 4, 11: 4, 12: 2,
          13: 4, 14: 3, 15: 2, 16: 2, 18: 2, 19: 1, 20: 2, 23: 1, 25: 2, 26: 1, 27: 1,
          29: 1, 30: 1, 34: 1, 35: 1, 39: 1, 41: 1, 43: 1, 44: 1, 92: 1, 163: 1, 754: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 357, 2: 198, 3: 73, 4: 13, 5: 3}
      - !!python/object/apply:collections.Counter
        - {1: 401, 2: 198, 3: 43, 4: 10, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 448, 2: 179, 3: 52, 4: 11}
      - !!python/object/apply:collections.Counter
        - {1: 421, 2: 192, 3: 76, 4: 12}
      - !!python/object/apply:collections.Counter
        - {2: 195, 3: 85, 4: 14, 5: 10, 6: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {1: 472, 2: 152, 3: 44, 4: 8, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 185, 3: 72, 4: 15, 5: 3}
      - !!python/object/apply:collections.Counter
        - {1: 430, 2: 192, 3: 79, 4: 30, 5: 11, 6: 3, 7: 2}
      - !!python/object/apply:collections.Counter
        - {1: 449, 2: 178, 3: 43, 4: 4, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 263, 2: 240, 3: 54, 4: 9, 5: 5, 6: 2}
      height: [2, 3, 8, 8, 4, 3, 7, 1, 4, 10]
      max_clique_edge_distribution: [0.8824425770308123, 0.9675966386554622, 0.9675966386554622,
        0.975078031212485, 0.671078031212485, 0.9675966386554622, 0.6202577030812325,
        0.9675966386554622, 0.9330644257703081, 0.9087827130852341]
      max_size: [743, 778, 778, 781, 648, 778, 623, 778, 764, 754]
      max_weight: [5, 5, 4, 4, 7, 5, 5, 7, 5, 6]
      min_size: [2, 2, 2, 2, 3, 2, 3, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 2, 1, 2, 1, 1, 1]
      num: [645, 654, 691, 702, 307, 679, 276, 748, 676, 574]
      num_edges: [644, 653, 690, 701, 306, 678, 275, 747, 675, 573]
      sum_size: [3539, 3471, 3506, 3581, 3264, 3450, 3161, 3758, 3455, 3478]
      sum_weight: [1039, 971, 1006, 1081, 764, 950, 661, 1258, 955, 978]
      width: [2, 3, 208, 230, 3, 2, 50, 2, 46, 154]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 312375.0,
    n: 2500, seed: None}
  Stats:
    edges: [312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375, 312375,
      312375]
    randoms: [6139, 6006, 6038, 6129, 6334, 5978, 6116, 6334, 6007, 6198]
    total: [0.03758477560388, 0.045769523693132, 0.054005477663824, 0.045426444287489,
      0.049761534210138, 0.047880230126059, 0.046801492890405, 0.049306484610414,
      0.040157700459931, 0.045910169180818]
  Times:
    t_expand_cliques: [0.023269659388718, 0.029913110446648, 0.034773914085407, 0.028475249295834,
      0.032944840000396, 0.028484466354493, 0.022178974114062, 0.031859275313884,
      0.026212632081304, 0.027839954993444]
    t_merge_cliques: [0.014315116215162, 0.015856413246484, 0.019231563578417, 0.016951194991655,
      0.016816694209742, 0.019395763771566, 0.024622518776343, 0.017447209296531,
      0.013945068378627, 0.018070214187375]
- Output:
    clique_trees:
    - avg_size: [12.742857142857142, 12.161417322834646, 7.118421052631579, 33.188235294117646,
        6.231203007518797, 7.103070175438597, 11.868913857677903, 7.285077951002227,
        12.915966386554622, 11.992395437262358]
      avg_weight: [2.5491803278688523, 2.3280632411067192, 1.6395604395604395, 3.8214285714285716,
        1.5348399246704332, 1.6241758241758242, 2.5150375939849625, 1.7209821428571428,
        2.4219409282700424, 2.49618320610687]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 81, 4: 62, 5: 33, 6: 22, 7: 6, 8: 6, 9: 7, 11: 2, 12: 5, 13: 1, 14: 1,
          15: 3, 16: 2, 17: 2, 18: 1, 19: 1, 27: 1, 31: 1, 35: 1, 39: 1, 42: 1, 44: 1,
          68: 1, 77: 1, 140: 1, 1421: 1}
      - !!python/object/apply:collections.Counter
        - {3: 96, 4: 71, 5: 27, 6: 15, 7: 15, 8: 7, 9: 4, 10: 1, 11: 1, 12: 4, 13: 2,
          14: 2, 16: 1, 40: 1, 42: 1, 46: 1, 53: 1, 60: 1, 66: 1, 240: 1, 1409: 1}
      - !!python/object/apply:collections.Counter
        - {2: 182, 3: 127, 4: 69, 5: 29, 6: 14, 7: 7, 8: 3, 9: 3, 10: 5, 11: 1, 12: 3,
          13: 1, 14: 1, 15: 2, 18: 1, 19: 1, 22: 2, 28: 1, 56: 1, 63: 1, 85: 1, 1429: 1}
      - !!python/object/apply:collections.Counter
        - {4: 18, 5: 15, 6: 7, 7: 8, 8: 6, 9: 2, 10: 2, 11: 1, 12: 6, 14: 1, 15: 1,
          19: 1, 20: 2, 26: 1, 34: 1, 41: 1, 43: 1, 44: 1, 50: 1, 51: 1, 53: 1, 57: 1,
          61: 1, 105: 1, 107: 1, 118: 1, 119: 1, 1410: 1}
      - !!python/object/apply:collections.Counter
        - {2: 216, 3: 159, 4: 77, 5: 32, 6: 10, 7: 11, 8: 4, 9: 3, 10: 3, 11: 7, 12: 1,
          13: 1, 16: 2, 18: 1, 22: 1, 32: 2, 41: 1, 1433: 1}
      - !!python/object/apply:collections.Counter
        - {2: 182, 3: 129, 4: 57, 5: 34, 6: 21, 7: 6, 8: 5, 9: 2, 10: 3, 11: 2, 14: 1,
          15: 3, 16: 3, 17: 1, 18: 1, 21: 1, 25: 1, 29: 1, 81: 1, 85: 1, 1429: 1}
      - !!python/object/apply:collections.Counter
        - {3: 76, 4: 82, 5: 38, 6: 22, 7: 7, 8: 5, 9: 6, 10: 6, 11: 2, 12: 2, 13: 3,
          14: 1, 15: 1, 16: 2, 17: 4, 19: 1, 20: 1, 29: 1, 30: 1, 36: 1, 41: 1, 71: 1,
          81: 1, 124: 1, 1423: 1}
      - !!python/object/apply:collections.Counter
        - {2: 146, 3: 128, 4: 82, 5: 37, 6: 14, 7: 8, 8: 5, 9: 3, 10: 4, 11: 4, 12: 4,
          14: 2, 15: 2, 16: 3, 20: 1, 21: 1, 24: 1, 31: 1, 32: 1, 78: 1, 1431: 1}
      - !!python/object/apply:collections.Counter
        - {3: 72, 4: 58, 5: 40, 6: 18, 7: 8, 8: 8, 9: 6, 10: 5, 11: 2, 12: 5, 13: 4,
          16: 1, 18: 1, 20: 1, 21: 1, 24: 1, 27: 1, 35: 1, 69: 1, 70: 1, 112: 1, 128: 1,
          1420: 1}
      - !!python/object/apply:collections.Counter
        - {3: 90, 4: 61, 5: 30, 6: 21, 7: 15, 8: 5, 9: 7, 10: 2, 11: 5, 12: 6, 13: 2,
          14: 1, 15: 1, 18: 2, 19: 1, 20: 2, 21: 1, 24: 1, 27: 1, 28: 1, 30: 1, 32: 1,
          33: 1, 43: 1, 46: 1, 70: 1, 78: 1, 1427: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 138, 3: 84, 4: 17, 5: 4, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 182, 3: 61, 4: 9, 6: 1}
      - !!python/object/apply:collections.Counter
        - {1: 224, 2: 184, 3: 38, 4: 6, 5: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 34, 4: 34, 5: 13, 6: 3}
      - !!python/object/apply:collections.Counter
        - {1: 315, 2: 161, 3: 44, 4: 9, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 258, 2: 134, 3: 43, 4: 16, 5: 4}
      - !!python/object/apply:collections.Counter
        - {2: 163, 3: 73, 4: 26, 5: 4}
      - !!python/object/apply:collections.Counter
        - {1: 194, 2: 195, 3: 49, 4: 10}
      - !!python/object/apply:collections.Counter
        - {2: 163, 3: 55, 4: 14, 5: 3, 6: 2}
      - !!python/object/apply:collections.Counter
        - {2: 170, 3: 63, 4: 22, 5: 6, 7: 1}
      height: [6, 5, 5, 8, 7, 6, 5, 5, 5, 5]
      max_clique_edge_distribution: [0.9787289358065339, 0.9622627049669347, 0.9897840298708719,
        0.9636295554001263, 0.9953348589544224, 0.9897840298708719, 0.9814868888097731,
        0.9925575042416988, 0.9773514144331257, 0.987014435841942]
      max_size: [1421, 1409, 1429, 1410, 1433, 1429, 1423, 1431, 1420, 1427]
      max_weight: [6, 6, 6, 6, 5, 5, 5, 4, 6, 7]
      min_size: [3, 3, 2, 4, 2, 2, 3, 2, 3, 3]
      min_weight: [2, 2, 1, 3, 1, 1, 2, 1, 2, 2]
      num: [245, 254, 456, 85, 532, 456, 267, 449, 238, 263]
      num_edges: [244, 253, 455, 84, 531, 455, 266, 448, 237, 262]
      sum_size: [3122, 3089, 3246, 2821, 3315, 3239, 3169, 3271, 3074, 3154]
      sum_weight: [622, 589, 746, 321, 815, 739, 669, 771, 574, 654]
      width: [110, 109, 250, 26, 276, 237, 139, 251, 134, 126]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 1030837.5,
    n: 2500, seed: None}
  Stats:
    edges: [1030837, 1030837, 1030837, 1030837, 1030837, 1030837, 1030837, 1030837,
      1030837, 1030837]
    randoms: [6217, 6108, 6024, 6376, 6016, 5947, 6184, 6072, 6154, 6206]
    total: [0.039449693805897, 0.061162694398861, 0.041113202207588, 0.052270963773204,
      0.056117208214379, 0.048099049926076, 0.05309230611149, 0.049716473034471, 0.057698787205766,
      0.050872701837369]
  Times:
    t_expand_cliques: [0.022369459993016, 0.033055786076848, 0.02373733977253, 0.024995980338307,
      0.030371232399258, 0.022852160768716, 0.026216045806733, 0.029939737504997,
      0.038449472255117, 0.028913571640953]
    t_merge_cliques: [0.017080233812882, 0.028106908322014, 0.017375862435058, 0.027274983434897,
      0.025745975815121, 0.025246889157359, 0.026876260304757, 0.019776735529474,
      0.019249314950649, 0.021959130196415]
- Output:
    clique_trees:
    - avg_size: [14.949238578680204, 835.6666666666666, 13.861751152073733, 13.072961373390559,
        84.64516129032258, 15.584615384615384, 21.984251968503937, 12.777777777777779,
        13.012765957446808, 14.541062801932368]
      avg_weight: [2.270408163265306, 3.5, 2.3518518518518516, 2.353448275862069,
        4.133333333333334, 2.7783505154639174, 2.3174603174603177, 2.5, 2.3846153846153846,
        2.4757281553398056]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 77, 4: 60, 5: 23, 6: 8, 7: 5, 8: 3, 9: 2, 10: 2, 11: 1, 12: 1, 13: 3,
          14: 2, 17: 2, 18: 1, 19: 1, 29: 1, 31: 1, 59: 1, 76: 1, 97: 1, 1761: 1}
      - !!python/object/apply:collections.Counter
        - {84: 1, 944: 1, 1479: 1}
      - !!python/object/apply:collections.Counter
        - {3: 75, 4: 59, 5: 25, 6: 13, 7: 8, 8: 7, 9: 2, 10: 6, 11: 4, 12: 1, 14: 2,
          16: 1, 17: 1, 18: 1, 19: 2, 20: 2, 21: 2, 23: 2, 26: 1, 27: 1, 35: 1, 1765: 1}
      - !!python/object/apply:collections.Counter
        - {3: 83, 4: 59, 5: 31, 6: 19, 7: 6, 8: 7, 9: 4, 10: 5, 11: 1, 12: 2, 13: 1,
          14: 3, 15: 3, 16: 1, 18: 1, 20: 1, 26: 2, 31: 1, 32: 1, 39: 1, 1765: 1}
      - !!python/object/apply:collections.Counter
        - {5: 8, 6: 6, 7: 5, 8: 2, 9: 1, 10: 1, 12: 1, 13: 1, 14: 1, 15: 1, 24: 1,
          48: 1, 754: 1, 1598: 1}
      - !!python/object/apply:collections.Counter
        - {3: 39, 4: 49, 5: 33, 6: 23, 7: 14, 8: 11, 9: 3, 10: 1, 11: 4, 12: 1, 13: 2,
          14: 1, 17: 1, 18: 1, 19: 3, 21: 1, 23: 1, 24: 2, 26: 1, 30: 1, 42: 1, 58: 1,
          1764: 1}
      - !!python/object/apply:collections.Counter
        - {3: 51, 4: 18, 5: 20, 6: 10, 7: 6, 8: 1, 9: 6, 10: 1, 11: 3, 12: 3, 14: 1,
          16: 1, 17: 1, 18: 1, 19: 2, 400: 1, 1721: 1}
      - !!python/object/apply:collections.Counter
        - {3: 79, 4: 72, 5: 34, 6: 18, 7: 7, 8: 7, 9: 7, 10: 4, 11: 5, 12: 1, 13: 2,
          16: 1, 21: 1, 23: 1, 30: 1, 31: 1, 118: 1, 1762: 1}
      - !!python/object/apply:collections.Counter
        - {3: 78, 4: 61, 5: 39, 6: 22, 7: 6, 8: 5, 9: 4, 10: 6, 11: 2, 12: 1, 13: 1,
          14: 2, 15: 1, 16: 1, 18: 2, 21: 1, 53: 1, 96: 1, 1763: 1}
      - !!python/object/apply:collections.Counter
        - {3: 58, 4: 52, 5: 33, 6: 24, 7: 11, 8: 4, 9: 2, 10: 5, 11: 3, 12: 2, 14: 1,
          15: 1, 17: 1, 20: 2, 22: 2, 24: 1, 27: 1, 33: 1, 44: 1, 63: 1, 1764: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 152, 3: 39, 4: 3, 5: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 151, 3: 56, 4: 7, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 164, 3: 56, 4: 10, 5: 2}
      - !!python/object/apply:collections.Counter
        - {4: 26, 5: 4}
      - !!python/object/apply:collections.Counter
        - {2: 87, 3: 78, 4: 15, 5: 13, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 96, 3: 22, 4: 6, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 138, 3: 89, 4: 13, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 166, 3: 52, 4: 11, 5: 4, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 133, 3: 53, 4: 15, 5: 5}
      height: [4, 2, 3, 1, 2, 4, 2, 2, 1, 1]
      max_clique_edge_distribution: [0.9921920768307323, 0.7090124640460211, 0.9967058823529412,
        0.9967058823529412, 0.8169849229500513, 0.9955764705882353, 0.9476186604160518,
        0.9933195678271308, 0.9944476990796318, 0.9955764705882353]
      max_size: [1761, 1479, 1765, 1765, 1598, 1764, 1721, 1762, 1763, 1764]
      max_weight: [7, 4, 5, 5, 5, 6, 5, 5, 6, 5]
      min_size: [3, 84, 3, 3, 5, 3, 3, 3, 3, 3]
      min_weight: [2, 3, 2, 2, 4, 2, 2, 2, 2, 2]
      num: [197, 3, 217, 233, 31, 195, 127, 243, 235, 207]
      num_edges: [196, 2, 216, 232, 30, 194, 126, 242, 234, 206]
      sum_size: [2945, 2507, 3008, 3046, 2624, 3039, 2792, 3105, 3058, 3010]
      sum_weight: [445, 7, 508, 546, 124, 539, 292, 605, 558, 510]
      width: [133, 1, 139, 1, 16, 140, 114, 10, 3, 1]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 1561875.0,
    n: 2500, seed: None}
  Stats:
    edges: [1561875, 1541554, 1561875, 1561875, 1561844, 1561875, 1561873, 1561875,
      1561875, 1561875]
    randoms: [6021, 6198, 6120, 6096, 6282, 6339, 6003, 6201, 6089, 6191]
    total: [0.044842355866538, 0.042789341393367, 0.077195597250039, 0.045158125468748,
      0.054285744521568, 0.048045454436836, 0.062850440251101, 0.044149028231851,
      0.04181984337145, 0.040673172999753]
  Times:
    t_expand_cliques: [0.025756899736495, 0.023198995272331, 0.043591566869249, 0.02181848470873,
      0.02531106719543, 0.028636718508639, 0.043581325692961, 0.023718222910126, 0.022045497449777,
      0.021765571964576]
    t_merge_cliques: [0.019085456130044, 0.019590346121036, 0.033604030380791, 0.023339640760018,
      0.028974677326138, 0.019408735928197, 0.019269114558139, 0.020430805321725,
      0.019774345921673, 0.018907601035178]
- Output:
    clique_trees:
    - avg_size: [24.26086956521739, 52.23529411764706, 25.39090909090909, 23.2, 48.72727272727273,
        50.35849056603774, 37.136986301369866, 112.8695652173913, 47.80357142857143,
        31.681818181818183]
      avg_weight: [2.543859649122807, 3.28, 2.688073394495413, 2.3865546218487395,
        3.3333333333333335, 3.25, 2.9305555555555554, 4.363636363636363, 3.2181818181818183,
        3.310344827586207]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 50, 4: 29, 5: 14, 6: 8, 7: 3, 8: 3, 9: 2, 10: 1, 12: 1, 13: 1, 20: 1,
          127: 1, 2161: 1}
      - !!python/object/apply:collections.Counter
        - {4: 16, 5: 11, 6: 4, 7: 4, 8: 1, 11: 1, 12: 1, 13: 2, 15: 1, 16: 1, 21: 2,
          23: 1, 27: 1, 28: 1, 34: 1, 39: 1, 49: 1, 2163: 1}
      - !!python/object/apply:collections.Counter
        - {3: 35, 4: 30, 5: 22, 6: 8, 7: 6, 8: 1, 9: 1, 10: 1, 16: 1, 18: 1, 26: 1,
          58: 1, 60: 1, 2163: 1}
      - !!python/object/apply:collections.Counter
        - {3: 49, 4: 31, 5: 9, 6: 9, 7: 8, 8: 3, 10: 1, 11: 2, 12: 1, 13: 2, 16: 1,
          17: 1, 28: 1, 39: 1, 2164: 1}
      - !!python/object/apply:collections.Counter
        - {4: 17, 5: 10, 6: 6, 8: 3, 9: 3, 10: 3, 13: 2, 14: 1, 15: 1, 19: 1, 20: 1,
          21: 1, 24: 1, 30: 1, 32: 2, 49: 1, 2163: 1}
      - !!python/object/apply:collections.Counter
        - {4: 9, 5: 12, 6: 5, 7: 4, 8: 5, 9: 3, 10: 2, 11: 1, 13: 1, 14: 1, 16: 1,
          19: 2, 21: 1, 23: 1, 24: 2, 27: 1, 54: 1, 2163: 1}
      - !!python/object/apply:collections.Counter
        - {3: 17, 4: 15, 5: 16, 6: 6, 7: 3, 8: 3, 9: 5, 11: 1, 12: 1, 13: 1, 18: 1,
          26: 1, 32: 1, 121: 1, 2161: 1}
      - !!python/object/apply:collections.Counter
        - {5: 4, 6: 4, 7: 2, 8: 1, 10: 1, 13: 2, 15: 1, 16: 1, 18: 1, 21: 1, 24: 1,
          72: 1, 84: 2, 2160: 1}
      - !!python/object/apply:collections.Counter
        - {4: 18, 5: 11, 6: 6, 8: 4, 9: 2, 10: 5, 11: 1, 13: 3, 15: 2, 26: 2, 121: 1,
          2161: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1, 4: 36, 5: 18, 6: 10, 7: 6, 8: 3, 9: 1, 10: 4, 11: 2, 12: 1, 19: 1,
          20: 1, 37: 1, 38: 1, 65: 1, 2163: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 64, 3: 39, 4: 10, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 38, 4: 10, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 47, 3: 49, 4: 13}
      - !!python/object/apply:collections.Counter
        - {2: 83, 3: 27, 4: 8, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 36, 4: 18}
      - !!python/object/apply:collections.Counter
        - {3: 40, 4: 11, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 40, 4: 12, 5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 14, 5: 8}
      - !!python/object/apply:collections.Counter
        - {3: 43, 4: 12}
      - !!python/object/apply:collections.Counter
        - {2: 1, 3: 65, 4: 16, 5: 3, 6: 2}
      height: [3, 1, 3, 2, 1, 1, 3, 2, 2, 4]
      max_clique_edge_distribution: [0.9961874875150033, 0.9980510242367046, 0.9980327059960423,
        0.9990011550745164, 0.9982048387812883, 0.9983101076313712, 0.9961883379360682,
        0.9954749972142992, 0.9961904639950828, 0.9980327059960423]
      max_size: [2161, 2163, 2163, 2164, 2163, 2163, 2161, 2160, 2161, 2163]
      max_weight: [5, 5, 4, 5, 4, 5, 5, 5, 4, 6]
      min_size: [3, 4, 3, 3, 4, 4, 3, 5, 4, 3]
      min_weight: [2, 3, 2, 2, 3, 3, 2, 4, 3, 2]
      num: [115, 51, 110, 120, 55, 53, 73, 23, 56, 88]
      num_edges: [114, 50, 109, 119, 54, 52, 72, 22, 55, 87]
      sum_size: [2790, 2664, 2793, 2784, 2680, 2669, 2711, 2596, 2677, 2788]
      sum_weight: [290, 164, 293, 284, 180, 169, 211, 96, 177, 288]
      width: [105, 50, 90, 118, 54, 52, 63, 20, 49, 58]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 2342812.5,
    n: 2500, seed: None}
  Stats:
    edges: [2342812, 2342769, 2342812, 2342706, 2342408, 2342161, 2342810, 2342319,
      2342805, 2342812]
    randoms: [6096, 6088, 5973, 6028, 6290, 6173, 6056, 6263, 6123, 6266]
    total: [0.043224932758143, 0.059107973062976, 0.065475253733677, 0.059993152066789,
      0.072718837722077, 0.051126000264222, 0.042518632966825, 0.054296668442942,
      0.062947731425835, 0.051107566146904]
  Times:
    t_expand_cliques: [0.021392793147697, 0.021179435308367, 0.021413616872816, 0.029966364563345,
      0.043178847464849, 0.02712955873161, 0.021467553734599, 0.030149681618898, 0.035006388787141,
      0.027563784606215]
    t_merge_cliques: [0.021832139610446, 0.037928537754609, 0.044061636860861, 0.030026787503444,
      0.029539990257228, 0.023996441532613, 0.021051079232226, 0.024146986824044,
      0.027941342638694, 0.023543781540689]
- Output:
    clique_trees:
    - avg_size: [281.55555555555554, 420.1666666666667, 361.14285714285717, 254.0,
        316.25, 628.5, 629.25, 1253.0, 253.2, 504.0]
      avg_weight: [4.25, 4.2, 4.666666666666667, 4.444444444444445, 4.285714285714286,
        4.666666666666667, 5.666666666666667, 6.0, 3.5555555555555554, 5.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {5: 5, 6: 1, 8: 2, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 2, 8: 1, 9: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 6: 1, 7: 1, 9: 2, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {5: 4, 6: 3, 7: 1, 8: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {5: 3, 6: 3, 10: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {8: 1, 9: 1, 10: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 12: 2, 2486: 1}
      - !!python/object/apply:collections.Counter
        - {24: 1, 2482: 1}
      - !!python/object/apply:collections.Counter
        - {4: 4, 5: 2, 6: 2, 7: 1, 2487: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 8: 1, 9: 2, 2487: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {4: 6, 5: 2}
      - !!python/object/apply:collections.Counter
        - {4: 4, 5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 5: 4}
      - !!python/object/apply:collections.Counter
        - {4: 5, 5: 4}
      - !!python/object/apply:collections.Counter
        - {4: 5, 5: 2}
      - !!python/object/apply:collections.Counter
        - {4: 1, 5: 2}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 2}
      - !!python/object/apply:collections.Counter
        - {6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 4, 4: 5}
      - !!python/object/apply:collections.Counter
        - {5: 4}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.999978973968479, 0.9999773566180621, 0.9999754158044677,
        0.9999792974391902, 0.9999773566180621, 0.9999731515314625, 0.9999634182031021,
        0.9999152372285887, 0.9999828556308255, 0.9999737984655606]
      max_size: [2487, 2487, 2487, 2487, 2487, 2487, 2486, 2482, 2487, 2487]
      max_weight: [5, 5, 5, 5, 5, 5, 6, 6, 4, 5]
      min_size: [5, 5, 5, 5, 5, 8, 7, 24, 4, 7]
      min_weight: [4, 4, 4, 4, 4, 4, 5, 6, 3, 5]
      num: [9, 6, 7, 10, 8, 4, 4, 2, 10, 5]
      num_edges: [8, 5, 6, 9, 7, 3, 3, 1, 9, 4]
      sum_size: [2534, 2521, 2528, 2540, 2530, 2514, 2517, 2506, 2532, 2520]
      sum_weight: [34, 21, 28, 40, 30, 14, 17, 6, 32, 20]
      width: [8, 5, 6, 9, 7, 3, 3, 1, 9, 4]
    nodes: [2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 3092512.5,
    n: 2500, seed: None}
  Stats:
    edges: [3091406, 3091411, 3091417, 3091405, 3091411, 3091424, 3088968, 3079182,
      3091394, 3091422]
    randoms: [6073, 6019, 6248, 6160, 6193, 6147, 6067, 6231, 6147, 6251]
    total: [0.050589703999282, 0.053976460997676, 0.055036422743468, 0.044335076267746,
      0.067239125662988, 0.044361020581008, 0.046168929568359, 0.049301705394812,
      0.046007460355552, 0.064832790607885]
  Times:
    t_expand_cliques: [0.022902001159983, 0.026538642859801, 0.029609288883442, 0.024418377995672,
      0.039924201640568, 0.022063931567094, 0.021012504134875, 0.026522939722826,
      0.021874128433226, 0.033740579397962]
    t_merge_cliques: [0.027687702839298, 0.027437818137875, 0.025427133860026, 0.019916698272074,
      0.02731492402242, 0.022297089013914, 0.025156425433484, 0.022778765671986, 0.024133331922326,
      0.031092211209923]
- Output:
    clique_trees:
    - avg_size: [7.639588100686499, 5.266968325791855, 5.059035277177826, 8.090909090909092,
        5.180882352941176, 8.633637548891786, 4.922122674017919, 4.992376992376992,
        5.362934362934363, 4.977397260273973]
      avg_weight: [1.9209621993127148, 1.4973584905660378, 1.4603746397694524, 2.032766990291262,
        1.5055187637969094, 2.117493472584856, 1.477241379310345, 1.5284327323162274,
        1.5030911901081916, 1.5538039753255655]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 248, 3: 241, 4: 143, 5: 81, 6: 42, 7: 29, 8: 16, 9: 11, 10: 6, 11: 7,
          12: 4, 13: 5, 14: 2, 15: 2, 16: 3, 17: 1, 18: 1, 19: 4, 20: 3, 21: 1, 22: 1,
          23: 2, 24: 3, 25: 1, 29: 1, 30: 1, 31: 1, 33: 1, 36: 1, 39: 2, 40: 1, 43: 1,
          59: 1, 61: 1, 68: 1, 85: 1, 174: 1, 254: 1, 696: 1, 1369: 1}
      - !!python/object/apply:collections.Counter
        - {2: 495, 3: 380, 4: 210, 5: 87, 6: 51, 7: 24, 8: 16, 9: 10, 10: 11, 11: 1,
          12: 4, 13: 3, 14: 2, 15: 6, 16: 2, 17: 2, 18: 2, 19: 2, 20: 2, 22: 3, 24: 1,
          25: 1, 26: 2, 29: 1, 32: 1, 37: 1, 49: 1, 74: 1, 103: 1, 111: 1, 232: 1,
          1547: 1}
      - !!python/object/apply:collections.Counter
        - {2: 488, 3: 416, 4: 206, 5: 106, 6: 54, 7: 21, 8: 18, 9: 17, 10: 12, 11: 6,
          12: 4, 13: 7, 14: 6, 15: 2, 16: 2, 17: 1, 18: 2, 19: 2, 20: 3, 22: 2, 23: 1,
          24: 1, 25: 1, 26: 1, 27: 1, 30: 1, 33: 1, 34: 1, 37: 1, 38: 1, 45: 1, 47: 1,
          56: 1, 1570: 1}
      - !!python/object/apply:collections.Counter
        - {2: 206, 3: 218, 4: 151, 5: 77, 6: 58, 7: 21, 8: 14, 9: 4, 10: 12, 11: 7,
          12: 6, 13: 4, 14: 6, 15: 5, 16: 2, 17: 5, 18: 2, 19: 1, 20: 1, 22: 1, 23: 2,
          24: 1, 27: 1, 29: 1, 30: 1, 31: 2, 32: 2, 33: 2, 36: 1, 55: 1, 71: 1, 72: 1,
          92: 1, 101: 1, 104: 1, 115: 1, 141: 1, 182: 1, 517: 1, 1449: 1}
      - !!python/object/apply:collections.Counter
        - {2: 480, 3: 420, 4: 224, 5: 88, 6: 52, 7: 27, 8: 15, 9: 12, 10: 10, 11: 5,
          12: 4, 13: 7, 14: 2, 16: 1, 17: 2, 20: 2, 24: 1, 36: 1, 41: 1, 56: 1, 67: 1,
          81: 1, 123: 1, 409: 1, 1512: 1}
      - !!python/object/apply:collections.Counter
        - {2: 136, 3: 236, 4: 162, 5: 77, 6: 40, 7: 27, 8: 13, 9: 10, 10: 13, 11: 6,
          12: 3, 13: 7, 14: 2, 15: 3, 16: 6, 17: 1, 18: 1, 19: 1, 20: 2, 21: 1, 22: 1,
          23: 1, 25: 2, 28: 1, 29: 1, 32: 2, 34: 1, 41: 1, 58: 1, 59: 1, 62: 1, 95: 1,
          111: 1, 172: 1, 251: 1, 319: 1, 574: 1, 1387: 1}
      - !!python/object/apply:collections.Counter
        - {2: 497, 3: 437, 4: 263, 5: 93, 6: 57, 7: 19, 8: 15, 9: 15, 10: 14, 11: 6,
          12: 5, 13: 1, 14: 2, 15: 2, 16: 4, 17: 2, 18: 1, 19: 1, 20: 2, 21: 2, 22: 1,
          23: 2, 24: 1, 25: 1, 30: 1, 32: 1, 33: 2, 51: 1, 78: 1, 94: 1, 1568: 1}
      - !!python/object/apply:collections.Counter
        - {2: 478, 3: 404, 4: 241, 5: 133, 6: 57, 7: 41, 8: 15, 9: 18, 10: 14, 11: 8,
          12: 3, 13: 3, 14: 6, 15: 3, 16: 4, 18: 2, 19: 4, 21: 1, 22: 1, 23: 1, 24: 1,
          29: 1, 42: 1, 44: 1, 114: 1, 1569: 1}
      - !!python/object/apply:collections.Counter
        - {2: 484, 3: 373, 4: 215, 5: 76, 6: 52, 7: 29, 8: 13, 9: 13, 10: 5, 11: 3,
          12: 4, 13: 4, 14: 3, 15: 4, 16: 3, 17: 1, 19: 1, 20: 2, 21: 1, 27: 1, 29: 1,
          38: 1, 41: 1, 49: 1, 76: 1, 78: 1, 716: 1, 1398: 1}
      - !!python/object/apply:collections.Counter
        - {2: 462, 3: 458, 4: 252, 5: 104, 6: 53, 7: 39, 8: 18, 9: 7, 10: 14, 11: 9,
          12: 7, 13: 4, 14: 6, 15: 3, 16: 4, 17: 5, 18: 1, 19: 1, 20: 4, 21: 1, 23: 1,
          25: 1, 32: 1, 33: 1, 37: 1, 41: 1, 91: 1, 1570: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 302, 2: 396, 3: 129, 4: 34, 5: 12}
      - !!python/object/apply:collections.Counter
        - {1: 821, 2: 374, 3: 107, 4: 21, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 900, 2: 362, 3: 101, 4: 25}
      - !!python/object/apply:collections.Counter
        - {1: 236, 2: 403, 3: 126, 4: 42, 5: 15, 6: 2}
      - !!python/object/apply:collections.Counter
        - {1: 835, 2: 384, 3: 118, 4: 21, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 148, 2: 435, 3: 141, 4: 30, 5: 11, 6: 1}
      - !!python/object/apply:collections.Counter
        - {1: 926, 2: 383, 3: 120, 4: 15, 5: 6}
      - !!python/object/apply:collections.Counter
        - {1: 898, 2: 386, 3: 107, 4: 45, 5: 4, 6: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {1: 789, 2: 382, 3: 102, 4: 19, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 847, 2: 452, 3: 129, 4: 26, 5: 5}
      height: [2, 8, 8, 1, 5, 6, 3, 9, 8, 3]
      max_clique_edge_distribution: [0.7492666533306661, 0.9568561712342468, 0.9855291058211643,
        0.8394286857371475, 0.9140356071214243, 0.7691066213242649, 0.9830190038007601,
        0.9842736547309462, 0.7813586717343469, 0.9855291058211643]
      max_size: [1369, 1547, 1570, 1449, 1512, 1387, 1568, 1569, 1398, 1570]
      max_weight: [5, 5, 4, 6, 5, 6, 5, 7, 5, 5]
      min_size: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [874, 1326, 1389, 825, 1360, 767, 1451, 1443, 1295, 1460]
      num_edges: [873, 1325, 1388, 824, 1359, 766, 1450, 1442, 1294, 1459]
      sum_size: [6677, 6984, 7027, 6675, 7046, 6622, 7142, 7204, 6945, 7267]
      sum_weight: [1677, 1984, 2027, 1675, 2046, 1622, 2142, 2204, 1945, 2267]
      width: [2, 389, 419, 1, 12, 49, 4, 451, 367, 6]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 1249750.0,
    n: 5000, seed: None}
  Stats:
    edges: [1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750, 1249750,
      1249750, 1249750]
    randoms: [12347, 12149, 12110, 12434, 12232, 12428, 12232, 12279, 12132, 12420]
    total: [0.136216861687111, 0.085362593967059, 0.080759526598214, 0.113082385825393,
      0.084274298300203, 0.098544011967156, 0.102661988952502, 0.07675386117949, 0.089230686250982,
      0.089602099577688]
  Times:
    t_expand_cliques: [0.096290270438742, 0.045354073308388, 0.04450439704904, 0.049636591859426,
      0.04941094460855, 0.061267837142084, 0.053977143742761, 0.046085634667884, 0.05141480143554,
      0.044403350776332]
    t_merge_cliques: [0.039926591248369, 0.040008520658671, 0.036255129549174, 0.063445793965967,
      0.034863353691653, 0.037276174825072, 0.048684845209741, 0.030668226511606,
      0.037815884815442, 0.045198748801355]
- Output:
    clique_trees:
    - avg_size: [9.471111111111112, 13.107991360691145, 12.73045267489712, 12.595918367346938,
        12.377510040160642, 15.04325699745547, 11.060137457044673, 12.397205588822356,
        13.323210412147505, 12.359437751004016]
      avg_weight: [2.0667655786350148, 2.313852813852814, 2.4474226804123713, 2.3967280163599183,
        2.3420523138832996, 2.326530612244898, 2.4733218588640273, 2.422, 2.482608695652174,
        2.323943661971831]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 133, 3: 210, 4: 148, 5: 61, 6: 36, 7: 16, 8: 19, 9: 8, 10: 6, 11: 6,
          12: 6, 13: 5, 14: 2, 16: 2, 18: 2, 19: 1, 20: 2, 22: 1, 24: 1, 26: 1, 31: 1,
          32: 2, 42: 1, 54: 1, 86: 1, 119: 1, 314: 1, 2848: 1}
      - !!python/object/apply:collections.Counter
        - {3: 172, 4: 113, 5: 55, 6: 29, 7: 24, 8: 19, 9: 5, 10: 8, 11: 3, 12: 3,
          13: 5, 14: 3, 15: 3, 16: 2, 17: 2, 18: 2, 20: 1, 21: 1, 23: 1, 26: 1, 31: 1,
          32: 1, 33: 1, 46: 1, 66: 1, 87: 1, 91: 2, 103: 1, 376: 1, 2838: 1}
      - !!python/object/apply:collections.Counter
        - {3: 161, 4: 127, 5: 68, 6: 32, 7: 24, 8: 13, 9: 7, 10: 10, 11: 6, 12: 3,
          13: 1, 14: 5, 15: 2, 16: 2, 17: 3, 19: 2, 20: 2, 23: 3, 25: 3, 27: 1, 29: 2,
          30: 1, 31: 1, 35: 1, 46: 1, 52: 1, 95: 1, 161: 1, 331: 1, 2843: 1}
      - !!python/object/apply:collections.Counter
        - {3: 165, 4: 119, 5: 71, 6: 31, 7: 25, 8: 22, 9: 11, 10: 9, 11: 2, 12: 5,
          13: 3, 14: 2, 15: 3, 16: 2, 17: 1, 18: 2, 19: 2, 21: 1, 22: 1, 24: 1, 25: 1,
          26: 1, 31: 1, 35: 2, 37: 1, 41: 1, 51: 1, 55: 1, 76: 1, 501: 1, 2823: 1}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 166, 4: 132, 5: 57, 6: 35, 7: 24, 8: 14, 9: 11, 10: 4, 11: 6,
          12: 1, 13: 6, 14: 1, 15: 2, 16: 3, 17: 1, 18: 1, 19: 2, 23: 3, 24: 1, 25: 1,
          26: 2, 28: 1, 29: 1, 31: 1, 35: 1, 37: 1, 38: 2, 39: 1, 40: 2, 42: 1, 50: 1,
          54: 1, 55: 1, 63: 1, 66: 1, 74: 1, 100: 1, 2862: 1}
      - !!python/object/apply:collections.Counter
        - {3: 151, 4: 96, 5: 57, 6: 27, 7: 14, 8: 7, 9: 7, 10: 2, 11: 1, 12: 5, 13: 2,
          14: 4, 16: 3, 17: 2, 18: 1, 20: 2, 23: 1, 27: 1, 29: 1, 30: 1, 33: 1, 35: 1,
          64: 1, 73: 1, 103: 1, 126: 1, 807: 1, 2748: 1}
      - !!python/object/apply:collections.Counter
        - {3: 195, 4: 128, 5: 90, 6: 51, 7: 29, 8: 17, 9: 11, 10: 16, 11: 3, 12: 6,
          13: 2, 14: 6, 16: 2, 17: 2, 18: 3, 20: 1, 21: 3, 22: 1, 23: 2, 24: 1, 25: 2,
          26: 1, 27: 1, 32: 1, 33: 1, 60: 1, 61: 1, 65: 1, 72: 1, 91: 1, 96: 1, 2863: 1}
      - !!python/object/apply:collections.Counter
        - {3: 177, 4: 125, 5: 80, 6: 41, 7: 11, 8: 11, 9: 8, 10: 3, 11: 6, 12: 2,
          13: 5, 14: 2, 15: 2, 16: 6, 17: 3, 18: 1, 19: 1, 22: 1, 23: 1, 24: 1, 26: 4,
          28: 1, 30: 1, 33: 1, 41: 1, 57: 1, 68: 1, 69: 1, 84: 1, 458: 1, 2829: 1}
      - !!python/object/apply:collections.Counter
        - {3: 174, 4: 103, 5: 66, 6: 27, 7: 25, 8: 15, 9: 7, 10: 4, 11: 6, 12: 1,
          13: 5, 14: 4, 15: 1, 16: 1, 18: 2, 19: 1, 20: 2, 22: 2, 25: 1, 28: 2, 29: 1,
          31: 2, 33: 1, 36: 1, 44: 1, 76: 1, 131: 1, 185: 1, 197: 1, 232: 1, 2843: 1}
      - !!python/object/apply:collections.Counter
        - {3: 189, 4: 117, 5: 59, 6: 41, 7: 19, 8: 13, 9: 7, 10: 9, 11: 5, 12: 2,
          13: 2, 14: 1, 15: 3, 16: 4, 18: 1, 19: 1, 20: 1, 21: 1, 22: 2, 23: 2, 24: 4,
          25: 2, 27: 1, 28: 1, 37: 1, 38: 1, 39: 1, 45: 1, 51: 2, 70: 1, 73: 1, 90: 1,
          244: 1, 2854: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 157, 2: 359, 3: 122, 4: 28, 5: 8}
      - !!python/object/apply:collections.Counter
        - {2: 338, 3: 103, 4: 21}
      - !!python/object/apply:collections.Counter
        - {2: 321, 3: 120, 4: 36, 5: 7, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 338, 3: 122, 4: 21, 5: 4, 6: 2, 7: 2}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 348, 3: 119, 4: 17, 5: 6, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 283, 3: 93, 4: 13, 5: 3}
      - !!python/object/apply:collections.Counter
        - {2: 397, 3: 120, 4: 43, 5: 15, 6: 6}
      - !!python/object/apply:collections.Counter
        - {2: 328, 3: 137, 4: 31, 5: 4}
      - !!python/object/apply:collections.Counter
        - {2: 304, 3: 103, 4: 44, 5: 5, 6: 4}
      - !!python/object/apply:collections.Counter
        - {2: 374, 3: 94, 4: 22, 5: 5, 6: 2}
      height: [8, 2, 3, 6, 6, 2, 6, 7, 3, 2]
      max_clique_edge_distribution: [0.9830155121933477, 0.976123224644929, 0.9795663375099263,
        0.965830256960483, 0.9927054501809452, 0.9151837640255324, 0.9933994071541581,
        0.9699408972703631, 0.9795663375099263, 0.9871625234137736]
      max_size: [2848, 2838, 2843, 2823, 2862, 2748, 2863, 2829, 2843, 2854]
      max_weight: [5, 4, 6, 7, 7, 5, 6, 5, 6, 6]
      min_size: [2, 3, 3, 3, 2, 3, 3, 3, 3, 3]
      min_weight: [1, 2, 2, 2, 1, 2, 2, 2, 2, 2]
      num: [675, 463, 486, 490, 498, 393, 582, 501, 461, 498]
      num_edges: [674, 462, 485, 489, 497, 392, 581, 500, 460, 497]
      sum_size: [6393, 6069, 6187, 6172, 6164, 5912, 6437, 6211, 6142, 6155]
      sum_weight: [1393, 1069, 1187, 1172, 1164, 912, 1437, 1211, 1142, 1155]
      width: [331, 3, 3, 191, 226, 7, 265, 219, 13, 3]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 4124175.0,
    n: 5000, seed: None}
  Stats:
    edges: [4124175, 4124175, 4124175, 4124175, 4124175, 4124175, 4124175, 4124175,
      4124175, 4124175]
    randoms: [12166, 12140, 12169, 12155, 12185, 11961, 12551, 12209, 12183, 12201]
    total: [0.138825972032713, 0.111840813886762, 0.118574045923483, 0.116980177520549,
      0.139576650254613, 0.112031299765716, 0.089904214278179, 0.111340020366286,
      0.094810420465147, 0.146387032486036]
  Times:
    t_expand_cliques: [0.065058437858761, 0.058989858163122, 0.073596165157402, 0.067489010364412,
      0.071803959307028, 0.064432019242488, 0.047517692485468, 0.06208917948037, 0.054015718840112,
      0.070951893439878]
    t_merge_cliques: [0.073767534173951, 0.05285095572364, 0.044977880766081, 0.049491167156138,
      0.067772690947585, 0.047599280523229, 0.042386521792711, 0.049250840885916,
      0.040794701625035, 0.075435139046158]
- Output:
    clique_trees:
    - avg_size: [12.437751004016064, 14.648058252427184, 13.863636363636363, 13.912240184757506,
        13.873563218390805, 13.27608695652174, 10.031045751633988, 19.72013651877133,
        13.649321266968325, 13.297180043383948]
      avg_weight: [2.402414486921529, 2.5182481751824817, 2.5056947608200457, 2.3703703703703702,
        2.3847926267281108, 2.411764705882353, 1.8641571194762685, 2.664383561643836,
        2.3424036281179137, 2.4565217391304346]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 167, 4: 122, 5: 83, 6: 50, 7: 18, 8: 9, 9: 6, 10: 7, 11: 2, 12: 5, 13: 6,
          14: 2, 15: 3, 16: 2, 17: 3, 18: 2, 21: 1, 22: 1, 24: 2, 25: 1, 28: 1, 29: 2,
          35: 1, 46: 1, 3533: 1}
      - !!python/object/apply:collections.Counter
        - {3: 147, 4: 110, 5: 54, 6: 38, 7: 20, 8: 6, 9: 3, 10: 6, 11: 2, 12: 5, 13: 2,
          15: 1, 17: 2, 18: 1, 19: 2, 29: 2, 30: 1, 31: 1, 32: 2, 33: 1, 36: 1, 64: 1,
          97: 1, 106: 1, 121: 1, 3528: 1}
      - !!python/object/apply:collections.Counter
        - {3: 166, 4: 132, 5: 53, 6: 27, 7: 14, 8: 11, 9: 6, 10: 5, 11: 2, 12: 3,
          13: 4, 16: 2, 17: 1, 21: 2, 23: 2, 24: 1, 33: 1, 35: 1, 37: 1, 40: 1, 41: 1,
          43: 1, 97: 1, 236: 1, 3524: 1}
      - !!python/object/apply:collections.Counter
        - {3: 141, 4: 122, 5: 52, 6: 37, 7: 14, 8: 13, 9: 9, 10: 5, 11: 5, 12: 8,
          13: 3, 14: 3, 15: 4, 16: 2, 18: 1, 19: 2, 20: 1, 21: 2, 25: 1, 26: 2, 29: 1,
          47: 1, 52: 1, 54: 1, 65: 1, 3532: 1}
      - !!python/object/apply:collections.Counter
        - {3: 153, 4: 121, 5: 77, 6: 18, 7: 13, 8: 7, 9: 8, 10: 4, 11: 2, 12: 6, 13: 3,
          14: 5, 15: 2, 16: 2, 17: 1, 21: 1, 22: 1, 24: 1, 25: 1, 28: 1, 30: 2, 43: 1,
          61: 1, 62: 2, 120: 1, 3530: 1}
      - !!python/object/apply:collections.Counter
        - {3: 183, 4: 124, 5: 73, 6: 22, 7: 13, 8: 11, 9: 9, 10: 5, 11: 4, 12: 2,
          13: 1, 14: 1, 15: 1, 16: 1, 20: 1, 21: 1, 26: 1, 40: 1, 46: 1, 73: 1, 94: 1,
          104: 1, 179: 1, 3526: 1}
      - !!python/object/apply:collections.Counter
        - {2: 140, 3: 217, 4: 108, 5: 55, 6: 31, 7: 13, 8: 8, 9: 7, 10: 3, 11: 8,
          12: 2, 13: 3, 14: 2, 15: 2, 16: 2, 17: 2, 18: 1, 21: 1, 25: 1, 28: 1, 29: 1,
          33: 2, 72: 1, 3533: 1}
      - !!python/object/apply:collections.Counter
        - {3: 105, 4: 80, 5: 46, 6: 18, 7: 8, 8: 6, 9: 6, 10: 5, 11: 4, 12: 1, 13: 2,
          15: 1, 16: 4, 18: 1, 20: 1, 34: 1, 56: 1, 66: 1, 800: 1, 3442: 1}
      - !!python/object/apply:collections.Counter
        - {3: 154, 4: 126, 5: 66, 6: 24, 7: 10, 8: 8, 9: 15, 10: 5, 11: 6, 12: 4,
          13: 1, 15: 5, 16: 1, 17: 2, 19: 1, 20: 1, 22: 4, 23: 1, 24: 1, 27: 1, 29: 1,
          34: 1, 55: 1, 67: 1, 105: 1, 3531: 1}
      - !!python/object/apply:collections.Counter
        - {3: 153, 4: 121, 5: 71, 6: 42, 7: 14, 8: 10, 9: 10, 10: 6, 11: 5, 12: 6,
          14: 2, 15: 2, 16: 1, 17: 1, 18: 2, 19: 1, 20: 3, 21: 2, 23: 1, 24: 1, 27: 2,
          34: 1, 38: 1, 54: 1, 119: 1, 3531: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 351, 3: 111, 4: 20, 5: 11, 6: 4}
      - !!python/object/apply:collections.Counter
        - {2: 238, 3: 138, 4: 30, 5: 5}
      - !!python/object/apply:collections.Counter
        - {2: 251, 3: 157, 4: 28, 5: 3}
      - !!python/object/apply:collections.Counter
        - {2: 296, 3: 117, 4: 15, 5: 3, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 296, 3: 110, 4: 27, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 309, 3: 114, 4: 34, 5: 1, 6: 1}
      - !!python/object/apply:collections.Counter
        - {1: 177, 2: 352, 3: 71, 4: 10, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 140, 3: 117, 4: 28, 5: 7}
      - !!python/object/apply:collections.Counter
        - {2: 321, 3: 94, 4: 21, 5: 5}
      - !!python/object/apply:collections.Counter
        - {2: 294, 3: 125, 4: 38, 5: 3}
      height: [5, 2, 5, 5, 5, 1, 5, 5, 5, 1]
      max_clique_edge_distribution: [0.998484176835367, 0.9956596119223845, 0.9934028405681137,
        0.9979189437887578, 0.9967889577915583, 0.9945309061812363, 0.998484176835367,
        0.947703300660132, 0.9973538707741548, 0.9973538707741548]
      max_size: [3533, 3528, 3524, 3532, 3530, 3526, 3533, 3442, 3531, 3531]
      max_weight: [6, 5, 5, 6, 5, 6, 5, 5, 5, 5]
      min_size: [3, 3, 3, 3, 3, 3, 2, 3, 3, 3]
      min_weight: [2, 2, 2, 2, 2, 2, 1, 2, 2, 2]
      num: [498, 412, 440, 433, 435, 460, 612, 293, 442, 461]
      num_edges: [497, 411, 439, 432, 434, 459, 611, 292, 441, 460]
      sum_size: [6194, 6035, 6100, 6024, 6035, 6107, 6139, 5778, 6033, 6130]
      sum_weight: [1194, 1035, 1100, 1024, 1035, 1107, 1139, 778, 1033, 1130]
      width: [299, 12, 265, 262, 239, 1, 424, 173, 254, 1]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 6248750.0,
    n: 5000, seed: None}
  Stats:
    edges: [6248750, 6248750, 6248750, 6248750, 6248750, 6248750, 6248750, 6248750,
      6248750, 6248750]
    randoms: [12203, 12261, 12398, 12181, 12126, 12268, 11930, 12231, 12002, 12323]
    total: [0.15526203585709, 0.091324324056764, 0.103452949134466, 0.131985890390055,
      0.096818032390109, 0.105965792422962, 0.101080409961115, 0.087799993923568,
      0.085669146510609, 0.128560216921768]
  Times:
    t_expand_cliques: [0.089110864488415, 0.050245941848553, 0.059714592071758, 0.087459986870812,
      0.049226262062826, 0.053244899638178, 0.053036662386994, 0.046907318378713,
      0.043356702559715, 0.054771176277612]
    t_merge_cliques: [0.066151171368675, 0.041078382208211, 0.043738357062708, 0.044525903519244,
      0.047591770327283, 0.052720892784784, 0.048043747574122, 0.040892675544855,
      0.042312443950895, 0.073789040644156]
- Output:
    clique_trees:
    - avg_size: [69.1842105263158, 47.08771929824562, 56.96774193548387, 49.07339449541284,
        25.271493212669682, 37.786206896551725, 57.69565217391305, 90.62068965517241,
        39.595588235294116, 56.712765957446805]
      avg_weight: [3.44, 3.256637168141593, 3.239130434782609, 3.2314814814814814,
        2.659090909090909, 3.326388888888889, 3.3846153846153846, 4.491228070175438,
        2.8518518518518516, 3.5591397849462365]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 26, 5: 18, 6: 6, 7: 5, 8: 5, 9: 7, 10: 4, 15: 1, 24: 1, 53: 1, 452: 1,
          4306: 1}
      - !!python/object/apply:collections.Counter
        - {4: 44, 5: 24, 6: 12, 7: 3, 8: 2, 9: 4, 10: 2, 11: 2, 12: 2, 13: 2, 14: 1,
          15: 2, 16: 3, 18: 1, 20: 2, 28: 1, 31: 1, 39: 1, 40: 1, 50: 1, 55: 1, 115: 1,
          4327: 1}
      - !!python/object/apply:collections.Counter
        - {4: 28, 5: 15, 6: 11, 7: 6, 8: 9, 9: 3, 10: 2, 11: 4, 12: 1, 15: 2, 16: 1,
          20: 1, 22: 1, 23: 1, 25: 1, 26: 1, 31: 1, 39: 1, 40: 1, 109: 1, 121: 1,
          4326: 1}
      - !!python/object/apply:collections.Counter
        - {4: 45, 5: 22, 6: 12, 7: 5, 8: 7, 9: 3, 10: 1, 11: 3, 12: 2, 15: 1, 16: 3,
          17: 1, 71: 1, 147: 1, 181: 1, 4323: 1}
      - !!python/object/apply:collections.Counter
        - {3: 79, 4: 55, 5: 33, 6: 15, 7: 11, 8: 4, 9: 4, 10: 2, 11: 3, 12: 4, 13: 1,
          17: 1, 19: 2, 20: 1, 21: 1, 22: 1, 28: 1, 31: 1, 109: 1, 4328: 1}
      - !!python/object/apply:collections.Counter
        - {4: 48, 5: 38, 6: 15, 7: 8, 8: 8, 9: 5, 10: 3, 11: 4, 13: 2, 15: 1, 17: 1,
          18: 2, 22: 1, 24: 1, 30: 1, 33: 2, 34: 1, 39: 1, 60: 1, 71: 1, 4328: 1}
      - !!python/object/apply:collections.Counter
        - {4: 34, 5: 17, 6: 10, 7: 12, 8: 3, 9: 2, 10: 4, 11: 1, 12: 3, 13: 1, 15: 1,
          21: 1, 32: 1, 424: 1, 4309: 1}
      - !!python/object/apply:collections.Counter
        - {5: 14, 6: 10, 7: 10, 8: 2, 9: 5, 10: 2, 11: 2, 12: 1, 13: 1, 14: 2, 15: 1,
          20: 1, 21: 1, 24: 1, 36: 1, 43: 1, 54: 1, 374: 1, 4313: 1}
      - !!python/object/apply:collections.Counter
        - {3: 40, 4: 31, 5: 24, 6: 10, 7: 3, 8: 1, 9: 1, 10: 2, 11: 1, 12: 1, 14: 3,
          15: 2, 18: 2, 19: 1, 21: 1, 22: 2, 23: 2, 25: 1, 29: 1, 30: 1, 35: 1, 39: 1,
          42: 1, 43: 1, 71: 1, 4328: 1}
      - !!python/object/apply:collections.Counter
        - {4: 33, 5: 16, 6: 6, 7: 10, 8: 8, 9: 6, 10: 1, 11: 2, 14: 2, 33: 1, 34: 1,
          36: 1, 47: 1, 50: 1, 54: 1, 55: 1, 82: 1, 118: 1, 4326: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {3: 46, 4: 25, 5: 4}
      - !!python/object/apply:collections.Counter
        - {3: 91, 4: 16, 5: 5, 6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 71, 4: 20, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 89, 4: 14, 5: 4, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 106, 3: 88, 4: 22, 5: 3, 6: 1}
      - !!python/object/apply:collections.Counter
        - {3: 105, 4: 31, 5: 8}
      - !!python/object/apply:collections.Counter
        - {3: 67, 4: 15, 5: 7, 6: 2}
      - !!python/object/apply:collections.Counter
        - {4: 40, 5: 7, 6: 9, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 51, 3: 58, 4: 21, 5: 5}
      - !!python/object/apply:collections.Counter
        - {3: 54, 4: 29, 5: 7, 6: 3}
      height: [1, 2, 1, 3, 4, 3, 3, 3, 2, 3]
      max_clique_edge_distribution: [0.9888553710742148, 0.9985251450290058, 0.9981048227316287,
        0.9966796559311862, 0.9989867840234714, 0.9989867840234714, 0.9902338867773555,
        0.9920739305588747, 0.9989867840234714, 0.9980637192039709]
      max_size: [4306, 4327, 4326, 4323, 4328, 4328, 4309, 4313, 4328, 4326]
      max_weight: [5, 6, 5, 6, 6, 5, 6, 7, 5, 6]
      min_size: [4, 4, 4, 4, 3, 4, 4, 5, 3, 4]
      min_weight: [3, 3, 3, 3, 2, 3, 3, 4, 2, 3]
      num: [76, 114, 93, 109, 221, 145, 92, 58, 136, 94]
      num_edges: [75, 113, 92, 108, 220, 144, 91, 57, 135, 93]
      sum_size: [5258, 5368, 5298, 5349, 5585, 5479, 5308, 5256, 5385, 5331]
      sum_weight: [258, 368, 298, 349, 585, 479, 308, 256, 385, 331]
      width: [1, 3, 92, 80, 176, 1, 82, 48, 132, 81]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 9373125.0,
    n: 5000, seed: None}
  Stats:
    edges: [9373125, 9373125, 9372738, 9373125, 9373125, 9373125, 9373125, 9373120,
      9373125, 9373124]
    randoms: [11954, 12226, 12235, 12264, 12151, 12271, 12190, 12521, 12275, 12246]
    total: [0.107630324942281, 0.134065531921575, 0.123277818192493, 0.113993850515012,
      0.106604159078239, 0.109101640602304, 0.115345003039923, 0.123863954848701,
      0.113121302295287, 0.100989263492151]
  Times:
    t_expand_cliques: [0.061121046948625, 0.050271203416729, 0.067844379181601, 0.062695457116611,
      0.055999776059613, 0.06317098906891, 0.057777985635727, 0.055248073720083, 0.051103811048932,
      0.05133560300558]
    t_merge_cliques: [0.046509277993657, 0.083794328504846, 0.055433439010892, 0.051298393398401,
      0.050604383018626, 0.045930651533395, 0.057567017404196, 0.068615881128618,
      0.062017491246355, 0.049653660486571]
- Output:
    clique_trees:
    - avg_size: [420.8333333333333, 2502.5, 388.61538461538464, 458.1818181818182,
        281.77777777777777, 630.0, 1670.6666666666667, 267.3157894736842, 1670.0,
        388.46153846153845]
      avg_weight: [4.545454545454546, 5.0, 4.333333333333333, 4.0, 4.235294117647059,
        5.714285714285714, 6.0, 4.388888888888889, 5.0, 4.166666666666667]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {5: 5, 6: 1, 7: 2, 8: 1, 11: 1, 12: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {33: 1, 4972: 1}
      - !!python/object/apply:collections.Counter
        - {5: 6, 6: 3, 7: 1, 10: 1, 13: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {5: 4, 6: 3, 8: 1, 9: 1, 11: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {5: 10, 6: 5, 7: 1, 11: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 7: 3, 8: 1, 10: 1, 21: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {12: 1, 28: 1, 4972: 1}
      - !!python/object/apply:collections.Counter
        - {5: 8, 6: 6, 7: 3, 8: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 30: 1, 4974: 1}
      - !!python/object/apply:collections.Counter
        - {5: 8, 6: 3, 18: 1, 4974: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {4: 8, 5: 1, 6: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 8, 5: 4}
      - !!python/object/apply:collections.Counter
        - {4: 10}
      - !!python/object/apply:collections.Counter
        - {4: 13, 5: 4}
      - !!python/object/apply:collections.Counter
        - {5: 3, 6: 3, 7: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {4: 11, 5: 7}
      - !!python/object/apply:collections.Counter
        - {5: 2}
      - !!python/object/apply:collections.Counter
        - {4: 10, 5: 2}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.999986901695527, 0.9999580852704196, 0.9999869825482058,
        0.9999883570457458, 0.9999892464285206, 0.9999785739396364, 0.9999665812154549,
        0.9999898932533504, 0.9999652336488798, 0.9999839910077976]
      max_size: [4974, 4972, 4974, 4974, 4974, 4974, 4972, 4974, 4974, 4974]
      max_weight: [7, 5, 5, 4, 5, 7, 7, 5, 5, 5]
      min_size: [5, 33, 5, 5, 5, 6, 12, 5, 6, 5]
      min_weight: [4, 5, 4, 4, 4, 5, 5, 4, 5, 4]
      num: [12, 2, 13, 11, 18, 8, 3, 19, 3, 13]
      num_edges: [11, 1, 12, 10, 17, 7, 2, 18, 2, 12]
      sum_size: [5050, 5005, 5052, 5040, 5072, 5040, 5012, 5079, 5010, 5050]
      sum_weight: [50, 5, 52, 40, 72, 40, 12, 79, 10, 50]
      width: [11, 1, 12, 10, 17, 7, 2, 18, 2, 12]
    nodes: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 12372525.0,
    n: 5000, seed: None}
  Stats:
    edges: [12368013, 12358424, 12368012, 12367995, 12367984, 12368116, 12358319,
      12367976, 12368281, 12368049]
    randoms: [12211, 12192, 12287, 11985, 12283, 12787, 12488, 12255, 12351, 12245]
    total: [0.109614040789239, 0.120089057269, 0.108486487279947, 0.106341984965271,
      0.089823650358049, 0.097366959439137, 0.094090465772112, 0.12519018717798, 0.097240992970798,
      0.102572890718797]
  Times:
    t_expand_cliques: [0.049413675588893, 0.066364870580548, 0.063812086704528, 0.051573881040545,
      0.044627291164494, 0.04926415441509, 0.047505744446466, 0.057267975056591, 0.050477392432658,
      0.049301705394813]
    t_merge_cliques: [0.060200365200346, 0.053724186688452, 0.044674400575419, 0.054768103924726,
      0.045196359193556, 0.048102805024048, 0.046584721325646, 0.067922212121388,
      0.04676360053814, 0.053271185323984]
- Output:
    clique_trees:
    - avg_size: [4.848684210526316, 2.9051724137931036, 4.744827586206896, 5.0134228187919465,
        5.675438596491228, 5.805084745762712, 5.2105263157894735, 5.519083969465649,
        5.411764705882353, 4.668571428571428]
      avg_weight: [1.5695364238410596, 0.7532467532467533, 1.3055555555555556, 1.6689189189189189,
        1.3008849557522124, 1.5811965811965811, 1.4621212121212122, 1.7153846153846153,
        1.2203389830508475, 1.8218390804597702]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 46, 3: 46, 4: 19, 5: 15, 6: 6, 7: 9, 8: 3, 9: 1, 10: 1, 11: 2, 12: 1,
          13: 1, 16: 1, 151: 1}
      - !!python/object/apply:collections.Counter
        - {1: 85, 2: 71, 3: 44, 4: 19, 5: 4, 6: 3, 7: 2, 8: 1, 11: 1, 13: 1, 155: 1}
      - !!python/object/apply:collections.Counter
        - {2: 55, 3: 42, 4: 22, 5: 6, 6: 3, 7: 5, 8: 3, 10: 3, 11: 1, 12: 1, 14: 1,
          16: 1, 24: 1, 150: 1}
      - !!python/object/apply:collections.Counter
        - {2: 50, 3: 38, 4: 20, 5: 17, 6: 9, 7: 5, 9: 3, 10: 1, 13: 1, 14: 1, 16: 2,
          36: 1, 147: 1}
      - !!python/object/apply:collections.Counter
        - {2: 44, 3: 32, 4: 11, 5: 4, 6: 6, 7: 2, 8: 3, 9: 5, 10: 1, 16: 1, 17: 1,
          21: 1, 23: 1, 53: 1, 140: 1}
      - !!python/object/apply:collections.Counter
        - {2: 34, 3: 42, 4: 15, 5: 4, 6: 4, 7: 2, 9: 2, 10: 4, 12: 4, 17: 2, 19: 1,
          20: 1, 22: 1, 27: 1, 145: 1}
      - !!python/object/apply:collections.Counter
        - {2: 47, 3: 42, 4: 16, 5: 8, 6: 6, 7: 2, 8: 2, 9: 2, 10: 3, 12: 1, 13: 1,
          19: 1, 84: 1, 127: 1}
      - !!python/object/apply:collections.Counter
        - {2: 35, 3: 42, 4: 19, 5: 16, 6: 3, 7: 3, 8: 4, 9: 2, 13: 1, 15: 1, 16: 1,
          18: 1, 28: 1, 52: 1, 140: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 42, 4: 15, 5: 5, 6: 3, 7: 2, 8: 4, 15: 1, 17: 2, 34: 1, 70: 1,
          132: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 61, 4: 31, 5: 15, 6: 11, 7: 3, 8: 4, 10: 3, 11: 1, 12: 2, 16: 1,
          151: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 91, 2: 38, 3: 18, 4: 4}
      - !!python/object/apply:collections.Counter
        - {0: 110, 1: 79, 2: 32, 3: 9, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 106, 2: 32, 3: 6}
      - !!python/object/apply:collections.Counter
        - {1: 83, 2: 40, 3: 16, 4: 9}
      - !!python/object/apply:collections.Counter
        - {1: 83, 2: 27, 3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 65, 2: 39, 3: 11, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 79, 2: 47, 3: 4, 4: 2}
      - !!python/object/apply:collections.Counter
        - {1: 69, 2: 42, 3: 9, 4: 8, 5: 1, 6: 1}
      - !!python/object/apply:collections.Counter
        - {1: 96, 2: 19, 3: 2, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 69, 2: 75, 3: 25, 4: 3, 5: 1, 6: 1}
      height: [4, 3, 7, 2, 1, 3, 6, 2, 1, 3]
      max_clique_edge_distribution: [0.9078156312625251, 0.9567134268537074, 0.8957915831663327,
        0.8602004008016032, 0.7799599198396794, 0.83687374749499, 0.6413627254509018,
        0.7799599198396794, 0.6930661322645291, 0.9078156312625251]
      max_size: [151, 155, 150, 147, 140, 145, 127, 140, 132, 151]
      max_weight: [4, 4, 3, 4, 4, 5, 4, 6, 4, 6]
      min_size: [2, 1, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [152, 232, 145, 149, 114, 118, 133, 131, 119, 175]
      num_edges: [151, 231, 144, 148, 113, 117, 132, 130, 118, 174]
      sum_size: [737, 674, 688, 747, 647, 685, 693, 723, 644, 817]
      sum_weight: [237, 174, 188, 247, 147, 185, 193, 223, 144, 317]
      width: [3, 8, 43, 3, 5, 3, 45, 1, 1, 2]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 12475.0,
    n: 500, seed: None}
  Stats:
    edges: [12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475]
    randoms: [1243, 1172, 1190, 1256, 1151, 1193, 1219, 1231, 1149, 1334]
    total: [0.008070046914829, 0.005179645593853, 0.007574715355039, 0.006453306551519,
      0.006541722040138, 0.010318326482555, 0.006175087929033, 0.007511220062055,
      0.006826768113483, 0.006580297137489]
  Times:
    t_expand_cliques: [0.004487000704252, 0.003684433855827, 0.003899157185329, 0.004025465026212,
      0.004017613457725, 0.00666086105762, 0.003784456010905, 0.004279446198151, 0.004356596392853,
      0.004133338749778]
    t_merge_cliques: [0.003583046210577, 0.001495211738027, 0.003675558169711, 0.002427841525307,
      0.002524108582413, 0.003657465424935, 0.002390631918128, 0.003231773863904,
      0.00247017172063, 0.002446958387711]
- Output:
    clique_trees:
    - avg_size: [4.917808219178082, 5.062068965517241, 5.529411764705882, 5.1521739130434785,
        4.884353741496598, 5.2, 4.98639455782313, 5.568181818181818, 6.578431372549019,
        4.535031847133758]
      avg_weight: [1.5034482758620689, 1.625, 1.3389830508474576, 1.5401459854014599,
        1.4931506849315068, 1.3643410852713178, 1.595890410958904, 1.7938931297709924,
        1.693069306930693, 1.358974358974359]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 50, 3: 42, 4: 22, 5: 14, 6: 6, 7: 4, 8: 2, 9: 1, 11: 2, 35: 1, 45: 1,
          143: 1}
      - !!python/object/apply:collections.Counter
        - {2: 35, 3: 44, 4: 39, 5: 12, 6: 4, 7: 4, 9: 1, 11: 1, 12: 1, 13: 1, 14: 1,
          68: 1, 137: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 34, 4: 20, 5: 5, 6: 2, 7: 5, 8: 1, 9: 2, 10: 2, 12: 1, 14: 1,
          27: 1, 29: 1, 53: 1, 139: 1}
      - !!python/object/apply:collections.Counter
        - {2: 43, 3: 38, 4: 23, 5: 15, 6: 6, 7: 1, 8: 3, 9: 1, 10: 1, 11: 1, 13: 1,
          14: 1, 20: 1, 21: 1, 32: 1, 147: 1}
      - !!python/object/apply:collections.Counter
        - {2: 49, 3: 37, 4: 17, 5: 17, 6: 12, 7: 6, 8: 2, 9: 2, 11: 1, 15: 2, 16: 1,
          151: 1}
      - !!python/object/apply:collections.Counter
        - {1: 5, 2: 41, 3: 39, 4: 20, 5: 6, 6: 4, 7: 4, 9: 3, 10: 1, 13: 1, 15: 1,
          16: 1, 17: 1, 27: 1, 41: 1, 144: 1}
      - !!python/object/apply:collections.Counter
        - {2: 49, 3: 33, 4: 31, 5: 20, 6: 5, 7: 3, 8: 2, 10: 1, 18: 1, 108: 1, 109: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 32, 4: 24, 5: 11, 6: 7, 7: 5, 8: 4, 9: 1, 15: 1, 20: 1, 21: 1,
          42: 1, 52: 1, 136: 1}
      - !!python/object/apply:collections.Counter
        - {2: 26, 3: 36, 4: 16, 5: 5, 6: 6, 7: 2, 8: 1, 13: 1, 14: 3, 15: 1, 19: 1,
          39: 1, 42: 1, 73: 1, 121: 1}
      - !!python/object/apply:collections.Counter
        - {2: 62, 3: 49, 4: 22, 5: 8, 6: 5, 7: 2, 8: 3, 11: 2, 18: 1, 28: 1, 29: 1,
          148: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 85, 2: 48, 3: 11, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 73, 2: 53, 3: 17, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 85, 2: 26, 3: 7}
      - !!python/object/apply:collections.Counter
        - {1: 82, 2: 39, 3: 14, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 96, 2: 33, 3: 14, 4: 1, 5: 2}
      - !!python/object/apply:collections.Counter
        - {0: 5, 1: 83, 2: 32, 3: 8, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 82, 2: 46, 3: 13, 4: 5}
      - !!python/object/apply:collections.Counter
        - {1: 59, 2: 49, 3: 16, 4: 5, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 42, 2: 49, 3: 9, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 113, 2: 33, 3: 7, 4: 3}
      height: [2, 4, 2, 2, 2, 7, 4, 1, 1, 5]
      max_clique_edge_distribution: [0.8138677354709419, 0.7467735470941884, 0.768817635270541,
        0.8602004008016032, 0.9078156312625251, 0.8253306613226453, 0.4718236472945892,
        0.7358717434869739, 0.5819639278557114, 0.8719839679358717]
      max_size: [143, 137, 139, 147, 151, 144, 109, 136, 121, 148]
      max_weight: [4, 4, 3, 5, 5, 5, 4, 5, 4, 4]
      min_size: [2, 2, 2, 2, 2, 1, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 1, 0, 1, 1, 1, 1]
      num: [146, 145, 119, 138, 147, 130, 147, 132, 102, 157]
      num_edges: [145, 144, 118, 137, 146, 129, 146, 131, 101, 156]
      sum_size: [718, 734, 658, 711, 718, 676, 733, 735, 671, 712]
      sum_weight: [218, 234, 158, 211, 218, 176, 233, 235, 171, 212]
      width: [1, 22, 4, 2, 2, 37, 41, 2, 7, 57]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.1, edges_bound: 12475.0,
    n: 500, seed: None}
  Stats:
    edges: [12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475, 12475]
    randoms: [1235, 1253, 1169, 1216, 1222, 1175, 1255, 1253, 1208, 1223]
    total: [0.005945685580185, 0.005977091854134, 0.007662106726029, 0.006389128513449,
      0.007918136133225, 0.009514394143959, 0.007944421819031, 0.011098362743147,
      0.00726235947826, 0.006598048509721]
  Times:
    t_expand_cliques: [0.003761584050529, 0.003799476402794, 0.005228461867492, 0.003630155621501,
      0.005438405981393, 0.004262377571005, 0.005056410105856, 0.005052313635341,
      0.004744736974162, 0.004080767378167]
    t_merge_cliques: [0.002184101529656, 0.002177615451341, 0.002433644858537, 0.002758972891948,
      0.002479730151832, 0.005252016572954, 0.002888011713175, 0.006046049107806,
      0.002517622504097, 0.002517281131554]
- Output:
    clique_trees:
    - avg_size: [12.918367346938776, 19.96551724137931, 5.64957264957265, 7.726190476190476,
        5.964285714285714, 7.795180722891566, 7.182795698924731, 7.425287356321839,
        6.88421052631579, 6.366336633663367]
      avg_weight: [2.7708333333333335, 2.8214285714285716, 1.3879310344827587, 1.7951807228915662,
        1.5135135135135136, 1.7926829268292683, 1.826086956521739, 1.697674418604651,
        1.6382978723404256, 1.43]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 14, 5: 12, 6: 5, 7: 3, 8: 2, 10: 1, 11: 1, 177: 1, 225: 1}
      - !!python/object/apply:collections.Counter
        - {3: 8, 4: 6, 5: 4, 6: 1, 7: 2, 10: 2, 12: 1, 22: 1, 30: 1, 34: 1, 115: 1,
          258: 1}
      - !!python/object/apply:collections.Counter
        - {2: 49, 3: 42, 4: 14, 5: 6, 7: 3, 11: 1, 35: 1, 284: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 24, 4: 23, 5: 5, 6: 4, 7: 2, 8: 2, 9: 2, 31: 1, 37: 1, 282: 1}
      - !!python/object/apply:collections.Counter
        - {2: 42, 3: 35, 4: 16, 5: 8, 6: 5, 7: 1, 10: 2, 14: 1, 19: 1, 285: 1}
      - !!python/object/apply:collections.Counter
        - {2: 26, 3: 27, 4: 15, 5: 7, 6: 1, 7: 1, 10: 1, 12: 1, 14: 1, 15: 1, 81: 1,
          274: 1}
      - !!python/object/apply:collections.Counter
        - {2: 25, 3: 24, 4: 22, 5: 7, 6: 5, 7: 1, 8: 1, 9: 2, 12: 3, 17: 1, 23: 1,
          284: 1}
      - !!python/object/apply:collections.Counter
        - {2: 31, 3: 22, 4: 17, 5: 7, 6: 3, 7: 1, 8: 1, 10: 1, 13: 1, 26: 1, 53: 1,
          280: 1}
      - !!python/object/apply:collections.Counter
        - {2: 26, 3: 28, 4: 15, 5: 10, 6: 3, 7: 5, 8: 1, 9: 3, 10: 1, 12: 1, 13: 1,
          285: 1}
      - !!python/object/apply:collections.Counter
        - {2: 36, 3: 28, 4: 17, 5: 11, 6: 2, 7: 1, 8: 1, 9: 1, 10: 1, 16: 1, 17: 1,
          285: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 16, 4: 9, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 9, 4: 7}
      - !!python/object/apply:collections.Counter
        - {1: 77, 2: 33, 3: 6}
      - !!python/object/apply:collections.Counter
        - {1: 40, 2: 25, 3: 13, 4: 5}
      - !!python/object/apply:collections.Counter
        - {1: 69, 2: 29, 3: 11, 4: 2}
      - !!python/object/apply:collections.Counter
        - {1: 35, 2: 30, 3: 16, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 37, 2: 38, 3: 13, 4: 4}
      - !!python/object/apply:collections.Counter
        - {1: 45, 2: 25, 3: 13, 4: 3}
      - !!python/object/apply:collections.Counter
        - {1: 49, 2: 33, 3: 9, 4: 3}
      - !!python/object/apply:collections.Counter
        - {1: 64, 2: 30, 3: 5, 4: 1}
      height: [5, 4, 3, 4, 5, 4, 5, 4, 4, 5]
      max_clique_edge_distribution: [0.612140792382248, 0.8053295115019311, 0.9761702334394053,
        0.9624456482133747, 0.9830689630043481, 0.908518959360653, 0.9761702334394053,
        0.9488182281924843, 0.9830689630043481, 0.9830689630043481]
      max_size: [225, 258, 284, 282, 285, 274, 284, 280, 285, 285]
      max_weight: [5, 4, 3, 4, 4, 4, 4, 4, 4, 4]
      min_size: [3, 3, 2, 2, 2, 2, 2, 2, 2, 2]
      min_weight: [2, 2, 1, 1, 1, 1, 1, 1, 1, 1]
      num: [49, 29, 117, 84, 112, 83, 93, 87, 95, 101]
      num_edges: [48, 28, 116, 83, 111, 82, 92, 86, 94, 100]
      sum_size: [633, 579, 661, 649, 668, 647, 668, 646, 654, 643]
      sum_weight: [133, 79, 161, 149, 168, 147, 168, 146, 154, 143]
      width: [26, 9, 72, 55, 68, 45, 56, 44, 67, 68]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 41167.5,
    n: 500, seed: None}
  Stats:
    edges: [41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167]
    randoms: [1266, 1234, 1198, 1200, 1203, 1231, 1223, 1181, 1216, 1187]
    total: [0.011566043126959, 0.007450455749413, 0.007183843793386, 0.006248141653219,
      0.010595520987413, 0.006954782817081, 0.007123420853288, 0.006412683218911,
      0.006998819875119, 0.007243583988399]
  Times:
    t_expand_cliques: [0.00510351951678, 0.004143579926066, 0.003759535815271, 0.003700478365344,
      0.005222658534262, 0.00412309757349, 0.004195809925134, 0.003713791894519, 0.003947632086425,
      0.004015565222467]
    t_merge_cliques: [0.006462523610179, 0.003306875823348, 0.003424307978115, 0.002547663287875,
      0.005372862453151, 0.002831685243591, 0.002927610928154, 0.002698891324392,
      0.003051187788694, 0.003228018765931]
- Output:
    clique_trees:
    - avg_size: [6.363636363636363, 11.788461538461538, 6.574257425742574, 6.56, 31.0,
        11.648148148148149, 7.2272727272727275, 9.761904761904763, 8.916666666666666,
        6.017699115044247]
      avg_weight: [1.3265306122448979, 2.215686274509804, 1.64, 1.5757575757575757,
        3.411764705882353, 2.4339622641509435, 1.5632183908045978, 1.8548387096774193,
        2.0, 1.6071428571428572]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {2: 47, 3: 28, 4: 12, 5: 5, 6: 1, 7: 2, 9: 1, 23: 1, 45: 1, 282: 1}
      - !!python/object/apply:collections.Counter
        - {2: 5, 3: 16, 4: 9, 5: 8, 6: 2, 7: 1, 8: 2, 9: 1, 10: 3, 15: 1, 16: 1, 20: 1,
          81: 1, 273: 1}
      - !!python/object/apply:collections.Counter
        - {2: 31, 3: 37, 4: 12, 5: 8, 6: 4, 7: 1, 8: 1, 9: 3, 10: 1, 14: 1, 29: 1,
          284: 1}
      - !!python/object/apply:collections.Counter
        - {2: 33, 3: 26, 4: 17, 5: 9, 6: 4, 7: 5, 8: 2, 10: 1, 12: 1, 17: 1, 285: 1}
      - !!python/object/apply:collections.Counter
        - {4: 4, 5: 4, 6: 2, 7: 1, 9: 1, 11: 1, 14: 1, 40: 1, 45: 1, 142: 1, 242: 1}
      - !!python/object/apply:collections.Counter
        - {3: 27, 4: 10, 5: 4, 6: 2, 7: 1, 8: 1, 9: 2, 10: 1, 12: 1, 14: 1, 22: 1,
          24: 1, 92: 1, 269: 1}
      - !!python/object/apply:collections.Counter
        - {2: 24, 3: 30, 4: 18, 5: 7, 7: 2, 11: 1, 13: 1, 14: 1, 16: 1, 19: 1, 20: 1,
          284: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 27, 4: 11, 5: 4, 8: 2, 12: 1, 14: 1, 27: 1, 39: 1, 60: 1, 276: 1}
      - !!python/object/apply:collections.Counter
        - {2: 11, 3: 23, 4: 18, 5: 10, 6: 2, 7: 2, 10: 1, 12: 2, 14: 1, 81: 1, 274: 1}
      - !!python/object/apply:collections.Counter
        - {2: 38, 3: 34, 4: 21, 5: 10, 6: 3, 7: 2, 10: 2, 12: 1, 19: 1, 285: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {1: 75, 2: 16, 3: 5, 4: 2}
      - !!python/object/apply:collections.Counter
        - {1: 6, 2: 30, 3: 13, 4: 2}
      - !!python/object/apply:collections.Counter
        - {1: 43, 2: 51, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {1: 58, 2: 26, 3: 14, 4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 7}
      - !!python/object/apply:collections.Counter
        - {2: 37, 3: 9, 4: 7}
      - !!python/object/apply:collections.Counter
        - {1: 47, 2: 31, 3: 9}
      - !!python/object/apply:collections.Counter
        - {1: 14, 2: 43, 3: 5}
      - !!python/object/apply:collections.Counter
        - {1: 22, 2: 34, 3: 10, 4: 3, 5: 2}
      - !!python/object/apply:collections.Counter
        - {1: 59, 2: 38, 3: 15}
      height: [4, 2, 3, 4, 4, 4, 4, 4, 3, 4]
      max_clique_edge_distribution: [0.9624456482133747, 0.9018874341098453, 0.9761702334394053,
        0.9830689630043481, 0.7083586367721719, 0.8756042461194646, 0.9761702334394053,
        0.9218548837661233, 0.908518959360653, 0.9830689630043481]
      max_size: [282, 273, 284, 285, 242, 269, 284, 276, 274, 285]
      max_weight: [4, 4, 4, 4, 4, 4, 3, 3, 5, 3]
      min_size: [2, 2, 2, 2, 4, 3, 2, 2, 2, 2]
      min_weight: [1, 1, 1, 1, 3, 2, 1, 1, 1, 1]
      num: [99, 52, 101, 100, 18, 54, 88, 63, 72, 113]
      num_edges: [98, 51, 100, 99, 17, 53, 87, 62, 71, 112]
      sum_size: [630, 613, 664, 656, 558, 629, 636, 615, 642, 680]
      sum_weight: [130, 113, 164, 156, 58, 129, 136, 115, 142, 180]
      width: [56, 27, 58, 68, 8, 22, 54, 29, 44, 78]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.33, edges_bound: 41167.5,
    n: 500, seed: None}
  Stats:
    edges: [41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167, 41167]
    randoms: [1151, 1204, 1222, 1200, 1244, 1245, 1185, 1203, 1226, 1230]
    total: [0.01076996235685, 0.011004143921299, 0.014344474253853, 0.026174739729039,
      0.008402885144184, 0.018180136146198, 0.009345756107752, 0.010384552755883,
      0.007743694763789, 0.012410598798164]
  Times:
    t_expand_cliques: [0.007697950843037, 0.003795379932279, 0.007746425744132, 0.020756816100221,
      0.005203200299316, 0.013626226423532, 0.006091793028558, 0.005922130874723,
      0.004995987165758, 0.007133320657033]
    t_merge_cliques: [0.003072011513813, 0.00720876398902, 0.006598048509721, 0.005417923628817,
      0.003199684844868, 0.004553909722665, 0.003253963079194, 0.004462421881161,
      0.002747707598031, 0.005277278141131]
- Output:
    clique_trees:
    - avg_size: [12.196078431372548, 9.938461538461539, 16.52777777777778, 19.066666666666666,
        86.5, 14.65, 17.142857142857142, 40.92307692307692, 14.585365853658537, 9.619047619047619]
      avg_weight: [2.44, 2.28125, 2.7142857142857144, 2.4827586206896552, 3.8, 2.2051282051282053,
        2.9411764705882355, 2.6666666666666665, 2.45, 1.7096774193548387]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 14, 4: 17, 5: 8, 6: 1, 7: 4, 9: 1, 10: 1, 11: 1, 13: 1, 15: 1, 29: 1,
          351: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 19, 4: 7, 5: 5, 6: 4, 7: 3, 8: 1, 9: 1, 10: 1, 13: 1, 15: 1,
          22: 1, 25: 1, 351: 1}
      - !!python/object/apply:collections.Counter
        - {3: 4, 4: 8, 5: 6, 6: 2, 7: 2, 8: 2, 9: 6, 11: 1, 12: 2, 14: 1, 25: 1, 351: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 5, 5: 3, 6: 4, 7: 2, 9: 2, 11: 1, 24: 1, 71: 1, 345: 1}
      - !!python/object/apply:collections.Counter
        - {6: 1, 7: 2, 8: 1, 198: 1, 293: 1}
      - !!python/object/apply:collections.Counter
        - {3: 18, 4: 6, 5: 6, 6: 1, 7: 1, 8: 2, 10: 1, 11: 1, 19: 1, 28: 1, 31: 1,
          350: 1}
      - !!python/object/apply:collections.Counter
        - {3: 6, 4: 6, 5: 5, 6: 6, 7: 1, 8: 2, 9: 1, 10: 2, 12: 1, 13: 1, 15: 1, 21: 1,
          34: 1, 350: 1}
      - !!python/object/apply:collections.Counter
        - {3: 4, 4: 4, 6: 2, 9: 1, 177: 1, 306: 1}
      - !!python/object/apply:collections.Counter
        - {3: 13, 4: 10, 5: 6, 6: 4, 7: 2, 11: 1, 14: 2, 15: 1, 48: 1, 349: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 20, 4: 8, 5: 9, 6: 4, 7: 1, 9: 1, 12: 1, 15: 1, 18: 1, 352: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 32, 3: 14, 4: 4}
      - !!python/object/apply:collections.Counter
        - {1: 21, 2: 26, 3: 7, 4: 4, 5: 3, 6: 1, 7: 1, 8: 1}
      - !!python/object/apply:collections.Counter
        - {2: 17, 3: 13, 4: 3, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 9, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 1, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 32, 3: 6, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 9, 4: 4, 5: 5}
      - !!python/object/apply:collections.Counter
        - {2: 6, 3: 4, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 27, 3: 9, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 30, 2: 20, 3: 12}
      height: [3, 5, 1, 4, 2, 1, 3, 2, 3, 1]
      max_clique_edge_distribution: [0.9847695390781563, 0.9847853272196748, 0.9848011158674427,
        0.9515867797751728, 0.6862377079423135, 0.9791583166332666, 0.9791583166332666,
        0.7488806509075153, 0.973563126252505, 0.9903967935871744]
      max_size: [351, 351, 351, 345, 293, 350, 350, 306, 349, 352]
      max_weight: [4, 8, 5, 5, 5, 4, 5, 4, 5, 3]
      min_size: [3, 2, 3, 3, 6, 3, 3, 3, 3, 2]
      min_weight: [2, 1, 2, 2, 2, 2, 2, 2, 2, 1]
      num: [51, 65, 36, 30, 6, 40, 35, 13, 41, 63]
      num_edges: [50, 64, 35, 29, 5, 39, 34, 12, 40, 62]
      sum_size: [622, 646, 595, 572, 519, 586, 600, 532, 598, 606]
      sum_weight: [122, 146, 95, 72, 19, 86, 100, 32, 98, 106]
      width: [35, 48, 35, 19, 4, 2, 26, 7, 20, 1]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 62375.0,
    n: 500, seed: None}
  Stats:
    edges: [62375, 62374, 62373, 62359, 62337, 62375, 62375, 62313, 62375, 62375]
    randoms: [1249, 1257, 1254, 1189, 1237, 1181, 1269, 1166, 1196, 1171]
    total: [0.007733453587501, 0.015195857375917, 0.008114083972866, 0.011609738812454,
      0.01488725659711, 0.007389691436772, 0.00937579689153, 0.023664627420886, 0.025020217788855,
      0.013607792306214]
  Times:
    t_expand_cliques: [0.003958897380341, 0.004954339715521, 0.003854778754748, 0.008396399065868,
      0.01043780687258, 0.004149724631838, 0.004444329136385, 0.010503350400823, 0.020597395122674,
      0.009232079050957]
    t_merge_cliques: [0.00377455620716, 0.010241517660396, 0.004259305218118, 0.003213339746585,
      0.004449449724529, 0.003239966804934, 0.004931467755144, 0.013161277020063,
      0.004422822666181, 0.004375713255257]
- Output:
    clique_trees:
    - avg_size: [18.09375, 12.020408163265307, 15.333333333333334, 14.536585365853659,
        8.181818181818182, 19.033333333333335, 17.545454545454547, 23.956521739130434,
        16.714285714285715, 21.26923076923077]
      avg_weight: [2.5483870967741935, 1.8541666666666667, 2.5789473684210527, 2.4,
        1.7105263157894737, 2.4482758620689653, 2.46875, 2.3181818181818183, 2.5,
        2.12]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 11, 4: 5, 5: 6, 6: 2, 7: 1, 9: 1, 10: 1, 13: 1, 19: 1, 30: 1, 48: 1,
          348: 1}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 12, 4: 11, 5: 4, 6: 2, 7: 1, 9: 1, 12: 1, 15: 1, 16: 1, 17: 1,
          26: 1, 351: 1}
      - !!python/object/apply:collections.Counter
        - {3: 12, 4: 6, 5: 8, 6: 3, 7: 1, 8: 2, 10: 1, 13: 1, 14: 1, 17: 2, 36: 1,
          350: 1}
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 12, 5: 5, 7: 2, 8: 3, 9: 2, 11: 1, 12: 5, 18: 1, 351: 1}
      - !!python/object/apply:collections.Counter
        - {2: 24, 3: 23, 4: 19, 5: 2, 6: 4, 7: 2, 15: 1, 22: 1, 352: 1}
      - !!python/object/apply:collections.Counter
        - {3: 5, 4: 8, 5: 8, 6: 2, 7: 1, 8: 1, 10: 1, 20: 1, 31: 1, 48: 1, 348: 1}
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 2, 5: 8, 6: 4, 7: 2, 9: 1, 12: 1, 13: 1, 14: 1, 15: 1, 17: 1,
          36: 1, 350: 1}
      - !!python/object/apply:collections.Counter
        - {3: 7, 4: 3, 5: 4, 6: 2, 7: 2, 8: 1, 9: 1, 11: 1, 108: 1, 336: 1}
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 5, 5: 4, 6: 2, 7: 5, 9: 1, 11: 2, 12: 2, 14: 1, 15: 1, 16: 1,
          20: 1, 351: 1}
      - !!python/object/apply:collections.Counter
        - {3: 8, 4: 4, 5: 3, 6: 6, 7: 1, 14: 1, 25: 1, 71: 1, 345: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 5, 4: 6}
      - !!python/object/apply:collections.Counter
        - {1: 15, 2: 25, 3: 8}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 12, 4: 2, 5: 2}
      - !!python/object/apply:collections.Counter
        - {2: 28, 3: 9, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {1: 33, 2: 33, 3: 9, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 13}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 11, 4: 2}
      - !!python/object/apply:collections.Counter
        - {2: 16, 3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 26, 3: 2, 4: 3, 5: 3}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 3}
      height: [3, 3, 4, 1, 2, 2, 4, 2, 2, 3]
      max_clique_edge_distribution: [0.9679994869657229, 0.984864275521493, 0.9791583166332666,
        0.9870165346359648, 0.9903967935871744, 0.9680150064931942, 0.9791740148138648,
        0.9035013083752067, 0.9849906191369606, 0.951357937602206]
      max_size: [348, 351, 350, 351, 352, 348, 350, 336, 351, 345]
      max_weight: [4, 3, 5, 5, 4, 3, 4, 4, 5, 3]
      min_size: [3, 2, 3, 3, 2, 3, 3, 3, 3, 3]
      min_weight: [2, 1, 2, 2, 1, 2, 2, 2, 2, 2]
      num: [32, 49, 39, 41, 77, 30, 33, 23, 35, 26]
      num_edges: [31, 48, 38, 40, 76, 29, 32, 22, 34, 25]
      sum_size: [579, 589, 598, 596, 630, 571, 579, 551, 585, 553]
      sum_weight: [79, 89, 98, 96, 130, 71, 79, 51, 85, 53]
      width: [21, 39, 19, 40, 3, 21, 24, 19, 33, 14]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.5, edges_bound: 62375.0,
    n: 500, seed: None}
  Stats:
    edges: [62374, 62369, 62375, 62233, 62375, 62373, 62374, 62291, 62361, 62374]
    randoms: [1185, 1174, 1247, 1235, 1201, 1218, 1208, 1185, 1266, 1173]
    total: [0.007260311243002, 0.006796385957163, 0.008341438086457, 0.010114527074427,
      0.007111472814285, 0.008050588679881, 0.011218525878258, 0.007872392212473,
      0.007790804174713, 0.008975025526132]
  Times:
    t_expand_cliques: [0.003795721304821, 0.003704233463317, 0.004595557172903, 0.006834278309428,
      0.003801866010594, 0.004136069730121, 0.003751342874241, 0.004735861288046,
      0.003951045811854, 0.004334407177563]
    t_merge_cliques: [0.003464589938181, 0.003092152493846, 0.003745880913554, 0.003280248764999,
      0.003309606803691, 0.00391451894976, 0.007467183004017, 0.003136530924427, 0.003839758362859,
      0.004640618348569]
- Output:
    clique_trees:
    - avg_size: [32.588235294117645, 31.352941176470587, 20.035714285714285, 18.741935483870968,
        24.90909090909091, 19.655172413793103, 24.782608695652176, 74.14285714285714,
        44.5, 20.85185185185185]
      avg_weight: [3.375, 2.0625, 2.259259259259259, 2.7, 2.2857142857142856, 2.5,
        3.1818181818181817, 3.1666666666666665, 3.090909090909091, 2.423076923076923]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 1, 5: 5, 6: 1, 7: 1, 9: 1, 10: 1, 11: 1, 13: 1, 15: 1, 16: 1,
          432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 4, 4: 5, 5: 3, 6: 1, 7: 1, 9: 1, 33: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {3: 11, 4: 7, 5: 2, 6: 5, 11: 1, 17: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 9, 5: 5, 7: 1, 8: 3, 10: 3, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 7, 4: 7, 6: 3, 7: 1, 8: 1, 15: 1, 19: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 12, 4: 6, 5: 1, 6: 4, 7: 1, 8: 1, 9: 1, 10: 1, 15: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {4: 8, 5: 4, 6: 2, 7: 1, 8: 2, 9: 2, 10: 1, 11: 1, 12: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 8: 2, 19: 1, 46: 1, 430: 1}
      - !!python/object/apply:collections.Counter
        - {4: 4, 5: 1, 7: 1, 8: 1, 9: 1, 13: 1, 20: 1, 25: 1, 431: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 7, 5: 4, 6: 1, 8: 1, 10: 1, 14: 1, 15: 1, 432: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {2: 3, 3: 6, 4: 6, 6: 1}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 7}
      - !!python/object/apply:collections.Counter
        - {2: 12, 3: 15, 4: 3}
      - !!python/object/apply:collections.Counter
        - {2: 15, 3: 6}
      - !!python/object/apply:collections.Counter
        - {2: 18, 3: 7, 4: 2, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 18, 4: 4}
      - !!python/object/apply:collections.Counter
        - {3: 5, 4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 17, 3: 7, 4: 2}
      height: [4, 1, 1, 1, 1, 1, 1, 2, 1, 1]
      max_clique_edge_distribution: [0.9950299804405682, 0.9929917808806352, 0.9965744626188233,
        0.9968305636457084, 0.9957217421066142, 0.9966171369845416, 0.9962012177504789,
        0.9865972103371555, 0.9930237044022461, 0.9962971682969115]
      max_size: [432, 431, 432, 432, 432, 432, 432, 430, 431, 432]
      max_weight: [6, 3, 3, 4, 3, 5, 4, 4, 4, 4]
      min_size: [3, 3, 3, 3, 3, 3, 4, 4, 4, 3]
      min_weight: [2, 2, 2, 2, 2, 2, 3, 3, 3, 2]
      num: [17, 17, 28, 31, 22, 29, 23, 7, 12, 27]
      num_edges: [16, 16, 27, 30, 21, 28, 22, 6, 11, 26]
      sum_size: [554, 533, 561, 581, 548, 570, 570, 519, 534, 563]
      sum_weight: [54, 33, 61, 81, 48, 70, 70, 19, 34, 63]
      width: [8, 16, 27, 30, 21, 28, 22, 4, 11, 26]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 93562.5,
    n: 500, seed: None}
  Stats:
    edges: [93561, 93319, 93416, 93392, 93496, 93412, 93451, 93488, 93316, 93442]
    randoms: [1254, 1166, 1193, 1222, 1185, 1236, 1288, 1178, 1267, 1223]
    total: [0.00818440671671, 0.02008055709268, 0.013119629569826, 0.018027883992051,
      0.021076340800403, 0.008041371621223, 0.012727733890544, 0.008149586717331,
      0.008198744363513, 0.011026333136589]
  Times:
    t_expand_cliques: [0.004143921298608, 0.014457468565563, 0.009937354724647, 0.003812448559425,
      0.016340138139813, 0.004236774630285, 0.005956268129016, 0.004372299529828,
      0.003890964244298, 0.006419852042312]
    t_merge_cliques: [0.004040485418101, 0.005623088527117, 0.003182274845179, 0.014215435432627,
      0.004736202660589, 0.003804596990938, 0.006771465761529, 0.003777287187503,
      0.004307780119214, 0.004606481094277]
- Output:
    clique_trees:
    - avg_size: [48.27272727272727, 19.379310344827587, 252.0, 26.428571428571427,
        251.5, 16.333333333333332, 22.076923076923077, 19.379310344827587, 18.966666666666665,
        21.423076923076923]
      avg_weight: [3.1, 2.2142857142857144, 4.0, 2.75, 3.0, 2.5142857142857142, 2.96,
        2.2142857142857144, 2.3793103448275863, 2.28]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {4: 5, 6: 1, 9: 1, 13: 1, 14: 1, 39: 1, 430: 1}
      - !!python/object/apply:collections.Counter
        - {3: 12, 4: 7, 5: 2, 6: 2, 7: 1, 8: 2, 9: 1, 12: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {220: 1, 284: 1}
      - !!python/object/apply:collections.Counter
        - {3: 2, 4: 10, 5: 2, 6: 2, 7: 1, 12: 1, 15: 1, 21: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {77: 1, 426: 1}
      - !!python/object/apply:collections.Counter
        - {3: 12, 4: 9, 5: 5, 6: 6, 7: 1, 8: 2, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 5, 5: 3, 6: 2, 8: 1, 10: 1, 11: 1, 13: 3, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 8, 5: 4, 6: 1, 7: 1, 8: 3, 11: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 10, 4: 11, 5: 3, 6: 1, 8: 1, 10: 1, 11: 1, 13: 1, 432: 1}
      - !!python/object/apply:collections.Counter
        - {3: 11, 4: 5, 5: 2, 6: 2, 7: 1, 8: 3, 19: 1, 432: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {3: 9, 4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 6}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {2: 8, 3: 10, 4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 9, 4: 3, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 13, 3: 6, 4: 3, 5: 1, 6: 1, 7: 1}
      - !!python/object/apply:collections.Counter
        - {2: 22, 3: 6}
      - !!python/object/apply:collections.Counter
        - {2: 20, 3: 8, 5: 1}
      - !!python/object/apply:collections.Counter
        - {2: 19, 3: 5, 4: 1}
      height: [1, 1, 1, 2, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9897202579592888, 0.99714019472382, 0.6252683989419636,
        0.9950406156477127, 0.9687205718688469, 0.997535520648051, 0.9958921694480103,
        0.9972897406506765, 0.996862585529345, 0.9962651827278078]
      max_size: [430, 432, 284, 432, 426, 432, 432, 432, 432, 432]
      max_weight: [4, 3, 4, 5, 3, 5, 7, 3, 5, 4]
      min_size: [4, 3, 220, 3, 77, 3, 3, 3, 3, 3]
      min_weight: [3, 2, 4, 2, 3, 2, 2, 2, 2, 2]
      num: [11, 29, 2, 21, 2, 36, 26, 29, 30, 26]
      num_edges: [10, 28, 1, 20, 1, 35, 25, 28, 29, 25]
      sum_size: [531, 562, 504, 555, 503, 588, 574, 562, 569, 557]
      sum_weight: [31, 62, 4, 55, 3, 88, 74, 62, 69, 57]
      width: [10, 28, 1, 19, 1, 35, 25, 28, 29, 25]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.75, edges_bound: 93562.5,
    n: 500, seed: None}
  Stats:
    edges: [93193, 93363, 64270, 93560, 93448, 93326, 93480, 93349, 93389, 93445]
    randoms: [1232, 1216, 1241, 1225, 1196, 1250, 1240, 1174, 1192, 1221]
    total: [0.007716384960355, 0.015913422461153, 0.008029764954763, 0.0212019658962,
      0.01253963761939, 0.019421366712285, 0.033290650386383, 0.019782197490161, 0.007839620448352,
      0.015002299144077]
  Times:
    t_expand_cliques: [0.004071891692051, 0.012542027227191, 0.004338503648078, 0.011050570587137,
      0.008715582393506, 0.014017439357728, 0.02659565207447, 0.00801542730796, 0.004002593065836,
      0.007297862222724]
    t_merge_cliques: [0.003644493268304, 0.003371395233961, 0.003691261306685, 0.010151395309063,
      0.003824055225884, 0.005403927354557, 0.006694998311913, 0.011766770182201,
      0.003837027382516, 0.007704436921352]
- Output:
    clique_trees:
    - avg_size: [252.0, 127.25, 252.0, 169.33333333333334, 252.5, 252.0, 128.5, 252.5,
        252.0, 127.25]
      avg_weight: [4.0, 3.0, 4.0, 4.0, 5.0, 4.0, 4.666666666666667, 5.0, 4.0, 3.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {16: 1, 488: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3, 497: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {9: 1, 496: 1}
      - !!python/object/apply:collections.Counter
        - {8: 1, 496: 1}
      - !!python/object/apply:collections.Counter
        - {5: 2, 7: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {8: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 494: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3, 497: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 3}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2, 6: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {3: 3}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9990415496628609, 0.9999269865736422, 0.9998783168790714,
        0.9998945395841614, 0.9997882494746958, 0.999820820641462, 0.9998864281658149,
        0.9998539838084267, 0.9996798292422625, 0.9999269865736422]
      max_size: [488, 497, 497, 497, 496, 496, 497, 497, 494, 497]
      max_weight: [4, 3, 4, 4, 5, 4, 6, 5, 4, 3]
      min_size: [16, 4, 7, 5, 9, 8, 5, 8, 10, 4]
      min_weight: [4, 3, 4, 4, 5, 4, 4, 5, 4, 3]
      num: [2, 4, 2, 3, 2, 2, 4, 2, 2, 4]
      num_edges: [1, 3, 1, 2, 1, 1, 3, 1, 1, 3]
      sum_size: [504, 509, 504, 508, 505, 504, 514, 505, 504, 509]
      sum_weight: [4, 9, 4, 8, 5, 4, 14, 5, 4, 9]
      width: [1, 3, 1, 2, 1, 1, 3, 1, 1, 3]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 123502.5,
    n: 500, seed: None}
  Stats:
    edges: [118942, 123265, 123271, 123269, 122786, 122782, 123270, 123274, 121810,
      123265]
    randoms: [1207, 1152, 1205, 1260, 1244, 1211, 1196, 1346, 1155, 1260]
    total: [0.009886831588294, 0.008373527105492, 0.007538529865489, 0.015575805016196,
      0.007945787309203, 0.007817772605604, 0.008247560637151, 0.009649577670958,
      0.012451222130772, 0.032984780587919]
  Times:
    t_expand_cliques: [0.004979601283697, 0.004417019332951, 0.004169524239328, 0.010829702551862,
      0.003755439344756, 0.004001568948207, 0.004733471680246, 0.00415689345524, 0.008684176119557,
      0.029550914178601]
    t_merge_cliques: [0.004907230304596, 0.003956507772541, 0.003369005626161, 0.004746102464334,
      0.004190347964447, 0.003816203657397, 0.003514088956905, 0.005492684215719,
      0.003767046011215, 0.003433866409317]
- Output:
    clique_trees:
    - avg_size: [169.66666666666666, 169.33333333333334, 252.0, 169.66666666666666,
        127.25, 169.33333333333334, 252.5, 252.0, 252.5, 169.33333333333334]
      avg_weight: [4.5, 4.0, 4.0, 4.5, 3.0, 4.0, 5.0, 4.0, 5.0, 4.0]
      distribution_size:
      - !!python/object/apply:collections.Counter
        - {5: 1, 7: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {6: 2, 497: 1}
      - !!python/object/apply:collections.Counter
        - {4: 3, 497: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 495: 1}
      - !!python/object/apply:collections.Counter
        - {7: 1, 497: 1}
      - !!python/object/apply:collections.Counter
        - {10: 1, 495: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1, 6: 1, 497: 1}
      distribution_weight:
      - !!python/object/apply:collections.Counter
        - {4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1, 5: 1}
      - !!python/object/apply:collections.Counter
        - {3: 3}
      - !!python/object/apply:collections.Counter
        - {4: 2}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 1}
      - !!python/object/apply:collections.Counter
        - {5: 1}
      - !!python/object/apply:collections.Counter
        - {4: 2}
      height: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      max_clique_edge_distribution: [0.9998783168790714, 0.9998945395841614, 0.9998783168790714,
        0.9998864281658149, 0.9999269865736422, 0.9998945395841614, 0.9997138184791496,
        0.9998783168790714, 0.9997138184791496, 0.9998945395841614]
      max_size: [497, 497, 497, 497, 497, 497, 495, 497, 495, 497]
      max_weight: [5, 4, 4, 5, 3, 4, 5, 4, 5, 4]
      min_size: [5, 5, 7, 6, 4, 5, 10, 7, 10, 5]
      min_weight: [4, 4, 4, 4, 3, 4, 5, 4, 5, 4]
      num: [3, 3, 2, 3, 4, 3, 2, 2, 2, 3]
      num_edges: [2, 2, 1, 2, 3, 2, 1, 1, 1, 2]
      sum_size: [509, 508, 504, 509, 509, 508, 505, 504, 505, 508]
      sum_weight: [9, 8, 4, 9, 9, 8, 5, 4, 5, 8]
      width: [2, 2, 1, 2, 3, 2, 1, 1, 1, 2]
    nodes: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
  Parameters: {Algorithm: SortedMinSepMVA, edge_density: 0.99, edges_bound: 123502.5,
    n: 500, seed: None}
  Stats:
    edges: [123271, 123269, 123271, 123270, 123265, 123269, 122300, 123271, 122300,
      123269]
    randoms: [1259, 1225, 1232, 1229, 1168, 1224, 1322, 1202, 1239, 1175]
    total: [0.010194749622015, 0.008046150836823, 0.013044186237839, 0.012508231345441,
      0.013874062889698, 0.015207122669834, 0.0229108768461, 0.017683097723694, 0.007946811426832,
      0.009189748855634]
  Times:
    t_expand_cliques: [0.006773513996786, 0.004598970898332, 0.005532283430699, 0.005975043618877,
      0.006847591838602, 0.006555718314398, 0.00830218024402, 0.004949901872463, 0.004235409140113,
      0.005310049905252]
    t_merge_cliques: [0.003421235625229, 0.003447179938491, 0.00751190280714, 0.006533187726565,
      0.007026471051096, 0.008651404355436, 0.01460869660208, 0.012733195851231, 0.003711402286718,
      0.003879698950382]
